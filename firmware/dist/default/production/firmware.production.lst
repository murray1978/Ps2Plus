

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 22 09:32:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0xCA0,32
    43                           	dabs	1,0xC20,80
    44                           	dabs	1,0xBA0,80
    45                           	dabs	1,0xB30,64
    46                           	dabs	1,0xB20,16
    47                           	dabs	1,0xAA0,80
    48                           	dabs	1,0xA20,80
    49                           	dabs	1,0x9A0,80
    50                           	dabs	1,0x920,80
    51                           	dabs	1,0x8A0,80
    52                           	dabs	1,0x820,80
    53                           	dabs	1,0x7E0,16
    54                           	dabs	1,0x7A0,64
    55                           	dabs	1,0x720,80
    56                           	dabs	1,0x6A0,80
    57                           	dabs	1,0x650,32
    58                           	dabs	1,0x23F0,0,_lutRY
    59                           	dabs	1,0x24F0,0,_lutRX
    60                           	dabs	1,0x25F0,0,_lutLY
    61                           	dabs	1,0x26F0,0,_lutLX
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.10
    65                           ; Generated 31/07/2019 GMT
    66                           ; 
    67                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC16F18876 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  0008                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001C                     	;# 
   126  001C                     	;# 
   127  001D                     	;# 
   128  001D                     	;# 
   129  001E                     	;# 
   130  001F                     	;# 
   131  008C                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0110                     	;# 
   158  0110                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0112                     	;# 
   162  0113                     	;# 
   163  0114                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0116                     	;# 
   168  0117                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  0119                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011A                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011C                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011D                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011E                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  018E                     	;# 
   197  018F                     	;# 
   198  0190                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0196                     	;# 
   202  0197                     	;# 
   203  0198                     	;# 
   204  0199                     	;# 
   205  019A                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  020C                     	;# 
   209  020C                     	;# 
   210  020D                     	;# 
   211  020E                     	;# 
   212  020F                     	;# 
   213  020F                     	;# 
   214  0210                     	;# 
   215  0210                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0214                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0216                     	;# 
   226  0217                     	;# 
   227  0217                     	;# 
   228  0218                     	;# 
   229  0218                     	;# 
   230  0219                     	;# 
   231  021A                     	;# 
   232  021B                     	;# 
   233  021B                     	;# 
   234  021C                     	;# 
   235  021C                     	;# 
   236  021D                     	;# 
   237  021D                     	;# 
   238  021E                     	;# 
   239  021F                     	;# 
   240  028C                     	;# 
   241  028C                     	;# 
   242  028D                     	;# 
   243  028D                     	;# 
   244  028E                     	;# 
   245  028F                     	;# 
   246  0290                     	;# 
   247  0290                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0292                     	;# 
   251  0293                     	;# 
   252  0293                     	;# 
   253  0294                     	;# 
   254  0295                     	;# 
   255  0296                     	;# 
   256  0296                     	;# 
   257  0297                     	;# 
   258  0298                     	;# 
   259  0298                     	;# 
   260  0299                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  029B                     	;# 
   264  029C                     	;# 
   265  029C                     	;# 
   266  029D                     	;# 
   267  030C                     	;# 
   268  030C                     	;# 
   269  030D                     	;# 
   270  030E                     	;# 
   271  030F                     	;# 
   272  0310                     	;# 
   273  0310                     	;# 
   274  0311                     	;# 
   275  0312                     	;# 
   276  0313                     	;# 
   277  0314                     	;# 
   278  0314                     	;# 
   279  0315                     	;# 
   280  0316                     	;# 
   281  0317                     	;# 
   282  0318                     	;# 
   283  0318                     	;# 
   284  0319                     	;# 
   285  031A                     	;# 
   286  031B                     	;# 
   287  031C                     	;# 
   288  031C                     	;# 
   289  031D                     	;# 
   290  031E                     	;# 
   291  031F                     	;# 
   292  038C                     	;# 
   293  038C                     	;# 
   294  038D                     	;# 
   295  038E                     	;# 
   296  0390                     	;# 
   297  0390                     	;# 
   298  0391                     	;# 
   299  0392                     	;# 
   300  040C                     	;# 
   301  040D                     	;# 
   302  040E                     	;# 
   303  040F                     	;# 
   304  0410                     	;# 
   305  0411                     	;# 
   306  0416                     	;# 
   307  0416                     	;# 
   308  0417                     	;# 
   309  0418                     	;# 
   310  0418                     	;# 
   311  0419                     	;# 
   312  041A                     	;# 
   313  041A                     	;# 
   314  041B                     	;# 
   315  041C                     	;# 
   316  041C                     	;# 
   317  041D                     	;# 
   318  041E                     	;# 
   319  041F                     	;# 
   320  048C                     	;# 
   321  048C                     	;# 
   322  048D                     	;# 
   323  048E                     	;# 
   324  048F                     	;# 
   325  048F                     	;# 
   326  0490                     	;# 
   327  0491                     	;# 
   328  0492                     	;# 
   329  0492                     	;# 
   330  0493                     	;# 
   331  0494                     	;# 
   332  0495                     	;# 
   333  0495                     	;# 
   334  0496                     	;# 
   335  0497                     	;# 
   336  0498                     	;# 
   337  0499                     	;# 
   338  049A                     	;# 
   339  049B                     	;# 
   340  049C                     	;# 
   341  049D                     	;# 
   342  050C                     	;# 
   343  050C                     	;# 
   344  050D                     	;# 
   345  050E                     	;# 
   346  050F                     	;# 
   347  050F                     	;# 
   348  0510                     	;# 
   349  0511                     	;# 
   350  0512                     	;# 
   351  0512                     	;# 
   352  0513                     	;# 
   353  0514                     	;# 
   354  0515                     	;# 
   355  0515                     	;# 
   356  0516                     	;# 
   357  0517                     	;# 
   358  0518                     	;# 
   359  0519                     	;# 
   360  051A                     	;# 
   361  051B                     	;# 
   362  051C                     	;# 
   363  051D                     	;# 
   364  058C                     	;# 
   365  058C                     	;# 
   366  058D                     	;# 
   367  058E                     	;# 
   368  058F                     	;# 
   369  058F                     	;# 
   370  0590                     	;# 
   371  0591                     	;# 
   372  0592                     	;# 
   373  0593                     	;# 
   374  060C                     	;# 
   375  060D                     	;# 
   376  060E                     	;# 
   377  060F                     	;# 
   378  0610                     	;# 
   379  0611                     	;# 
   380  0612                     	;# 
   381  0613                     	;# 
   382  0614                     	;# 
   383  0616                     	;# 
   384  0617                     	;# 
   385  0618                     	;# 
   386  0619                     	;# 
   387  061A                     	;# 
   388  061B                     	;# 
   389  061C                     	;# 
   390  061D                     	;# 
   391  061E                     	;# 
   392  068C                     	;# 
   393  068D                     	;# 
   394  068E                     	;# 
   395  068F                     	;# 
   396  0690                     	;# 
   397  0691                     	;# 
   398  0692                     	;# 
   399  0693                     	;# 
   400  0694                     	;# 
   401  070C                     	;# 
   402  070D                     	;# 
   403  070E                     	;# 
   404  070F                     	;# 
   405  0710                     	;# 
   406  0711                     	;# 
   407  0712                     	;# 
   408  0713                     	;# 
   409  0714                     	;# 
   410  0716                     	;# 
   411  0717                     	;# 
   412  0718                     	;# 
   413  0719                     	;# 
   414  071A                     	;# 
   415  071B                     	;# 
   416  071C                     	;# 
   417  071D                     	;# 
   418  071E                     	;# 
   419  0796                     	;# 
   420  0797                     	;# 
   421  0798                     	;# 
   422  0799                     	;# 
   423  079A                     	;# 
   424  079B                     	;# 
   425  080C                     	;# 
   426  080D                     	;# 
   427  080E                     	;# 
   428  080F                     	;# 
   429  0810                     	;# 
   430  0811                     	;# 
   431  0812                     	;# 
   432  0813                     	;# 
   433  0814                     	;# 
   434  081A                     	;# 
   435  081B                     	;# 
   436  081C                     	;# 
   437  081D                     	;# 
   438  081E                     	;# 
   439  081F                     	;# 
   440  088C                     	;# 
   441  088D                     	;# 
   442  088E                     	;# 
   443  088F                     	;# 
   444  0890                     	;# 
   445  0891                     	;# 
   446  0892                     	;# 
   447  0893                     	;# 
   448  0895                     	;# 
   449  0896                     	;# 
   450  0897                     	;# 
   451  0898                     	;# 
   452  0899                     	;# 
   453  089A                     	;# 
   454  089B                     	;# 
   455  090C                     	;# 
   456  090E                     	;# 
   457  090F                     	;# 
   458  091F                     	;# 
   459  098F                     	;# 
   460  098F                     	;# 
   461  0990                     	;# 
   462  0991                     	;# 
   463  0992                     	;# 
   464  0993                     	;# 
   465  0994                     	;# 
   466  0995                     	;# 
   467  0996                     	;# 
   468  0997                     	;# 
   469  0E0F                     	;# 
   470  0E10                     	;# 
   471  0E11                     	;# 
   472  0E12                     	;# 
   473  0E13                     	;# 
   474  0E14                     	;# 
   475  0E15                     	;# 
   476  0E16                     	;# 
   477  0E17                     	;# 
   478  0E18                     	;# 
   479  0E19                     	;# 
   480  0E1A                     	;# 
   481  0E1B                     	;# 
   482  0E1C                     	;# 
   483  0E1D                     	;# 
   484  0E1E                     	;# 
   485  0E1F                     	;# 
   486  0E20                     	;# 
   487  0E21                     	;# 
   488  0E22                     	;# 
   489  0E23                     	;# 
   490  0E24                     	;# 
   491  0E25                     	;# 
   492  0E26                     	;# 
   493  0E27                     	;# 
   494  0E28                     	;# 
   495  0E29                     	;# 
   496  0E2A                     	;# 
   497  0E2B                     	;# 
   498  0E2C                     	;# 
   499  0E2D                     	;# 
   500  0E2E                     	;# 
   501  0E2F                     	;# 
   502  0E30                     	;# 
   503  0E31                     	;# 
   504  0E32                     	;# 
   505  0E33                     	;# 
   506  0E34                     	;# 
   507  0E35                     	;# 
   508  0E36                     	;# 
   509  0E37                     	;# 
   510  0E8F                     	;# 
   511  0E90                     	;# 
   512  0E91                     	;# 
   513  0E92                     	;# 
   514  0E93                     	;# 
   515  0E94                     	;# 
   516  0E95                     	;# 
   517  0E96                     	;# 
   518  0E97                     	;# 
   519  0E9C                     	;# 
   520  0E9D                     	;# 
   521  0E9E                     	;# 
   522  0EA1                     	;# 
   523  0EA2                     	;# 
   524  0EA3                     	;# 
   525  0EA4                     	;# 
   526  0EA5                     	;# 
   527  0EA9                     	;# 
   528  0EAA                     	;# 
   529  0EAB                     	;# 
   530  0EAC                     	;# 
   531  0EB1                     	;# 
   532  0EB2                     	;# 
   533  0EB3                     	;# 
   534  0EB8                     	;# 
   535  0EB9                     	;# 
   536  0EBA                     	;# 
   537  0EBB                     	;# 
   538  0EBC                     	;# 
   539  0EBD                     	;# 
   540  0EBE                     	;# 
   541  0EC3                     	;# 
   542  0EC5                     	;# 
   543  0EC6                     	;# 
   544  0EC7                     	;# 
   545  0EC8                     	;# 
   546  0EC9                     	;# 
   547  0ECA                     	;# 
   548  0ECB                     	;# 
   549  0ECC                     	;# 
   550  0F10                     	;# 
   551  0F11                     	;# 
   552  0F12                     	;# 
   553  0F13                     	;# 
   554  0F14                     	;# 
   555  0F15                     	;# 
   556  0F16                     	;# 
   557  0F17                     	;# 
   558  0F18                     	;# 
   559  0F19                     	;# 
   560  0F1A                     	;# 
   561  0F1B                     	;# 
   562  0F1C                     	;# 
   563  0F1D                     	;# 
   564  0F1E                     	;# 
   565  0F1F                     	;# 
   566  0F20                     	;# 
   567  0F21                     	;# 
   568  0F22                     	;# 
   569  0F23                     	;# 
   570  0F24                     	;# 
   571  0F25                     	;# 
   572  0F26                     	;# 
   573  0F27                     	;# 
   574  0F28                     	;# 
   575  0F29                     	;# 
   576  0F2A                     	;# 
   577  0F2B                     	;# 
   578  0F2C                     	;# 
   579  0F2D                     	;# 
   580  0F2E                     	;# 
   581  0F2F                     	;# 
   582  0F30                     	;# 
   583  0F31                     	;# 
   584  0F32                     	;# 
   585  0F38                     	;# 
   586  0F39                     	;# 
   587  0F3A                     	;# 
   588  0F3B                     	;# 
   589  0F3C                     	;# 
   590  0F3D                     	;# 
   591  0F3E                     	;# 
   592  0F3F                     	;# 
   593  0F40                     	;# 
   594  0F41                     	;# 
   595  0F43                     	;# 
   596  0F44                     	;# 
   597  0F45                     	;# 
   598  0F46                     	;# 
   599  0F47                     	;# 
   600  0F48                     	;# 
   601  0F49                     	;# 
   602  0F4A                     	;# 
   603  0F4B                     	;# 
   604  0F4C                     	;# 
   605  0F4E                     	;# 
   606  0F4F                     	;# 
   607  0F50                     	;# 
   608  0F51                     	;# 
   609  0F52                     	;# 
   610  0F53                     	;# 
   611  0F54                     	;# 
   612  0F55                     	;# 
   613  0F56                     	;# 
   614  0F57                     	;# 
   615  0F59                     	;# 
   616  0F5A                     	;# 
   617  0F5B                     	;# 
   618  0F5C                     	;# 
   619  0F5D                     	;# 
   620  0F61                     	;# 
   621  0F62                     	;# 
   622  0F64                     	;# 
   623  0F65                     	;# 
   624  0F66                     	;# 
   625  0F67                     	;# 
   626  0F68                     	;# 
   627  0F69                     	;# 
   628  0F6A                     	;# 
   629  0F6B                     	;# 
   630  0F6C                     	;# 
   631  0F6D                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001C                     	;# 
   671  001C                     	;# 
   672  001D                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  008C                     	;# 
   677  008C                     	;# 
   678  008D                     	;# 
   679  008E                     	;# 
   680  008E                     	;# 
   681  008F                     	;# 
   682  0090                     	;# 
   683  0090                     	;# 
   684  0091                     	;# 
   685  0093                     	;# 
   686  0094                     	;# 
   687  0095                     	;# 
   688  0096                     	;# 
   689  0097                     	;# 
   690  0098                     	;# 
   691  0099                     	;# 
   692  009A                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010E                     	;# 
   701  010F                     	;# 
   702  0110                     	;# 
   703  0110                     	;# 
   704  0111                     	;# 
   705  0112                     	;# 
   706  0112                     	;# 
   707  0113                     	;# 
   708  0114                     	;# 
   709  0114                     	;# 
   710  0115                     	;# 
   711  0116                     	;# 
   712  0116                     	;# 
   713  0117                     	;# 
   714  0119                     	;# 
   715  0119                     	;# 
   716  0119                     	;# 
   717  011A                     	;# 
   718  011A                     	;# 
   719  011A                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011C                     	;# 
   726  011C                     	;# 
   727  011C                     	;# 
   728  011D                     	;# 
   729  011D                     	;# 
   730  011D                     	;# 
   731  011E                     	;# 
   732  011E                     	;# 
   733  011E                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  018C                     	;# 
   740  018D                     	;# 
   741  018E                     	;# 
   742  018F                     	;# 
   743  0190                     	;# 
   744  0191                     	;# 
   745  0192                     	;# 
   746  0196                     	;# 
   747  0197                     	;# 
   748  0198                     	;# 
   749  0199                     	;# 
   750  019A                     	;# 
   751  019B                     	;# 
   752  019C                     	;# 
   753  020C                     	;# 
   754  020C                     	;# 
   755  020D                     	;# 
   756  020E                     	;# 
   757  020F                     	;# 
   758  020F                     	;# 
   759  0210                     	;# 
   760  0210                     	;# 
   761  0211                     	;# 
   762  0211                     	;# 
   763  0212                     	;# 
   764  0212                     	;# 
   765  0213                     	;# 
   766  0214                     	;# 
   767  0215                     	;# 
   768  0215                     	;# 
   769  0216                     	;# 
   770  0216                     	;# 
   771  0217                     	;# 
   772  0217                     	;# 
   773  0218                     	;# 
   774  0218                     	;# 
   775  0219                     	;# 
   776  021A                     	;# 
   777  021B                     	;# 
   778  021B                     	;# 
   779  021C                     	;# 
   780  021C                     	;# 
   781  021D                     	;# 
   782  021D                     	;# 
   783  021E                     	;# 
   784  021F                     	;# 
   785  028C                     	;# 
   786  028C                     	;# 
   787  028D                     	;# 
   788  028D                     	;# 
   789  028E                     	;# 
   790  028F                     	;# 
   791  0290                     	;# 
   792  0290                     	;# 
   793  0291                     	;# 
   794  0292                     	;# 
   795  0292                     	;# 
   796  0293                     	;# 
   797  0293                     	;# 
   798  0294                     	;# 
   799  0295                     	;# 
   800  0296                     	;# 
   801  0296                     	;# 
   802  0297                     	;# 
   803  0298                     	;# 
   804  0298                     	;# 
   805  0299                     	;# 
   806  0299                     	;# 
   807  029A                     	;# 
   808  029B                     	;# 
   809  029C                     	;# 
   810  029C                     	;# 
   811  029D                     	;# 
   812  030C                     	;# 
   813  030C                     	;# 
   814  030D                     	;# 
   815  030E                     	;# 
   816  030F                     	;# 
   817  0310                     	;# 
   818  0310                     	;# 
   819  0311                     	;# 
   820  0312                     	;# 
   821  0313                     	;# 
   822  0314                     	;# 
   823  0314                     	;# 
   824  0315                     	;# 
   825  0316                     	;# 
   826  0317                     	;# 
   827  0318                     	;# 
   828  0318                     	;# 
   829  0319                     	;# 
   830  031A                     	;# 
   831  031B                     	;# 
   832  031C                     	;# 
   833  031C                     	;# 
   834  031D                     	;# 
   835  031E                     	;# 
   836  031F                     	;# 
   837  038C                     	;# 
   838  038C                     	;# 
   839  038D                     	;# 
   840  038E                     	;# 
   841  0390                     	;# 
   842  0390                     	;# 
   843  0391                     	;# 
   844  0392                     	;# 
   845  040C                     	;# 
   846  040D                     	;# 
   847  040E                     	;# 
   848  040F                     	;# 
   849  0410                     	;# 
   850  0411                     	;# 
   851  0416                     	;# 
   852  0416                     	;# 
   853  0417                     	;# 
   854  0418                     	;# 
   855  0418                     	;# 
   856  0419                     	;# 
   857  041A                     	;# 
   858  041A                     	;# 
   859  041B                     	;# 
   860  041C                     	;# 
   861  041C                     	;# 
   862  041D                     	;# 
   863  041E                     	;# 
   864  041F                     	;# 
   865  048C                     	;# 
   866  048C                     	;# 
   867  048D                     	;# 
   868  048E                     	;# 
   869  048F                     	;# 
   870  048F                     	;# 
   871  0490                     	;# 
   872  0491                     	;# 
   873  0492                     	;# 
   874  0492                     	;# 
   875  0493                     	;# 
   876  0494                     	;# 
   877  0495                     	;# 
   878  0495                     	;# 
   879  0496                     	;# 
   880  0497                     	;# 
   881  0498                     	;# 
   882  0499                     	;# 
   883  049A                     	;# 
   884  049B                     	;# 
   885  049C                     	;# 
   886  049D                     	;# 
   887  050C                     	;# 
   888  050C                     	;# 
   889  050D                     	;# 
   890  050E                     	;# 
   891  050F                     	;# 
   892  050F                     	;# 
   893  0510                     	;# 
   894  0511                     	;# 
   895  0512                     	;# 
   896  0512                     	;# 
   897  0513                     	;# 
   898  0514                     	;# 
   899  0515                     	;# 
   900  0515                     	;# 
   901  0516                     	;# 
   902  0517                     	;# 
   903  0518                     	;# 
   904  0519                     	;# 
   905  051A                     	;# 
   906  051B                     	;# 
   907  051C                     	;# 
   908  051D                     	;# 
   909  058C                     	;# 
   910  058C                     	;# 
   911  058D                     	;# 
   912  058E                     	;# 
   913  058F                     	;# 
   914  058F                     	;# 
   915  0590                     	;# 
   916  0591                     	;# 
   917  0592                     	;# 
   918  0593                     	;# 
   919  060C                     	;# 
   920  060D                     	;# 
   921  060E                     	;# 
   922  060F                     	;# 
   923  0610                     	;# 
   924  0611                     	;# 
   925  0612                     	;# 
   926  0613                     	;# 
   927  0614                     	;# 
   928  0616                     	;# 
   929  0617                     	;# 
   930  0618                     	;# 
   931  0619                     	;# 
   932  061A                     	;# 
   933  061B                     	;# 
   934  061C                     	;# 
   935  061D                     	;# 
   936  061E                     	;# 
   937  068C                     	;# 
   938  068D                     	;# 
   939  068E                     	;# 
   940  068F                     	;# 
   941  0690                     	;# 
   942  0691                     	;# 
   943  0692                     	;# 
   944  0693                     	;# 
   945  0694                     	;# 
   946  070C                     	;# 
   947  070D                     	;# 
   948  070E                     	;# 
   949  070F                     	;# 
   950  0710                     	;# 
   951  0711                     	;# 
   952  0712                     	;# 
   953  0713                     	;# 
   954  0714                     	;# 
   955  0716                     	;# 
   956  0717                     	;# 
   957  0718                     	;# 
   958  0719                     	;# 
   959  071A                     	;# 
   960  071B                     	;# 
   961  071C                     	;# 
   962  071D                     	;# 
   963  071E                     	;# 
   964  0796                     	;# 
   965  0797                     	;# 
   966  0798                     	;# 
   967  0799                     	;# 
   968  079A                     	;# 
   969  079B                     	;# 
   970  080C                     	;# 
   971  080D                     	;# 
   972  080E                     	;# 
   973  080F                     	;# 
   974  0810                     	;# 
   975  0811                     	;# 
   976  0812                     	;# 
   977  0813                     	;# 
   978  0814                     	;# 
   979  081A                     	;# 
   980  081B                     	;# 
   981  081C                     	;# 
   982  081D                     	;# 
   983  081E                     	;# 
   984  081F                     	;# 
   985  088C                     	;# 
   986  088D                     	;# 
   987  088E                     	;# 
   988  088F                     	;# 
   989  0890                     	;# 
   990  0891                     	;# 
   991  0892                     	;# 
   992  0893                     	;# 
   993  0895                     	;# 
   994  0896                     	;# 
   995  0897                     	;# 
   996  0898                     	;# 
   997  0899                     	;# 
   998  089A                     	;# 
   999  089B                     	;# 
  1000  090C                     	;# 
  1001  090E                     	;# 
  1002  090F                     	;# 
  1003  091F                     	;# 
  1004  098F                     	;# 
  1005  098F                     	;# 
  1006  0990                     	;# 
  1007  0991                     	;# 
  1008  0992                     	;# 
  1009  0993                     	;# 
  1010  0994                     	;# 
  1011  0995                     	;# 
  1012  0996                     	;# 
  1013  0997                     	;# 
  1014  0E0F                     	;# 
  1015  0E10                     	;# 
  1016  0E11                     	;# 
  1017  0E12                     	;# 
  1018  0E13                     	;# 
  1019  0E14                     	;# 
  1020  0E15                     	;# 
  1021  0E16                     	;# 
  1022  0E17                     	;# 
  1023  0E18                     	;# 
  1024  0E19                     	;# 
  1025  0E1A                     	;# 
  1026  0E1B                     	;# 
  1027  0E1C                     	;# 
  1028  0E1D                     	;# 
  1029  0E1E                     	;# 
  1030  0E1F                     	;# 
  1031  0E20                     	;# 
  1032  0E21                     	;# 
  1033  0E22                     	;# 
  1034  0E23                     	;# 
  1035  0E24                     	;# 
  1036  0E25                     	;# 
  1037  0E26                     	;# 
  1038  0E27                     	;# 
  1039  0E28                     	;# 
  1040  0E29                     	;# 
  1041  0E2A                     	;# 
  1042  0E2B                     	;# 
  1043  0E2C                     	;# 
  1044  0E2D                     	;# 
  1045  0E2E                     	;# 
  1046  0E2F                     	;# 
  1047  0E30                     	;# 
  1048  0E31                     	;# 
  1049  0E32                     	;# 
  1050  0E33                     	;# 
  1051  0E34                     	;# 
  1052  0E35                     	;# 
  1053  0E36                     	;# 
  1054  0E37                     	;# 
  1055  0E8F                     	;# 
  1056  0E90                     	;# 
  1057  0E91                     	;# 
  1058  0E92                     	;# 
  1059  0E93                     	;# 
  1060  0E94                     	;# 
  1061  0E95                     	;# 
  1062  0E96                     	;# 
  1063  0E97                     	;# 
  1064  0E9C                     	;# 
  1065  0E9D                     	;# 
  1066  0E9E                     	;# 
  1067  0EA1                     	;# 
  1068  0EA2                     	;# 
  1069  0EA3                     	;# 
  1070  0EA4                     	;# 
  1071  0EA5                     	;# 
  1072  0EA9                     	;# 
  1073  0EAA                     	;# 
  1074  0EAB                     	;# 
  1075  0EAC                     	;# 
  1076  0EB1                     	;# 
  1077  0EB2                     	;# 
  1078  0EB3                     	;# 
  1079  0EB8                     	;# 
  1080  0EB9                     	;# 
  1081  0EBA                     	;# 
  1082  0EBB                     	;# 
  1083  0EBC                     	;# 
  1084  0EBD                     	;# 
  1085  0EBE                     	;# 
  1086  0EC3                     	;# 
  1087  0EC5                     	;# 
  1088  0EC6                     	;# 
  1089  0EC7                     	;# 
  1090  0EC8                     	;# 
  1091  0EC9                     	;# 
  1092  0ECA                     	;# 
  1093  0ECB                     	;# 
  1094  0ECC                     	;# 
  1095  0F10                     	;# 
  1096  0F11                     	;# 
  1097  0F12                     	;# 
  1098  0F13                     	;# 
  1099  0F14                     	;# 
  1100  0F15                     	;# 
  1101  0F16                     	;# 
  1102  0F17                     	;# 
  1103  0F18                     	;# 
  1104  0F19                     	;# 
  1105  0F1A                     	;# 
  1106  0F1B                     	;# 
  1107  0F1C                     	;# 
  1108  0F1D                     	;# 
  1109  0F1E                     	;# 
  1110  0F1F                     	;# 
  1111  0F20                     	;# 
  1112  0F21                     	;# 
  1113  0F22                     	;# 
  1114  0F23                     	;# 
  1115  0F24                     	;# 
  1116  0F25                     	;# 
  1117  0F26                     	;# 
  1118  0F27                     	;# 
  1119  0F28                     	;# 
  1120  0F29                     	;# 
  1121  0F2A                     	;# 
  1122  0F2B                     	;# 
  1123  0F2C                     	;# 
  1124  0F2D                     	;# 
  1125  0F2E                     	;# 
  1126  0F2F                     	;# 
  1127  0F30                     	;# 
  1128  0F31                     	;# 
  1129  0F32                     	;# 
  1130  0F38                     	;# 
  1131  0F39                     	;# 
  1132  0F3A                     	;# 
  1133  0F3B                     	;# 
  1134  0F3C                     	;# 
  1135  0F3D                     	;# 
  1136  0F3E                     	;# 
  1137  0F3F                     	;# 
  1138  0F40                     	;# 
  1139  0F41                     	;# 
  1140  0F43                     	;# 
  1141  0F44                     	;# 
  1142  0F45                     	;# 
  1143  0F46                     	;# 
  1144  0F47                     	;# 
  1145  0F48                     	;# 
  1146  0F49                     	;# 
  1147  0F4A                     	;# 
  1148  0F4B                     	;# 
  1149  0F4C                     	;# 
  1150  0F4E                     	;# 
  1151  0F4F                     	;# 
  1152  0F50                     	;# 
  1153  0F51                     	;# 
  1154  0F52                     	;# 
  1155  0F53                     	;# 
  1156  0F54                     	;# 
  1157  0F55                     	;# 
  1158  0F56                     	;# 
  1159  0F57                     	;# 
  1160  0F59                     	;# 
  1161  0F5A                     	;# 
  1162  0F5B                     	;# 
  1163  0F5C                     	;# 
  1164  0F5D                     	;# 
  1165  0F61                     	;# 
  1166  0F62                     	;# 
  1167  0F64                     	;# 
  1168  0F65                     	;# 
  1169  0F66                     	;# 
  1170  0F67                     	;# 
  1171  0F68                     	;# 
  1172  0F69                     	;# 
  1173  0F6A                     	;# 
  1174  0F6B                     	;# 
  1175  0F6C                     	;# 
  1176  0F6D                     	;# 
  1177  0FE4                     	;# 
  1178  0FE5                     	;# 
  1179  0FE6                     	;# 
  1180  0FE7                     	;# 
  1181  0FE8                     	;# 
  1182  0FE9                     	;# 
  1183  0FEA                     	;# 
  1184  0FEB                     	;# 
  1185  0FED                     	;# 
  1186  0FEE                     	;# 
  1187  0FEF                     	;# 
  1188  0000                     	;# 
  1189  0001                     	;# 
  1190  0002                     	;# 
  1191  0003                     	;# 
  1192  0004                     	;# 
  1193  0005                     	;# 
  1194  0006                     	;# 
  1195  0007                     	;# 
  1196  0008                     	;# 
  1197  0009                     	;# 
  1198  000A                     	;# 
  1199  000B                     	;# 
  1200  000C                     	;# 
  1201  000D                     	;# 
  1202  000E                     	;# 
  1203  000F                     	;# 
  1204  0010                     	;# 
  1205  0011                     	;# 
  1206  0012                     	;# 
  1207  0013                     	;# 
  1208  0014                     	;# 
  1209  0015                     	;# 
  1210  0016                     	;# 
  1211  0017                     	;# 
  1212  0018                     	;# 
  1213  0019                     	;# 
  1214  001A                     	;# 
  1215  001C                     	;# 
  1216  001C                     	;# 
  1217  001D                     	;# 
  1218  001D                     	;# 
  1219  001E                     	;# 
  1220  001F                     	;# 
  1221  008C                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  008E                     	;# 
  1225  008E                     	;# 
  1226  008F                     	;# 
  1227  0090                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0093                     	;# 
  1231  0094                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0097                     	;# 
  1235  0098                     	;# 
  1236  0099                     	;# 
  1237  009A                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010E                     	;# 
  1246  010F                     	;# 
  1247  0110                     	;# 
  1248  0110                     	;# 
  1249  0111                     	;# 
  1250  0112                     	;# 
  1251  0112                     	;# 
  1252  0113                     	;# 
  1253  0114                     	;# 
  1254  0114                     	;# 
  1255  0115                     	;# 
  1256  0116                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  0119                     	;# 
  1260  0119                     	;# 
  1261  0119                     	;# 
  1262  011A                     	;# 
  1263  011A                     	;# 
  1264  011A                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011B                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011C                     	;# 
  1271  011C                     	;# 
  1272  011C                     	;# 
  1273  011D                     	;# 
  1274  011D                     	;# 
  1275  011D                     	;# 
  1276  011E                     	;# 
  1277  011E                     	;# 
  1278  011E                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  011F                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  018C                     	;# 
  1285  018D                     	;# 
  1286  018E                     	;# 
  1287  018F                     	;# 
  1288  0190                     	;# 
  1289  0191                     	;# 
  1290  0192                     	;# 
  1291  0196                     	;# 
  1292  0197                     	;# 
  1293  0198                     	;# 
  1294  0199                     	;# 
  1295  019A                     	;# 
  1296  019B                     	;# 
  1297  019C                     	;# 
  1298  020C                     	;# 
  1299  020C                     	;# 
  1300  020D                     	;# 
  1301  020E                     	;# 
  1302  020F                     	;# 
  1303  020F                     	;# 
  1304  0210                     	;# 
  1305  0210                     	;# 
  1306  0211                     	;# 
  1307  0211                     	;# 
  1308  0212                     	;# 
  1309  0212                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0216                     	;# 
  1315  0216                     	;# 
  1316  0217                     	;# 
  1317  0217                     	;# 
  1318  0218                     	;# 
  1319  0218                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021B                     	;# 
  1324  021C                     	;# 
  1325  021C                     	;# 
  1326  021D                     	;# 
  1327  021D                     	;# 
  1328  021E                     	;# 
  1329  021F                     	;# 
  1330  028C                     	;# 
  1331  028C                     	;# 
  1332  028D                     	;# 
  1333  028D                     	;# 
  1334  028E                     	;# 
  1335  028F                     	;# 
  1336  0290                     	;# 
  1337  0290                     	;# 
  1338  0291                     	;# 
  1339  0292                     	;# 
  1340  0292                     	;# 
  1341  0293                     	;# 
  1342  0293                     	;# 
  1343  0294                     	;# 
  1344  0295                     	;# 
  1345  0296                     	;# 
  1346  0296                     	;# 
  1347  0297                     	;# 
  1348  0298                     	;# 
  1349  0298                     	;# 
  1350  0299                     	;# 
  1351  0299                     	;# 
  1352  029A                     	;# 
  1353  029B                     	;# 
  1354  029C                     	;# 
  1355  029C                     	;# 
  1356  029D                     	;# 
  1357  030C                     	;# 
  1358  030C                     	;# 
  1359  030D                     	;# 
  1360  030E                     	;# 
  1361  030F                     	;# 
  1362  0310                     	;# 
  1363  0310                     	;# 
  1364  0311                     	;# 
  1365  0312                     	;# 
  1366  0313                     	;# 
  1367  0314                     	;# 
  1368  0314                     	;# 
  1369  0315                     	;# 
  1370  0316                     	;# 
  1371  0317                     	;# 
  1372  0318                     	;# 
  1373  0318                     	;# 
  1374  0319                     	;# 
  1375  031A                     	;# 
  1376  031B                     	;# 
  1377  031C                     	;# 
  1378  031C                     	;# 
  1379  031D                     	;# 
  1380  031E                     	;# 
  1381  031F                     	;# 
  1382  038C                     	;# 
  1383  038C                     	;# 
  1384  038D                     	;# 
  1385  038E                     	;# 
  1386  0390                     	;# 
  1387  0390                     	;# 
  1388  0391                     	;# 
  1389  0392                     	;# 
  1390  040C                     	;# 
  1391  040D                     	;# 
  1392  040E                     	;# 
  1393  040F                     	;# 
  1394  0410                     	;# 
  1395  0411                     	;# 
  1396  0416                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  0418                     	;# 
  1401  0419                     	;# 
  1402  041A                     	;# 
  1403  041A                     	;# 
  1404  041B                     	;# 
  1405  041C                     	;# 
  1406  041C                     	;# 
  1407  041D                     	;# 
  1408  041E                     	;# 
  1409  041F                     	;# 
  1410  048C                     	;# 
  1411  048C                     	;# 
  1412  048D                     	;# 
  1413  048E                     	;# 
  1414  048F                     	;# 
  1415  048F                     	;# 
  1416  0490                     	;# 
  1417  0491                     	;# 
  1418  0492                     	;# 
  1419  0492                     	;# 
  1420  0493                     	;# 
  1421  0494                     	;# 
  1422  0495                     	;# 
  1423  0495                     	;# 
  1424  0496                     	;# 
  1425  0497                     	;# 
  1426  0498                     	;# 
  1427  0499                     	;# 
  1428  049A                     	;# 
  1429  049B                     	;# 
  1430  049C                     	;# 
  1431  049D                     	;# 
  1432  050C                     	;# 
  1433  050C                     	;# 
  1434  050D                     	;# 
  1435  050E                     	;# 
  1436  050F                     	;# 
  1437  050F                     	;# 
  1438  0510                     	;# 
  1439  0511                     	;# 
  1440  0512                     	;# 
  1441  0512                     	;# 
  1442  0513                     	;# 
  1443  0514                     	;# 
  1444  0515                     	;# 
  1445  0515                     	;# 
  1446  0516                     	;# 
  1447  0517                     	;# 
  1448  0518                     	;# 
  1449  0519                     	;# 
  1450  051A                     	;# 
  1451  051B                     	;# 
  1452  051C                     	;# 
  1453  051D                     	;# 
  1454  058C                     	;# 
  1455  058C                     	;# 
  1456  058D                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  058F                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0593                     	;# 
  1464  060C                     	;# 
  1465  060D                     	;# 
  1466  060E                     	;# 
  1467  060F                     	;# 
  1468  0610                     	;# 
  1469  0611                     	;# 
  1470  0612                     	;# 
  1471  0613                     	;# 
  1472  0614                     	;# 
  1473  0616                     	;# 
  1474  0617                     	;# 
  1475  0618                     	;# 
  1476  0619                     	;# 
  1477  061A                     	;# 
  1478  061B                     	;# 
  1479  061C                     	;# 
  1480  061D                     	;# 
  1481  061E                     	;# 
  1482  068C                     	;# 
  1483  068D                     	;# 
  1484  068E                     	;# 
  1485  068F                     	;# 
  1486  0690                     	;# 
  1487  0691                     	;# 
  1488  0692                     	;# 
  1489  0693                     	;# 
  1490  0694                     	;# 
  1491  070C                     	;# 
  1492  070D                     	;# 
  1493  070E                     	;# 
  1494  070F                     	;# 
  1495  0710                     	;# 
  1496  0711                     	;# 
  1497  0712                     	;# 
  1498  0713                     	;# 
  1499  0714                     	;# 
  1500  0716                     	;# 
  1501  0717                     	;# 
  1502  0718                     	;# 
  1503  0719                     	;# 
  1504  071A                     	;# 
  1505  071B                     	;# 
  1506  071C                     	;# 
  1507  071D                     	;# 
  1508  071E                     	;# 
  1509  0796                     	;# 
  1510  0797                     	;# 
  1511  0798                     	;# 
  1512  0799                     	;# 
  1513  079A                     	;# 
  1514  079B                     	;# 
  1515  080C                     	;# 
  1516  080D                     	;# 
  1517  080E                     	;# 
  1518  080F                     	;# 
  1519  0810                     	;# 
  1520  0811                     	;# 
  1521  0812                     	;# 
  1522  0813                     	;# 
  1523  0814                     	;# 
  1524  081A                     	;# 
  1525  081B                     	;# 
  1526  081C                     	;# 
  1527  081D                     	;# 
  1528  081E                     	;# 
  1529  081F                     	;# 
  1530  088C                     	;# 
  1531  088D                     	;# 
  1532  088E                     	;# 
  1533  088F                     	;# 
  1534  0890                     	;# 
  1535  0891                     	;# 
  1536  0892                     	;# 
  1537  0893                     	;# 
  1538  0895                     	;# 
  1539  0896                     	;# 
  1540  0897                     	;# 
  1541  0898                     	;# 
  1542  0899                     	;# 
  1543  089A                     	;# 
  1544  089B                     	;# 
  1545  090C                     	;# 
  1546  090E                     	;# 
  1547  090F                     	;# 
  1548  091F                     	;# 
  1549  098F                     	;# 
  1550  098F                     	;# 
  1551  0990                     	;# 
  1552  0991                     	;# 
  1553  0992                     	;# 
  1554  0993                     	;# 
  1555  0994                     	;# 
  1556  0995                     	;# 
  1557  0996                     	;# 
  1558  0997                     	;# 
  1559  0E0F                     	;# 
  1560  0E10                     	;# 
  1561  0E11                     	;# 
  1562  0E12                     	;# 
  1563  0E13                     	;# 
  1564  0E14                     	;# 
  1565  0E15                     	;# 
  1566  0E16                     	;# 
  1567  0E17                     	;# 
  1568  0E18                     	;# 
  1569  0E19                     	;# 
  1570  0E1A                     	;# 
  1571  0E1B                     	;# 
  1572  0E1C                     	;# 
  1573  0E1D                     	;# 
  1574  0E1E                     	;# 
  1575  0E1F                     	;# 
  1576  0E20                     	;# 
  1577  0E21                     	;# 
  1578  0E22                     	;# 
  1579  0E23                     	;# 
  1580  0E24                     	;# 
  1581  0E25                     	;# 
  1582  0E26                     	;# 
  1583  0E27                     	;# 
  1584  0E28                     	;# 
  1585  0E29                     	;# 
  1586  0E2A                     	;# 
  1587  0E2B                     	;# 
  1588  0E2C                     	;# 
  1589  0E2D                     	;# 
  1590  0E2E                     	;# 
  1591  0E2F                     	;# 
  1592  0E30                     	;# 
  1593  0E31                     	;# 
  1594  0E32                     	;# 
  1595  0E33                     	;# 
  1596  0E34                     	;# 
  1597  0E35                     	;# 
  1598  0E36                     	;# 
  1599  0E37                     	;# 
  1600  0E8F                     	;# 
  1601  0E90                     	;# 
  1602  0E91                     	;# 
  1603  0E92                     	;# 
  1604  0E93                     	;# 
  1605  0E94                     	;# 
  1606  0E95                     	;# 
  1607  0E96                     	;# 
  1608  0E97                     	;# 
  1609  0E9C                     	;# 
  1610  0E9D                     	;# 
  1611  0E9E                     	;# 
  1612  0EA1                     	;# 
  1613  0EA2                     	;# 
  1614  0EA3                     	;# 
  1615  0EA4                     	;# 
  1616  0EA5                     	;# 
  1617  0EA9                     	;# 
  1618  0EAA                     	;# 
  1619  0EAB                     	;# 
  1620  0EAC                     	;# 
  1621  0EB1                     	;# 
  1622  0EB2                     	;# 
  1623  0EB3                     	;# 
  1624  0EB8                     	;# 
  1625  0EB9                     	;# 
  1626  0EBA                     	;# 
  1627  0EBB                     	;# 
  1628  0EBC                     	;# 
  1629  0EBD                     	;# 
  1630  0EBE                     	;# 
  1631  0EC3                     	;# 
  1632  0EC5                     	;# 
  1633  0EC6                     	;# 
  1634  0EC7                     	;# 
  1635  0EC8                     	;# 
  1636  0EC9                     	;# 
  1637  0ECA                     	;# 
  1638  0ECB                     	;# 
  1639  0ECC                     	;# 
  1640  0F10                     	;# 
  1641  0F11                     	;# 
  1642  0F12                     	;# 
  1643  0F13                     	;# 
  1644  0F14                     	;# 
  1645  0F15                     	;# 
  1646  0F16                     	;# 
  1647  0F17                     	;# 
  1648  0F18                     	;# 
  1649  0F19                     	;# 
  1650  0F1A                     	;# 
  1651  0F1B                     	;# 
  1652  0F1C                     	;# 
  1653  0F1D                     	;# 
  1654  0F1E                     	;# 
  1655  0F1F                     	;# 
  1656  0F20                     	;# 
  1657  0F21                     	;# 
  1658  0F22                     	;# 
  1659  0F23                     	;# 
  1660  0F24                     	;# 
  1661  0F25                     	;# 
  1662  0F26                     	;# 
  1663  0F27                     	;# 
  1664  0F28                     	;# 
  1665  0F29                     	;# 
  1666  0F2A                     	;# 
  1667  0F2B                     	;# 
  1668  0F2C                     	;# 
  1669  0F2D                     	;# 
  1670  0F2E                     	;# 
  1671  0F2F                     	;# 
  1672  0F30                     	;# 
  1673  0F31                     	;# 
  1674  0F32                     	;# 
  1675  0F38                     	;# 
  1676  0F39                     	;# 
  1677  0F3A                     	;# 
  1678  0F3B                     	;# 
  1679  0F3C                     	;# 
  1680  0F3D                     	;# 
  1681  0F3E                     	;# 
  1682  0F3F                     	;# 
  1683  0F40                     	;# 
  1684  0F41                     	;# 
  1685  0F43                     	;# 
  1686  0F44                     	;# 
  1687  0F45                     	;# 
  1688  0F46                     	;# 
  1689  0F47                     	;# 
  1690  0F48                     	;# 
  1691  0F49                     	;# 
  1692  0F4A                     	;# 
  1693  0F4B                     	;# 
  1694  0F4C                     	;# 
  1695  0F4E                     	;# 
  1696  0F4F                     	;# 
  1697  0F50                     	;# 
  1698  0F51                     	;# 
  1699  0F52                     	;# 
  1700  0F53                     	;# 
  1701  0F54                     	;# 
  1702  0F55                     	;# 
  1703  0F56                     	;# 
  1704  0F57                     	;# 
  1705  0F59                     	;# 
  1706  0F5A                     	;# 
  1707  0F5B                     	;# 
  1708  0F5C                     	;# 
  1709  0F5D                     	;# 
  1710  0F61                     	;# 
  1711  0F62                     	;# 
  1712  0F64                     	;# 
  1713  0F65                     	;# 
  1714  0F66                     	;# 
  1715  0F67                     	;# 
  1716  0F68                     	;# 
  1717  0F69                     	;# 
  1718  0F6A                     	;# 
  1719  0F6B                     	;# 
  1720  0F6C                     	;# 
  1721  0F6D                     	;# 
  1722  0FE4                     	;# 
  1723  0FE5                     	;# 
  1724  0FE6                     	;# 
  1725  0FE7                     	;# 
  1726  0FE8                     	;# 
  1727  0FE9                     	;# 
  1728  0FEA                     	;# 
  1729  0FEB                     	;# 
  1730  0FED                     	;# 
  1731  0FEE                     	;# 
  1732  0FEF                     	;# 
  1733  0000                     	;# 
  1734  0001                     	;# 
  1735  0002                     	;# 
  1736  0003                     	;# 
  1737  0004                     	;# 
  1738  0005                     	;# 
  1739  0006                     	;# 
  1740  0007                     	;# 
  1741  0008                     	;# 
  1742  0009                     	;# 
  1743  000A                     	;# 
  1744  000B                     	;# 
  1745  000C                     	;# 
  1746  000D                     	;# 
  1747  000E                     	;# 
  1748  000F                     	;# 
  1749  0010                     	;# 
  1750  0011                     	;# 
  1751  0012                     	;# 
  1752  0013                     	;# 
  1753  0014                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0017                     	;# 
  1757  0018                     	;# 
  1758  0019                     	;# 
  1759  001A                     	;# 
  1760  001C                     	;# 
  1761  001C                     	;# 
  1762  001D                     	;# 
  1763  001D                     	;# 
  1764  001E                     	;# 
  1765  001F                     	;# 
  1766  008C                     	;# 
  1767  008C                     	;# 
  1768  008D                     	;# 
  1769  008E                     	;# 
  1770  008E                     	;# 
  1771  008F                     	;# 
  1772  0090                     	;# 
  1773  0090                     	;# 
  1774  0091                     	;# 
  1775  0093                     	;# 
  1776  0094                     	;# 
  1777  0095                     	;# 
  1778  0096                     	;# 
  1779  0097                     	;# 
  1780  0098                     	;# 
  1781  0099                     	;# 
  1782  009A                     	;# 
  1783  009B                     	;# 
  1784  009C                     	;# 
  1785  009D                     	;# 
  1786  009E                     	;# 
  1787  010C                     	;# 
  1788  010D                     	;# 
  1789  010E                     	;# 
  1790  010E                     	;# 
  1791  010F                     	;# 
  1792  0110                     	;# 
  1793  0110                     	;# 
  1794  0111                     	;# 
  1795  0112                     	;# 
  1796  0112                     	;# 
  1797  0113                     	;# 
  1798  0114                     	;# 
  1799  0114                     	;# 
  1800  0115                     	;# 
  1801  0116                     	;# 
  1802  0116                     	;# 
  1803  0117                     	;# 
  1804  0119                     	;# 
  1805  0119                     	;# 
  1806  0119                     	;# 
  1807  011A                     	;# 
  1808  011A                     	;# 
  1809  011A                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011C                     	;# 
  1816  011C                     	;# 
  1817  011C                     	;# 
  1818  011D                     	;# 
  1819  011D                     	;# 
  1820  011D                     	;# 
  1821  011E                     	;# 
  1822  011E                     	;# 
  1823  011E                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  018C                     	;# 
  1830  018D                     	;# 
  1831  018E                     	;# 
  1832  018F                     	;# 
  1833  0190                     	;# 
  1834  0191                     	;# 
  1835  0192                     	;# 
  1836  0196                     	;# 
  1837  0197                     	;# 
  1838  0198                     	;# 
  1839  0199                     	;# 
  1840  019A                     	;# 
  1841  019B                     	;# 
  1842  019C                     	;# 
  1843  020C                     	;# 
  1844  020C                     	;# 
  1845  020D                     	;# 
  1846  020E                     	;# 
  1847  020F                     	;# 
  1848  020F                     	;# 
  1849  0210                     	;# 
  1850  0210                     	;# 
  1851  0211                     	;# 
  1852  0211                     	;# 
  1853  0212                     	;# 
  1854  0212                     	;# 
  1855  0213                     	;# 
  1856  0214                     	;# 
  1857  0215                     	;# 
  1858  0215                     	;# 
  1859  0216                     	;# 
  1860  0216                     	;# 
  1861  0217                     	;# 
  1862  0217                     	;# 
  1863  0218                     	;# 
  1864  0218                     	;# 
  1865  0219                     	;# 
  1866  021A                     	;# 
  1867  021B                     	;# 
  1868  021B                     	;# 
  1869  021C                     	;# 
  1870  021C                     	;# 
  1871  021D                     	;# 
  1872  021D                     	;# 
  1873  021E                     	;# 
  1874  021F                     	;# 
  1875  028C                     	;# 
  1876  028C                     	;# 
  1877  028D                     	;# 
  1878  028D                     	;# 
  1879  028E                     	;# 
  1880  028F                     	;# 
  1881  0290                     	;# 
  1882  0290                     	;# 
  1883  0291                     	;# 
  1884  0292                     	;# 
  1885  0292                     	;# 
  1886  0293                     	;# 
  1887  0293                     	;# 
  1888  0294                     	;# 
  1889  0295                     	;# 
  1890  0296                     	;# 
  1891  0296                     	;# 
  1892  0297                     	;# 
  1893  0298                     	;# 
  1894  0298                     	;# 
  1895  0299                     	;# 
  1896  0299                     	;# 
  1897  029A                     	;# 
  1898  029B                     	;# 
  1899  029C                     	;# 
  1900  029C                     	;# 
  1901  029D                     	;# 
  1902  030C                     	;# 
  1903  030C                     	;# 
  1904  030D                     	;# 
  1905  030E                     	;# 
  1906  030F                     	;# 
  1907  0310                     	;# 
  1908  0310                     	;# 
  1909  0311                     	;# 
  1910  0312                     	;# 
  1911  0313                     	;# 
  1912  0314                     	;# 
  1913  0314                     	;# 
  1914  0315                     	;# 
  1915  0316                     	;# 
  1916  0317                     	;# 
  1917  0318                     	;# 
  1918  0318                     	;# 
  1919  0319                     	;# 
  1920  031A                     	;# 
  1921  031B                     	;# 
  1922  031C                     	;# 
  1923  031C                     	;# 
  1924  031D                     	;# 
  1925  031E                     	;# 
  1926  031F                     	;# 
  1927  038C                     	;# 
  1928  038C                     	;# 
  1929  038D                     	;# 
  1930  038E                     	;# 
  1931  0390                     	;# 
  1932  0390                     	;# 
  1933  0391                     	;# 
  1934  0392                     	;# 
  1935  040C                     	;# 
  1936  040D                     	;# 
  1937  040E                     	;# 
  1938  040F                     	;# 
  1939  0410                     	;# 
  1940  0411                     	;# 
  1941  0416                     	;# 
  1942  0416                     	;# 
  1943  0417                     	;# 
  1944  0418                     	;# 
  1945  0418                     	;# 
  1946  0419                     	;# 
  1947  041A                     	;# 
  1948  041A                     	;# 
  1949  041B                     	;# 
  1950  041C                     	;# 
  1951  041C                     	;# 
  1952  041D                     	;# 
  1953  041E                     	;# 
  1954  041F                     	;# 
  1955  048C                     	;# 
  1956  048C                     	;# 
  1957  048D                     	;# 
  1958  048E                     	;# 
  1959  048F                     	;# 
  1960  048F                     	;# 
  1961  0490                     	;# 
  1962  0491                     	;# 
  1963  0492                     	;# 
  1964  0492                     	;# 
  1965  0493                     	;# 
  1966  0494                     	;# 
  1967  0495                     	;# 
  1968  0495                     	;# 
  1969  0496                     	;# 
  1970  0497                     	;# 
  1971  0498                     	;# 
  1972  0499                     	;# 
  1973  049A                     	;# 
  1974  049B                     	;# 
  1975  049C                     	;# 
  1976  049D                     	;# 
  1977  050C                     	;# 
  1978  050C                     	;# 
  1979  050D                     	;# 
  1980  050E                     	;# 
  1981  050F                     	;# 
  1982  050F                     	;# 
  1983  0510                     	;# 
  1984  0511                     	;# 
  1985  0512                     	;# 
  1986  0512                     	;# 
  1987  0513                     	;# 
  1988  0514                     	;# 
  1989  0515                     	;# 
  1990  0515                     	;# 
  1991  0516                     	;# 
  1992  0517                     	;# 
  1993  0518                     	;# 
  1994  0519                     	;# 
  1995  051A                     	;# 
  1996  051B                     	;# 
  1997  051C                     	;# 
  1998  051D                     	;# 
  1999  058C                     	;# 
  2000  058C                     	;# 
  2001  058D                     	;# 
  2002  058E                     	;# 
  2003  058F                     	;# 
  2004  058F                     	;# 
  2005  0590                     	;# 
  2006  0591                     	;# 
  2007  0592                     	;# 
  2008  0593                     	;# 
  2009  060C                     	;# 
  2010  060D                     	;# 
  2011  060E                     	;# 
  2012  060F                     	;# 
  2013  0610                     	;# 
  2014  0611                     	;# 
  2015  0612                     	;# 
  2016  0613                     	;# 
  2017  0614                     	;# 
  2018  0616                     	;# 
  2019  0617                     	;# 
  2020  0618                     	;# 
  2021  0619                     	;# 
  2022  061A                     	;# 
  2023  061B                     	;# 
  2024  061C                     	;# 
  2025  061D                     	;# 
  2026  061E                     	;# 
  2027  068C                     	;# 
  2028  068D                     	;# 
  2029  068E                     	;# 
  2030  068F                     	;# 
  2031  0690                     	;# 
  2032  0691                     	;# 
  2033  0692                     	;# 
  2034  0693                     	;# 
  2035  0694                     	;# 
  2036  070C                     	;# 
  2037  070D                     	;# 
  2038  070E                     	;# 
  2039  070F                     	;# 
  2040  0710                     	;# 
  2041  0711                     	;# 
  2042  0712                     	;# 
  2043  0713                     	;# 
  2044  0714                     	;# 
  2045  0716                     	;# 
  2046  0717                     	;# 
  2047  0718                     	;# 
  2048  0719                     	;# 
  2049  071A                     	;# 
  2050  071B                     	;# 
  2051  071C                     	;# 
  2052  071D                     	;# 
  2053  071E                     	;# 
  2054  0796                     	;# 
  2055  0797                     	;# 
  2056  0798                     	;# 
  2057  0799                     	;# 
  2058  079A                     	;# 
  2059  079B                     	;# 
  2060  080C                     	;# 
  2061  080D                     	;# 
  2062  080E                     	;# 
  2063  080F                     	;# 
  2064  0810                     	;# 
  2065  0811                     	;# 
  2066  0812                     	;# 
  2067  0813                     	;# 
  2068  0814                     	;# 
  2069  081A                     	;# 
  2070  081B                     	;# 
  2071  081C                     	;# 
  2072  081D                     	;# 
  2073  081E                     	;# 
  2074  081F                     	;# 
  2075  088C                     	;# 
  2076  088D                     	;# 
  2077  088E                     	;# 
  2078  088F                     	;# 
  2079  0890                     	;# 
  2080  0891                     	;# 
  2081  0892                     	;# 
  2082  0893                     	;# 
  2083  0895                     	;# 
  2084  0896                     	;# 
  2085  0897                     	;# 
  2086  0898                     	;# 
  2087  0899                     	;# 
  2088  089A                     	;# 
  2089  089B                     	;# 
  2090  090C                     	;# 
  2091  090E                     	;# 
  2092  090F                     	;# 
  2093  091F                     	;# 
  2094  098F                     	;# 
  2095  098F                     	;# 
  2096  0990                     	;# 
  2097  0991                     	;# 
  2098  0992                     	;# 
  2099  0993                     	;# 
  2100  0994                     	;# 
  2101  0995                     	;# 
  2102  0996                     	;# 
  2103  0997                     	;# 
  2104  0E0F                     	;# 
  2105  0E10                     	;# 
  2106  0E11                     	;# 
  2107  0E12                     	;# 
  2108  0E13                     	;# 
  2109  0E14                     	;# 
  2110  0E15                     	;# 
  2111  0E16                     	;# 
  2112  0E17                     	;# 
  2113  0E18                     	;# 
  2114  0E19                     	;# 
  2115  0E1A                     	;# 
  2116  0E1B                     	;# 
  2117  0E1C                     	;# 
  2118  0E1D                     	;# 
  2119  0E1E                     	;# 
  2120  0E1F                     	;# 
  2121  0E20                     	;# 
  2122  0E21                     	;# 
  2123  0E22                     	;# 
  2124  0E23                     	;# 
  2125  0E24                     	;# 
  2126  0E25                     	;# 
  2127  0E26                     	;# 
  2128  0E27                     	;# 
  2129  0E28                     	;# 
  2130  0E29                     	;# 
  2131  0E2A                     	;# 
  2132  0E2B                     	;# 
  2133  0E2C                     	;# 
  2134  0E2D                     	;# 
  2135  0E2E                     	;# 
  2136  0E2F                     	;# 
  2137  0E30                     	;# 
  2138  0E31                     	;# 
  2139  0E32                     	;# 
  2140  0E33                     	;# 
  2141  0E34                     	;# 
  2142  0E35                     	;# 
  2143  0E36                     	;# 
  2144  0E37                     	;# 
  2145  0E8F                     	;# 
  2146  0E90                     	;# 
  2147  0E91                     	;# 
  2148  0E92                     	;# 
  2149  0E93                     	;# 
  2150  0E94                     	;# 
  2151  0E95                     	;# 
  2152  0E96                     	;# 
  2153  0E97                     	;# 
  2154  0E9C                     	;# 
  2155  0E9D                     	;# 
  2156  0E9E                     	;# 
  2157  0EA1                     	;# 
  2158  0EA2                     	;# 
  2159  0EA3                     	;# 
  2160  0EA4                     	;# 
  2161  0EA5                     	;# 
  2162  0EA9                     	;# 
  2163  0EAA                     	;# 
  2164  0EAB                     	;# 
  2165  0EAC                     	;# 
  2166  0EB1                     	;# 
  2167  0EB2                     	;# 
  2168  0EB3                     	;# 
  2169  0EB8                     	;# 
  2170  0EB9                     	;# 
  2171  0EBA                     	;# 
  2172  0EBB                     	;# 
  2173  0EBC                     	;# 
  2174  0EBD                     	;# 
  2175  0EBE                     	;# 
  2176  0EC3                     	;# 
  2177  0EC5                     	;# 
  2178  0EC6                     	;# 
  2179  0EC7                     	;# 
  2180  0EC8                     	;# 
  2181  0EC9                     	;# 
  2182  0ECA                     	;# 
  2183  0ECB                     	;# 
  2184  0ECC                     	;# 
  2185  0F10                     	;# 
  2186  0F11                     	;# 
  2187  0F12                     	;# 
  2188  0F13                     	;# 
  2189  0F14                     	;# 
  2190  0F15                     	;# 
  2191  0F16                     	;# 
  2192  0F17                     	;# 
  2193  0F18                     	;# 
  2194  0F19                     	;# 
  2195  0F1A                     	;# 
  2196  0F1B                     	;# 
  2197  0F1C                     	;# 
  2198  0F1D                     	;# 
  2199  0F1E                     	;# 
  2200  0F1F                     	;# 
  2201  0F20                     	;# 
  2202  0F21                     	;# 
  2203  0F22                     	;# 
  2204  0F23                     	;# 
  2205  0F24                     	;# 
  2206  0F25                     	;# 
  2207  0F26                     	;# 
  2208  0F27                     	;# 
  2209  0F28                     	;# 
  2210  0F29                     	;# 
  2211  0F2A                     	;# 
  2212  0F2B                     	;# 
  2213  0F2C                     	;# 
  2214  0F2D                     	;# 
  2215  0F2E                     	;# 
  2216  0F2F                     	;# 
  2217  0F30                     	;# 
  2218  0F31                     	;# 
  2219  0F32                     	;# 
  2220  0F38                     	;# 
  2221  0F39                     	;# 
  2222  0F3A                     	;# 
  2223  0F3B                     	;# 
  2224  0F3C                     	;# 
  2225  0F3D                     	;# 
  2226  0F3E                     	;# 
  2227  0F3F                     	;# 
  2228  0F40                     	;# 
  2229  0F41                     	;# 
  2230  0F43                     	;# 
  2231  0F44                     	;# 
  2232  0F45                     	;# 
  2233  0F46                     	;# 
  2234  0F47                     	;# 
  2235  0F48                     	;# 
  2236  0F49                     	;# 
  2237  0F4A                     	;# 
  2238  0F4B                     	;# 
  2239  0F4C                     	;# 
  2240  0F4E                     	;# 
  2241  0F4F                     	;# 
  2242  0F50                     	;# 
  2243  0F51                     	;# 
  2244  0F52                     	;# 
  2245  0F53                     	;# 
  2246  0F54                     	;# 
  2247  0F55                     	;# 
  2248  0F56                     	;# 
  2249  0F57                     	;# 
  2250  0F59                     	;# 
  2251  0F5A                     	;# 
  2252  0F5B                     	;# 
  2253  0F5C                     	;# 
  2254  0F5D                     	;# 
  2255  0F61                     	;# 
  2256  0F62                     	;# 
  2257  0F64                     	;# 
  2258  0F65                     	;# 
  2259  0F66                     	;# 
  2260  0F67                     	;# 
  2261  0F68                     	;# 
  2262  0F69                     	;# 
  2263  0F6A                     	;# 
  2264  0F6B                     	;# 
  2265  0F6C                     	;# 
  2266  0F6D                     	;# 
  2267  0FE4                     	;# 
  2268  0FE5                     	;# 
  2269  0FE6                     	;# 
  2270  0FE7                     	;# 
  2271  0FE8                     	;# 
  2272  0FE9                     	;# 
  2273  0FEA                     	;# 
  2274  0FEB                     	;# 
  2275  0FED                     	;# 
  2276  0FEE                     	;# 
  2277  0FEF                     	;# 
  2278  0000                     	;# 
  2279  0001                     	;# 
  2280  0002                     	;# 
  2281  0003                     	;# 
  2282  0004                     	;# 
  2283  0005                     	;# 
  2284  0006                     	;# 
  2285  0007                     	;# 
  2286  0008                     	;# 
  2287  0009                     	;# 
  2288  000A                     	;# 
  2289  000B                     	;# 
  2290  000C                     	;# 
  2291  000D                     	;# 
  2292  000E                     	;# 
  2293  000F                     	;# 
  2294  0010                     	;# 
  2295  0011                     	;# 
  2296  0012                     	;# 
  2297  0013                     	;# 
  2298  0014                     	;# 
  2299  0015                     	;# 
  2300  0016                     	;# 
  2301  0017                     	;# 
  2302  0018                     	;# 
  2303  0019                     	;# 
  2304  001A                     	;# 
  2305  001C                     	;# 
  2306  001C                     	;# 
  2307  001D                     	;# 
  2308  001D                     	;# 
  2309  001E                     	;# 
  2310  001F                     	;# 
  2311  008C                     	;# 
  2312  008C                     	;# 
  2313  008D                     	;# 
  2314  008E                     	;# 
  2315  008E                     	;# 
  2316  008F                     	;# 
  2317  0090                     	;# 
  2318  0090                     	;# 
  2319  0091                     	;# 
  2320  0093                     	;# 
  2321  0094                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0097                     	;# 
  2325  0098                     	;# 
  2326  0099                     	;# 
  2327  009A                     	;# 
  2328  009B                     	;# 
  2329  009C                     	;# 
  2330  009D                     	;# 
  2331  009E                     	;# 
  2332  010C                     	;# 
  2333  010D                     	;# 
  2334  010E                     	;# 
  2335  010E                     	;# 
  2336  010F                     	;# 
  2337  0110                     	;# 
  2338  0110                     	;# 
  2339  0111                     	;# 
  2340  0112                     	;# 
  2341  0112                     	;# 
  2342  0113                     	;# 
  2343  0114                     	;# 
  2344  0114                     	;# 
  2345  0115                     	;# 
  2346  0116                     	;# 
  2347  0116                     	;# 
  2348  0117                     	;# 
  2349  0119                     	;# 
  2350  0119                     	;# 
  2351  0119                     	;# 
  2352  011A                     	;# 
  2353  011A                     	;# 
  2354  011A                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011C                     	;# 
  2361  011C                     	;# 
  2362  011C                     	;# 
  2363  011D                     	;# 
  2364  011D                     	;# 
  2365  011D                     	;# 
  2366  011E                     	;# 
  2367  011E                     	;# 
  2368  011E                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  018C                     	;# 
  2375  018D                     	;# 
  2376  018E                     	;# 
  2377  018F                     	;# 
  2378  0190                     	;# 
  2379  0191                     	;# 
  2380  0192                     	;# 
  2381  0196                     	;# 
  2382  0197                     	;# 
  2383  0198                     	;# 
  2384  0199                     	;# 
  2385  019A                     	;# 
  2386  019B                     	;# 
  2387  019C                     	;# 
  2388  020C                     	;# 
  2389  020C                     	;# 
  2390  020D                     	;# 
  2391  020E                     	;# 
  2392  020F                     	;# 
  2393  020F                     	;# 
  2394  0210                     	;# 
  2395  0210                     	;# 
  2396  0211                     	;# 
  2397  0211                     	;# 
  2398  0212                     	;# 
  2399  0212                     	;# 
  2400  0213                     	;# 
  2401  0214                     	;# 
  2402  0215                     	;# 
  2403  0215                     	;# 
  2404  0216                     	;# 
  2405  0216                     	;# 
  2406  0217                     	;# 
  2407  0217                     	;# 
  2408  0218                     	;# 
  2409  0218                     	;# 
  2410  0219                     	;# 
  2411  021A                     	;# 
  2412  021B                     	;# 
  2413  021B                     	;# 
  2414  021C                     	;# 
  2415  021C                     	;# 
  2416  021D                     	;# 
  2417  021D                     	;# 
  2418  021E                     	;# 
  2419  021F                     	;# 
  2420  028C                     	;# 
  2421  028C                     	;# 
  2422  028D                     	;# 
  2423  028D                     	;# 
  2424  028E                     	;# 
  2425  028F                     	;# 
  2426  0290                     	;# 
  2427  0290                     	;# 
  2428  0291                     	;# 
  2429  0292                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0293                     	;# 
  2433  0294                     	;# 
  2434  0295                     	;# 
  2435  0296                     	;# 
  2436  0296                     	;# 
  2437  0297                     	;# 
  2438  0298                     	;# 
  2439  0298                     	;# 
  2440  0299                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  029B                     	;# 
  2444  029C                     	;# 
  2445  029C                     	;# 
  2446  029D                     	;# 
  2447  030C                     	;# 
  2448  030C                     	;# 
  2449  030D                     	;# 
  2450  030E                     	;# 
  2451  030F                     	;# 
  2452  0310                     	;# 
  2453  0310                     	;# 
  2454  0311                     	;# 
  2455  0312                     	;# 
  2456  0313                     	;# 
  2457  0314                     	;# 
  2458  0314                     	;# 
  2459  0315                     	;# 
  2460  0316                     	;# 
  2461  0317                     	;# 
  2462  0318                     	;# 
  2463  0318                     	;# 
  2464  0319                     	;# 
  2465  031A                     	;# 
  2466  031B                     	;# 
  2467  031C                     	;# 
  2468  031C                     	;# 
  2469  031D                     	;# 
  2470  031E                     	;# 
  2471  031F                     	;# 
  2472  038C                     	;# 
  2473  038C                     	;# 
  2474  038D                     	;# 
  2475  038E                     	;# 
  2476  0390                     	;# 
  2477  0390                     	;# 
  2478  0391                     	;# 
  2479  0392                     	;# 
  2480  040C                     	;# 
  2481  040D                     	;# 
  2482  040E                     	;# 
  2483  040F                     	;# 
  2484  0410                     	;# 
  2485  0411                     	;# 
  2486  0416                     	;# 
  2487  0416                     	;# 
  2488  0417                     	;# 
  2489  0418                     	;# 
  2490  0418                     	;# 
  2491  0419                     	;# 
  2492  041A                     	;# 
  2493  041A                     	;# 
  2494  041B                     	;# 
  2495  041C                     	;# 
  2496  041C                     	;# 
  2497  041D                     	;# 
  2498  041E                     	;# 
  2499  041F                     	;# 
  2500  048C                     	;# 
  2501  048C                     	;# 
  2502  048D                     	;# 
  2503  048E                     	;# 
  2504  048F                     	;# 
  2505  048F                     	;# 
  2506  0490                     	;# 
  2507  0491                     	;# 
  2508  0492                     	;# 
  2509  0492                     	;# 
  2510  0493                     	;# 
  2511  0494                     	;# 
  2512  0495                     	;# 
  2513  0495                     	;# 
  2514  0496                     	;# 
  2515  0497                     	;# 
  2516  0498                     	;# 
  2517  0499                     	;# 
  2518  049A                     	;# 
  2519  049B                     	;# 
  2520  049C                     	;# 
  2521  049D                     	;# 
  2522  050C                     	;# 
  2523  050C                     	;# 
  2524  050D                     	;# 
  2525  050E                     	;# 
  2526  050F                     	;# 
  2527  050F                     	;# 
  2528  0510                     	;# 
  2529  0511                     	;# 
  2530  0512                     	;# 
  2531  0512                     	;# 
  2532  0513                     	;# 
  2533  0514                     	;# 
  2534  0515                     	;# 
  2535  0515                     	;# 
  2536  0516                     	;# 
  2537  0517                     	;# 
  2538  0518                     	;# 
  2539  0519                     	;# 
  2540  051A                     	;# 
  2541  051B                     	;# 
  2542  051C                     	;# 
  2543  051D                     	;# 
  2544  058C                     	;# 
  2545  058C                     	;# 
  2546  058D                     	;# 
  2547  058E                     	;# 
  2548  058F                     	;# 
  2549  058F                     	;# 
  2550  0590                     	;# 
  2551  0591                     	;# 
  2552  0592                     	;# 
  2553  0593                     	;# 
  2554  060C                     	;# 
  2555  060D                     	;# 
  2556  060E                     	;# 
  2557  060F                     	;# 
  2558  0610                     	;# 
  2559  0611                     	;# 
  2560  0612                     	;# 
  2561  0613                     	;# 
  2562  0614                     	;# 
  2563  0616                     	;# 
  2564  0617                     	;# 
  2565  0618                     	;# 
  2566  0619                     	;# 
  2567  061A                     	;# 
  2568  061B                     	;# 
  2569  061C                     	;# 
  2570  061D                     	;# 
  2571  061E                     	;# 
  2572  068C                     	;# 
  2573  068D                     	;# 
  2574  068E                     	;# 
  2575  068F                     	;# 
  2576  0690                     	;# 
  2577  0691                     	;# 
  2578  0692                     	;# 
  2579  0693                     	;# 
  2580  0694                     	;# 
  2581  070C                     	;# 
  2582  070D                     	;# 
  2583  070E                     	;# 
  2584  070F                     	;# 
  2585  0710                     	;# 
  2586  0711                     	;# 
  2587  0712                     	;# 
  2588  0713                     	;# 
  2589  0714                     	;# 
  2590  0716                     	;# 
  2591  0717                     	;# 
  2592  0718                     	;# 
  2593  0719                     	;# 
  2594  071A                     	;# 
  2595  071B                     	;# 
  2596  071C                     	;# 
  2597  071D                     	;# 
  2598  071E                     	;# 
  2599  0796                     	;# 
  2600  0797                     	;# 
  2601  0798                     	;# 
  2602  0799                     	;# 
  2603  079A                     	;# 
  2604  079B                     	;# 
  2605  080C                     	;# 
  2606  080D                     	;# 
  2607  080E                     	;# 
  2608  080F                     	;# 
  2609  0810                     	;# 
  2610  0811                     	;# 
  2611  0812                     	;# 
  2612  0813                     	;# 
  2613  0814                     	;# 
  2614  081A                     	;# 
  2615  081B                     	;# 
  2616  081C                     	;# 
  2617  081D                     	;# 
  2618  081E                     	;# 
  2619  081F                     	;# 
  2620  088C                     	;# 
  2621  088D                     	;# 
  2622  088E                     	;# 
  2623  088F                     	;# 
  2624  0890                     	;# 
  2625  0891                     	;# 
  2626  0892                     	;# 
  2627  0893                     	;# 
  2628  0895                     	;# 
  2629  0896                     	;# 
  2630  0897                     	;# 
  2631  0898                     	;# 
  2632  0899                     	;# 
  2633  089A                     	;# 
  2634  089B                     	;# 
  2635  090C                     	;# 
  2636  090E                     	;# 
  2637  090F                     	;# 
  2638  091F                     	;# 
  2639  098F                     	;# 
  2640  098F                     	;# 
  2641  0990                     	;# 
  2642  0991                     	;# 
  2643  0992                     	;# 
  2644  0993                     	;# 
  2645  0994                     	;# 
  2646  0995                     	;# 
  2647  0996                     	;# 
  2648  0997                     	;# 
  2649  0E0F                     	;# 
  2650  0E10                     	;# 
  2651  0E11                     	;# 
  2652  0E12                     	;# 
  2653  0E13                     	;# 
  2654  0E14                     	;# 
  2655  0E15                     	;# 
  2656  0E16                     	;# 
  2657  0E17                     	;# 
  2658  0E18                     	;# 
  2659  0E19                     	;# 
  2660  0E1A                     	;# 
  2661  0E1B                     	;# 
  2662  0E1C                     	;# 
  2663  0E1D                     	;# 
  2664  0E1E                     	;# 
  2665  0E1F                     	;# 
  2666  0E20                     	;# 
  2667  0E21                     	;# 
  2668  0E22                     	;# 
  2669  0E23                     	;# 
  2670  0E24                     	;# 
  2671  0E25                     	;# 
  2672  0E26                     	;# 
  2673  0E27                     	;# 
  2674  0E28                     	;# 
  2675  0E29                     	;# 
  2676  0E2A                     	;# 
  2677  0E2B                     	;# 
  2678  0E2C                     	;# 
  2679  0E2D                     	;# 
  2680  0E2E                     	;# 
  2681  0E2F                     	;# 
  2682  0E30                     	;# 
  2683  0E31                     	;# 
  2684  0E32                     	;# 
  2685  0E33                     	;# 
  2686  0E34                     	;# 
  2687  0E35                     	;# 
  2688  0E36                     	;# 
  2689  0E37                     	;# 
  2690  0E8F                     	;# 
  2691  0E90                     	;# 
  2692  0E91                     	;# 
  2693  0E92                     	;# 
  2694  0E93                     	;# 
  2695  0E94                     	;# 
  2696  0E95                     	;# 
  2697  0E96                     	;# 
  2698  0E97                     	;# 
  2699  0E9C                     	;# 
  2700  0E9D                     	;# 
  2701  0E9E                     	;# 
  2702  0EA1                     	;# 
  2703  0EA2                     	;# 
  2704  0EA3                     	;# 
  2705  0EA4                     	;# 
  2706  0EA5                     	;# 
  2707  0EA9                     	;# 
  2708  0EAA                     	;# 
  2709  0EAB                     	;# 
  2710  0EAC                     	;# 
  2711  0EB1                     	;# 
  2712  0EB2                     	;# 
  2713  0EB3                     	;# 
  2714  0EB8                     	;# 
  2715  0EB9                     	;# 
  2716  0EBA                     	;# 
  2717  0EBB                     	;# 
  2718  0EBC                     	;# 
  2719  0EBD                     	;# 
  2720  0EBE                     	;# 
  2721  0EC3                     	;# 
  2722  0EC5                     	;# 
  2723  0EC6                     	;# 
  2724  0EC7                     	;# 
  2725  0EC8                     	;# 
  2726  0EC9                     	;# 
  2727  0ECA                     	;# 
  2728  0ECB                     	;# 
  2729  0ECC                     	;# 
  2730  0F10                     	;# 
  2731  0F11                     	;# 
  2732  0F12                     	;# 
  2733  0F13                     	;# 
  2734  0F14                     	;# 
  2735  0F15                     	;# 
  2736  0F16                     	;# 
  2737  0F17                     	;# 
  2738  0F18                     	;# 
  2739  0F19                     	;# 
  2740  0F1A                     	;# 
  2741  0F1B                     	;# 
  2742  0F1C                     	;# 
  2743  0F1D                     	;# 
  2744  0F1E                     	;# 
  2745  0F1F                     	;# 
  2746  0F20                     	;# 
  2747  0F21                     	;# 
  2748  0F22                     	;# 
  2749  0F23                     	;# 
  2750  0F24                     	;# 
  2751  0F25                     	;# 
  2752  0F26                     	;# 
  2753  0F27                     	;# 
  2754  0F28                     	;# 
  2755  0F29                     	;# 
  2756  0F2A                     	;# 
  2757  0F2B                     	;# 
  2758  0F2C                     	;# 
  2759  0F2D                     	;# 
  2760  0F2E                     	;# 
  2761  0F2F                     	;# 
  2762  0F30                     	;# 
  2763  0F31                     	;# 
  2764  0F32                     	;# 
  2765  0F38                     	;# 
  2766  0F39                     	;# 
  2767  0F3A                     	;# 
  2768  0F3B                     	;# 
  2769  0F3C                     	;# 
  2770  0F3D                     	;# 
  2771  0F3E                     	;# 
  2772  0F3F                     	;# 
  2773  0F40                     	;# 
  2774  0F41                     	;# 
  2775  0F43                     	;# 
  2776  0F44                     	;# 
  2777  0F45                     	;# 
  2778  0F46                     	;# 
  2779  0F47                     	;# 
  2780  0F48                     	;# 
  2781  0F49                     	;# 
  2782  0F4A                     	;# 
  2783  0F4B                     	;# 
  2784  0F4C                     	;# 
  2785  0F4E                     	;# 
  2786  0F4F                     	;# 
  2787  0F50                     	;# 
  2788  0F51                     	;# 
  2789  0F52                     	;# 
  2790  0F53                     	;# 
  2791  0F54                     	;# 
  2792  0F55                     	;# 
  2793  0F56                     	;# 
  2794  0F57                     	;# 
  2795  0F59                     	;# 
  2796  0F5A                     	;# 
  2797  0F5B                     	;# 
  2798  0F5C                     	;# 
  2799  0F5D                     	;# 
  2800  0F61                     	;# 
  2801  0F62                     	;# 
  2802  0F64                     	;# 
  2803  0F65                     	;# 
  2804  0F66                     	;# 
  2805  0F67                     	;# 
  2806  0F68                     	;# 
  2807  0F69                     	;# 
  2808  0F6A                     	;# 
  2809  0F6B                     	;# 
  2810  0F6C                     	;# 
  2811  0F6D                     	;# 
  2812  0FE4                     	;# 
  2813  0FE5                     	;# 
  2814  0FE6                     	;# 
  2815  0FE7                     	;# 
  2816  0FE8                     	;# 
  2817  0FE9                     	;# 
  2818  0FEA                     	;# 
  2819  0FEB                     	;# 
  2820  0FED                     	;# 
  2821  0FEE                     	;# 
  2822  0FEF                     	;# 
  2823  0000                     	;# 
  2824  0001                     	;# 
  2825  0002                     	;# 
  2826  0003                     	;# 
  2827  0004                     	;# 
  2828  0005                     	;# 
  2829  0006                     	;# 
  2830  0007                     	;# 
  2831  0008                     	;# 
  2832  0009                     	;# 
  2833  000A                     	;# 
  2834  000B                     	;# 
  2835  000C                     	;# 
  2836  000D                     	;# 
  2837  000E                     	;# 
  2838  000F                     	;# 
  2839  0010                     	;# 
  2840  0011                     	;# 
  2841  0012                     	;# 
  2842  0013                     	;# 
  2843  0014                     	;# 
  2844  0015                     	;# 
  2845  0016                     	;# 
  2846  0017                     	;# 
  2847  0018                     	;# 
  2848  0019                     	;# 
  2849  001A                     	;# 
  2850  001C                     	;# 
  2851  001C                     	;# 
  2852  001D                     	;# 
  2853  001D                     	;# 
  2854  001E                     	;# 
  2855  001F                     	;# 
  2856  008C                     	;# 
  2857  008C                     	;# 
  2858  008D                     	;# 
  2859  008E                     	;# 
  2860  008E                     	;# 
  2861  008F                     	;# 
  2862  0090                     	;# 
  2863  0090                     	;# 
  2864  0091                     	;# 
  2865  0093                     	;# 
  2866  0094                     	;# 
  2867  0095                     	;# 
  2868  0096                     	;# 
  2869  0097                     	;# 
  2870  0098                     	;# 
  2871  0099                     	;# 
  2872  009A                     	;# 
  2873  009B                     	;# 
  2874  009C                     	;# 
  2875  009D                     	;# 
  2876  009E                     	;# 
  2877  010C                     	;# 
  2878  010D                     	;# 
  2879  010E                     	;# 
  2880  010E                     	;# 
  2881  010F                     	;# 
  2882  0110                     	;# 
  2883  0110                     	;# 
  2884  0111                     	;# 
  2885  0112                     	;# 
  2886  0112                     	;# 
  2887  0113                     	;# 
  2888  0114                     	;# 
  2889  0114                     	;# 
  2890  0115                     	;# 
  2891  0116                     	;# 
  2892  0116                     	;# 
  2893  0117                     	;# 
  2894  0119                     	;# 
  2895  0119                     	;# 
  2896  0119                     	;# 
  2897  011A                     	;# 
  2898  011A                     	;# 
  2899  011A                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011C                     	;# 
  2906  011C                     	;# 
  2907  011C                     	;# 
  2908  011D                     	;# 
  2909  011D                     	;# 
  2910  011D                     	;# 
  2911  011E                     	;# 
  2912  011E                     	;# 
  2913  011E                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  018C                     	;# 
  2920  018D                     	;# 
  2921  018E                     	;# 
  2922  018F                     	;# 
  2923  0190                     	;# 
  2924  0191                     	;# 
  2925  0192                     	;# 
  2926  0196                     	;# 
  2927  0197                     	;# 
  2928  0198                     	;# 
  2929  0199                     	;# 
  2930  019A                     	;# 
  2931  019B                     	;# 
  2932  019C                     	;# 
  2933  020C                     	;# 
  2934  020C                     	;# 
  2935  020D                     	;# 
  2936  020E                     	;# 
  2937  020F                     	;# 
  2938  020F                     	;# 
  2939  0210                     	;# 
  2940  0210                     	;# 
  2941  0211                     	;# 
  2942  0211                     	;# 
  2943  0212                     	;# 
  2944  0212                     	;# 
  2945  0213                     	;# 
  2946  0214                     	;# 
  2947  0215                     	;# 
  2948  0215                     	;# 
  2949  0216                     	;# 
  2950  0216                     	;# 
  2951  0217                     	;# 
  2952  0217                     	;# 
  2953  0218                     	;# 
  2954  0218                     	;# 
  2955  0219                     	;# 
  2956  021A                     	;# 
  2957  021B                     	;# 
  2958  021B                     	;# 
  2959  021C                     	;# 
  2960  021C                     	;# 
  2961  021D                     	;# 
  2962  021D                     	;# 
  2963  021E                     	;# 
  2964  021F                     	;# 
  2965  028C                     	;# 
  2966  028C                     	;# 
  2967  028D                     	;# 
  2968  028D                     	;# 
  2969  028E                     	;# 
  2970  028F                     	;# 
  2971  0290                     	;# 
  2972  0290                     	;# 
  2973  0291                     	;# 
  2974  0292                     	;# 
  2975  0292                     	;# 
  2976  0293                     	;# 
  2977  0293                     	;# 
  2978  0294                     	;# 
  2979  0295                     	;# 
  2980  0296                     	;# 
  2981  0296                     	;# 
  2982  0297                     	;# 
  2983  0298                     	;# 
  2984  0298                     	;# 
  2985  0299                     	;# 
  2986  0299                     	;# 
  2987  029A                     	;# 
  2988  029B                     	;# 
  2989  029C                     	;# 
  2990  029C                     	;# 
  2991  029D                     	;# 
  2992  030C                     	;# 
  2993  030C                     	;# 
  2994  030D                     	;# 
  2995  030E                     	;# 
  2996  030F                     	;# 
  2997  0310                     	;# 
  2998  0310                     	;# 
  2999  0311                     	;# 
  3000  0312                     	;# 
  3001  0313                     	;# 
  3002  0314                     	;# 
  3003  0314                     	;# 
  3004  0315                     	;# 
  3005  0316                     	;# 
  3006  0317                     	;# 
  3007  0318                     	;# 
  3008  0318                     	;# 
  3009  0319                     	;# 
  3010  031A                     	;# 
  3011  031B                     	;# 
  3012  031C                     	;# 
  3013  031C                     	;# 
  3014  031D                     	;# 
  3015  031E                     	;# 
  3016  031F                     	;# 
  3017  038C                     	;# 
  3018  038C                     	;# 
  3019  038D                     	;# 
  3020  038E                     	;# 
  3021  0390                     	;# 
  3022  0390                     	;# 
  3023  0391                     	;# 
  3024  0392                     	;# 
  3025  040C                     	;# 
  3026  040D                     	;# 
  3027  040E                     	;# 
  3028  040F                     	;# 
  3029  0410                     	;# 
  3030  0411                     	;# 
  3031  0416                     	;# 
  3032  0416                     	;# 
  3033  0417                     	;# 
  3034  0418                     	;# 
  3035  0418                     	;# 
  3036  0419                     	;# 
  3037  041A                     	;# 
  3038  041A                     	;# 
  3039  041B                     	;# 
  3040  041C                     	;# 
  3041  041C                     	;# 
  3042  041D                     	;# 
  3043  041E                     	;# 
  3044  041F                     	;# 
  3045  048C                     	;# 
  3046  048C                     	;# 
  3047  048D                     	;# 
  3048  048E                     	;# 
  3049  048F                     	;# 
  3050  048F                     	;# 
  3051  0490                     	;# 
  3052  0491                     	;# 
  3053  0492                     	;# 
  3054  0492                     	;# 
  3055  0493                     	;# 
  3056  0494                     	;# 
  3057  0495                     	;# 
  3058  0495                     	;# 
  3059  0496                     	;# 
  3060  0497                     	;# 
  3061  0498                     	;# 
  3062  0499                     	;# 
  3063  049A                     	;# 
  3064  049B                     	;# 
  3065  049C                     	;# 
  3066  049D                     	;# 
  3067  050C                     	;# 
  3068  050C                     	;# 
  3069  050D                     	;# 
  3070  050E                     	;# 
  3071  050F                     	;# 
  3072  050F                     	;# 
  3073  0510                     	;# 
  3074  0511                     	;# 
  3075  0512                     	;# 
  3076  0512                     	;# 
  3077  0513                     	;# 
  3078  0514                     	;# 
  3079  0515                     	;# 
  3080  0515                     	;# 
  3081  0516                     	;# 
  3082  0517                     	;# 
  3083  0518                     	;# 
  3084  0519                     	;# 
  3085  051A                     	;# 
  3086  051B                     	;# 
  3087  051C                     	;# 
  3088  051D                     	;# 
  3089  058C                     	;# 
  3090  058C                     	;# 
  3091  058D                     	;# 
  3092  058E                     	;# 
  3093  058F                     	;# 
  3094  058F                     	;# 
  3095  0590                     	;# 
  3096  0591                     	;# 
  3097  0592                     	;# 
  3098  0593                     	;# 
  3099  060C                     	;# 
  3100  060D                     	;# 
  3101  060E                     	;# 
  3102  060F                     	;# 
  3103  0610                     	;# 
  3104  0611                     	;# 
  3105  0612                     	;# 
  3106  0613                     	;# 
  3107  0614                     	;# 
  3108  0616                     	;# 
  3109  0617                     	;# 
  3110  0618                     	;# 
  3111  0619                     	;# 
  3112  061A                     	;# 
  3113  061B                     	;# 
  3114  061C                     	;# 
  3115  061D                     	;# 
  3116  061E                     	;# 
  3117  068C                     	;# 
  3118  068D                     	;# 
  3119  068E                     	;# 
  3120  068F                     	;# 
  3121  0690                     	;# 
  3122  0691                     	;# 
  3123  0692                     	;# 
  3124  0693                     	;# 
  3125  0694                     	;# 
  3126  070C                     	;# 
  3127  070D                     	;# 
  3128  070E                     	;# 
  3129  070F                     	;# 
  3130  0710                     	;# 
  3131  0711                     	;# 
  3132  0712                     	;# 
  3133  0713                     	;# 
  3134  0714                     	;# 
  3135  0716                     	;# 
  3136  0717                     	;# 
  3137  0718                     	;# 
  3138  0719                     	;# 
  3139  071A                     	;# 
  3140  071B                     	;# 
  3141  071C                     	;# 
  3142  071D                     	;# 
  3143  071E                     	;# 
  3144  0796                     	;# 
  3145  0797                     	;# 
  3146  0798                     	;# 
  3147  0799                     	;# 
  3148  079A                     	;# 
  3149  079B                     	;# 
  3150  080C                     	;# 
  3151  080D                     	;# 
  3152  080E                     	;# 
  3153  080F                     	;# 
  3154  0810                     	;# 
  3155  0811                     	;# 
  3156  0812                     	;# 
  3157  0813                     	;# 
  3158  0814                     	;# 
  3159  081A                     	;# 
  3160  081B                     	;# 
  3161  081C                     	;# 
  3162  081D                     	;# 
  3163  081E                     	;# 
  3164  081F                     	;# 
  3165  088C                     	;# 
  3166  088D                     	;# 
  3167  088E                     	;# 
  3168  088F                     	;# 
  3169  0890                     	;# 
  3170  0891                     	;# 
  3171  0892                     	;# 
  3172  0893                     	;# 
  3173  0895                     	;# 
  3174  0896                     	;# 
  3175  0897                     	;# 
  3176  0898                     	;# 
  3177  0899                     	;# 
  3178  089A                     	;# 
  3179  089B                     	;# 
  3180  090C                     	;# 
  3181  090E                     	;# 
  3182  090F                     	;# 
  3183  091F                     	;# 
  3184  098F                     	;# 
  3185  098F                     	;# 
  3186  0990                     	;# 
  3187  0991                     	;# 
  3188  0992                     	;# 
  3189  0993                     	;# 
  3190  0994                     	;# 
  3191  0995                     	;# 
  3192  0996                     	;# 
  3193  0997                     	;# 
  3194  0E0F                     	;# 
  3195  0E10                     	;# 
  3196  0E11                     	;# 
  3197  0E12                     	;# 
  3198  0E13                     	;# 
  3199  0E14                     	;# 
  3200  0E15                     	;# 
  3201  0E16                     	;# 
  3202  0E17                     	;# 
  3203  0E18                     	;# 
  3204  0E19                     	;# 
  3205  0E1A                     	;# 
  3206  0E1B                     	;# 
  3207  0E1C                     	;# 
  3208  0E1D                     	;# 
  3209  0E1E                     	;# 
  3210  0E1F                     	;# 
  3211  0E20                     	;# 
  3212  0E21                     	;# 
  3213  0E22                     	;# 
  3214  0E23                     	;# 
  3215  0E24                     	;# 
  3216  0E25                     	;# 
  3217  0E26                     	;# 
  3218  0E27                     	;# 
  3219  0E28                     	;# 
  3220  0E29                     	;# 
  3221  0E2A                     	;# 
  3222  0E2B                     	;# 
  3223  0E2C                     	;# 
  3224  0E2D                     	;# 
  3225  0E2E                     	;# 
  3226  0E2F                     	;# 
  3227  0E30                     	;# 
  3228  0E31                     	;# 
  3229  0E32                     	;# 
  3230  0E33                     	;# 
  3231  0E34                     	;# 
  3232  0E35                     	;# 
  3233  0E36                     	;# 
  3234  0E37                     	;# 
  3235  0E8F                     	;# 
  3236  0E90                     	;# 
  3237  0E91                     	;# 
  3238  0E92                     	;# 
  3239  0E93                     	;# 
  3240  0E94                     	;# 
  3241  0E95                     	;# 
  3242  0E96                     	;# 
  3243  0E97                     	;# 
  3244  0E9C                     	;# 
  3245  0E9D                     	;# 
  3246  0E9E                     	;# 
  3247  0EA1                     	;# 
  3248  0EA2                     	;# 
  3249  0EA3                     	;# 
  3250  0EA4                     	;# 
  3251  0EA5                     	;# 
  3252  0EA9                     	;# 
  3253  0EAA                     	;# 
  3254  0EAB                     	;# 
  3255  0EAC                     	;# 
  3256  0EB1                     	;# 
  3257  0EB2                     	;# 
  3258  0EB3                     	;# 
  3259  0EB8                     	;# 
  3260  0EB9                     	;# 
  3261  0EBA                     	;# 
  3262  0EBB                     	;# 
  3263  0EBC                     	;# 
  3264  0EBD                     	;# 
  3265  0EBE                     	;# 
  3266  0EC3                     	;# 
  3267  0EC5                     	;# 
  3268  0EC6                     	;# 
  3269  0EC7                     	;# 
  3270  0EC8                     	;# 
  3271  0EC9                     	;# 
  3272  0ECA                     	;# 
  3273  0ECB                     	;# 
  3274  0ECC                     	;# 
  3275  0F10                     	;# 
  3276  0F11                     	;# 
  3277  0F12                     	;# 
  3278  0F13                     	;# 
  3279  0F14                     	;# 
  3280  0F15                     	;# 
  3281  0F16                     	;# 
  3282  0F17                     	;# 
  3283  0F18                     	;# 
  3284  0F19                     	;# 
  3285  0F1A                     	;# 
  3286  0F1B                     	;# 
  3287  0F1C                     	;# 
  3288  0F1D                     	;# 
  3289  0F1E                     	;# 
  3290  0F1F                     	;# 
  3291  0F20                     	;# 
  3292  0F21                     	;# 
  3293  0F22                     	;# 
  3294  0F23                     	;# 
  3295  0F24                     	;# 
  3296  0F25                     	;# 
  3297  0F26                     	;# 
  3298  0F27                     	;# 
  3299  0F28                     	;# 
  3300  0F29                     	;# 
  3301  0F2A                     	;# 
  3302  0F2B                     	;# 
  3303  0F2C                     	;# 
  3304  0F2D                     	;# 
  3305  0F2E                     	;# 
  3306  0F2F                     	;# 
  3307  0F30                     	;# 
  3308  0F31                     	;# 
  3309  0F32                     	;# 
  3310  0F38                     	;# 
  3311  0F39                     	;# 
  3312  0F3A                     	;# 
  3313  0F3B                     	;# 
  3314  0F3C                     	;# 
  3315  0F3D                     	;# 
  3316  0F3E                     	;# 
  3317  0F3F                     	;# 
  3318  0F40                     	;# 
  3319  0F41                     	;# 
  3320  0F43                     	;# 
  3321  0F44                     	;# 
  3322  0F45                     	;# 
  3323  0F46                     	;# 
  3324  0F47                     	;# 
  3325  0F48                     	;# 
  3326  0F49                     	;# 
  3327  0F4A                     	;# 
  3328  0F4B                     	;# 
  3329  0F4C                     	;# 
  3330  0F4E                     	;# 
  3331  0F4F                     	;# 
  3332  0F50                     	;# 
  3333  0F51                     	;# 
  3334  0F52                     	;# 
  3335  0F53                     	;# 
  3336  0F54                     	;# 
  3337  0F55                     	;# 
  3338  0F56                     	;# 
  3339  0F57                     	;# 
  3340  0F59                     	;# 
  3341  0F5A                     	;# 
  3342  0F5B                     	;# 
  3343  0F5C                     	;# 
  3344  0F5D                     	;# 
  3345  0F61                     	;# 
  3346  0F62                     	;# 
  3347  0F64                     	;# 
  3348  0F65                     	;# 
  3349  0F66                     	;# 
  3350  0F67                     	;# 
  3351  0F68                     	;# 
  3352  0F69                     	;# 
  3353  0F6A                     	;# 
  3354  0F6B                     	;# 
  3355  0F6C                     	;# 
  3356  0F6D                     	;# 
  3357  0FE4                     	;# 
  3358  0FE5                     	;# 
  3359  0FE6                     	;# 
  3360  0FE7                     	;# 
  3361  0FE8                     	;# 
  3362  0FE9                     	;# 
  3363  0FEA                     	;# 
  3364  0FEB                     	;# 
  3365  0FED                     	;# 
  3366  0FEE                     	;# 
  3367  0FEF                     	;_lutRY
  3368                           
  3369                           	psect	idataCOMMON
  3370  07FE                     __pidataCOMMON:	
  3371                           
  3372                           ;initializer for _analogMode
  3373  07FE  3401               	retlw	1
  3374                           
  3375                           	psect	idataBANK0
  3376  0E2F                     __pidataBANK0:	
  3377                           
  3378                           ;initializer for _PWMPeriod
  3379  0E2F  3401               	retlw	1
  3380  0E30  3400               	retlw	0
  3381                           
  3382                           ;initializer for _responseLength
  3383  0E31  3409               	retlw	9
  3384                           
  3385                           ;initializer for _debounceLoops
  3386  0E32  3403               	retlw	3
  3387                           
  3388                           ;initializer for _lyData
  3389  0E33  34F7               	retlw	247
  3390                           
  3391                           ;initializer for _lxData
  3392  0E34  34F7               	retlw	247
  3393                           
  3394                           ;initializer for _ryData
  3395  0E35  34F7               	retlw	247
  3396                           
  3397                           ;initializer for _rxData
  3398  0E36  34F7               	retlw	247
  3399                           
  3400                           ;initializer for _digitalStateSecond
  3401  0E37  34FF               	retlw	255
  3402                           
  3403                           ;initializer for _digitalStateFirst
  3404  0E38  34FF               	retlw	255
  3405                           
  3406                           ;initializer for _response
  3407  0E39  349E               	retlw	158
  3408  0E3A  345A               	retlw	90
  3409  0E3B  3400               	retlw	0
  3410  0E3C  3400               	retlw	0
  3411  0E3D  3400               	retlw	0
  3412  0E3E  3400               	retlw	0
  3413  0E3F  3400               	retlw	0
  3414  0E40  3400               	retlw	0
  3415  0E41  3400               	retlw	0
  3416  0E42  3400               	retlw	0
  3417  0E43  3400               	retlw	0
  3418  0E44  3400               	retlw	0
  3419  0E45  3400               	retlw	0
  3420  0E46  3400               	retlw	0
  3421  0E47  3400               	retlw	0
  3422  0E48  3400               	retlw	0
  3423  0E49  3400               	retlw	0
  3424  0E4A  3400               	retlw	0
  3425  0E4B  3400               	retlw	0
  3426  0E4C  3400               	retlw	0
  3427  0011                     _TRISAbits	set	17
  3428  0013                     _TRISCbits	set	19
  3429  0015                     _TRISE	set	21
  3430  0014                     _TRISD	set	20
  3431  0013                     _TRISC	set	19
  3432  0012                     _TRISB	set	18
  3433  0011                     _TRISA	set	17
  3434  000B                     _INTCONbits	set	11
  3435  000F                     _PORTDbits	set	15
  3436  0014                     _TRISDbits	set	20
  3437  006B                     _RB3	set	107
  3438  006A                     _RB2	set	106
  3439  006D                     _RB5	set	109
  3440  006C                     _RB4	set	108
  3441  0061                     _RA1	set	97
  3442  0062                     _RA2	set	98
  3443  0063                     _RA3	set	99
  3444  0060                     _RA0	set	96
  3445  006F                     _RB7	set	111
  3446  006E                     _RB6	set	110
  3447  0072                     _RC2	set	114
  3448  0078                     _RD0	set	120
  3449  0069                     _RB1	set	105
  3450  0068                     _RB0	set	104
  3451  0066                     _RA6	set	102
  3452  0067                     _RA7	set	103
  3453  0065                     _RA5	set	101
  3454  0064                     _RA4	set	100
  3455  007C                     _RD4	set	124
  3456  0098                     _ADCLK	set	152
  3457  009A                     _ADREF	set	154
  3458  0095                     _ADCON2	set	149
  3459  0094                     _ADCON1	set	148
  3460  0093                     _ADCON0	set	147
  3461  008C                     _ADRESL	set	140
  3462  008D                     _ADRESH	set	141
  3463  0093                     _ADCON0bits	set	147
  3464  009D                     _ADACQ	set	157
  3465  009C                     _ADPRE	set	156
  3466  009E                     _ADPCH	set	158
  3467  018F                     _SSP1STATbits	set	399
  3468  0190                     _SSP1CON1	set	400
  3469  018F                     _SSP1STAT	set	399
  3470  018C                     _SSP1BUF	set	396
  3471  029A                     _T6CON	set	666
  3472  029D                     _T6RST	set	669
  3473  029B                     _T6HLT	set	667
  3474  029C                     _T6CLKCON	set	668
  3475  0298                     _T6TMR	set	664
  3476  38C8                     _SSP1IE	set	14536
  3477  3878                     _SSP1IF	set	14456
  3478  3885                     _TMR6IF	set	14469
  3479  38D5                     _TMR6IE	set	14549
  3480  081F                     _NVMCON2	set	2079
  3481  081C                     _NVMDATL	set	2076
  3482  081A                     _NVMADRL	set	2074
  3483  081B                     _NVMADRH	set	2075
  3484  081E                     _NVMCON1bits	set	2078
  3485  0E8F                     _PPSLOCK	set	3727
  3486  0F25                     _RC5PPS	set	3877
  3487  0F65                     _WPUE	set	3941
  3488  0F5A                     _WPUD	set	3930
  3489  0F4F                     _WPUC	set	3919
  3490  0F44                     _WPUB	set	3908
  3491  0F39                     _WPUA	set	3897
  3492  0F64                     _ANSELE	set	3940
  3493  0F59                     _ANSELD	set	3929
  3494  0F4E                     _ANSELC	set	3918
  3495  0F43                     _ANSELB	set	3907
  3496  0F38                     _ANSELA	set	3896
  3497                           
  3498                           ; #config settings
  3499  0000                     
  3500                           	psect	cinit
  3501  01A0                     start_initialization:	
  3502  01A0                     __initialization:		;BIGRAM
  3503                           
  3504                           ; Initialize objects allocated to COMMON
  3505  01A0  3187  27FE  3181   	fcall	__pidataCOMMON	;fetch initializer
  3506  01A3  00F9               	movwf	__pdataCOMMON& (0+127)
  3507                           
  3508                           ; Initialize objects allocated to BANK0
  3509  01A4  302F               	movlw	low __pidataBANK0
  3510  01A5  0084               	movwf	4
  3511  01A6  308E               	movlw	(high __pidataBANK0)| (0+128)
  3512  01A7  0085               	movwf	5
  3513  01A8  3050               	movlw	low __pdataBANK0
  3514  01A9  0086               	movwf	6
  3515  01AA  3000               	movlw	high __pdataBANK0
  3516  01AB  0087               	movwf	7
  3517  01AC  3000               	movlw	0
  3518  01AD  00FF               	movwf	btemp+1
  3519  01AE  301E               	movlw	30
  3520  01AF  318D  25E3  3181   	fcall	init_ram
  3521                           
  3522                           ; Clear objects allocated to BIGRAM
  3523  01B2  30F0               	movlw	low (0+9200)
  3524  01B3  0084               	movwf	4
  3525  01B4  3023               	movlw	high (0+9200)
  3526  01B5  0085               	movwf	5
  3527  01B6  3000               	movlw	0
  3528  01B7  00FE               	movwf	btemp
  3529  01B8  3004               	movlw	4
  3530  01B9  00FF               	movwf	btemp+1
  3531  01BA  318D  25D7  3181   	fcall	clear_ram0
  3532                           
  3533                           ; Clear objects allocated to COMMON
  3534  01BD  01F5               	clrf	__pbssCOMMON& (0+127)
  3535  01BE  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  3536  01BF  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  3537  01C0  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  3538                           
  3539                           ; Clear objects allocated to BANK0
  3540  01C1  01EE               	clrf	__pbssBANK0& (0+127)
  3541  01C2  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  3542                           
  3543                           ; Clear objects allocated to BANK1
  3544  01C3  30A0               	movlw	low __pbssBANK1
  3545  01C4  0084               	movwf	4
  3546  01C5  3000               	movlw	high __pbssBANK1
  3547  01C6  0085               	movwf	5
  3548  01C7  3040               	movlw	64
  3549  01C8  00FE               	movwf	btemp
  3550  01C9  3000               	movlw	0
  3551  01CA  00FF               	movwf	btemp+1
  3552  01CB  318D  25D7  3181   	fcall	clear_ram0
  3553  01CE                     end_of_initialization:	
  3554                           ;End of C runtime variable initialization code
  3555                           
  3556  01CE                     __end_of__initialization:	
  3557  01CE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3558  01CF  0020               	movlb	0
  3559  01D0  318F  2FA1         	ljmp	_main	;jump to C main() function
  3560                           
  3561                           	psect	bssCOMMON
  3562  0075                     __pbssCOMMON:	
  3563  0075                     _PWMOn:	
  3564  0075                     	ds	2
  3565  0077                     _cmdCounter:	
  3566  0077                     	ds	1
  3567  0078                     _index:	
  3568  0078                     	ds	1
  3569                           
  3570                           	psect	dataCOMMON
  3571  0079                     __pdataCOMMON:	
  3572  0079                     _analogMode:	
  3573  0079                     	ds	1
  3574                           
  3575                           	psect	bssBANK0
  3576  006E                     __pbssBANK0:	
  3577  006E                     _previousCmd:	
  3578  006E                     	ds	1
  3579  006F                     _escapeMode:	
  3580  006F                     	ds	1
  3581                           
  3582                           	psect	dataBANK0
  3583  0050                     __pdataBANK0:	
  3584  0050                     _PWMPeriod:	
  3585  0050                     	ds	2
  3586  0052                     _responseLength:	
  3587  0052                     	ds	1
  3588  0053                     _debounceLoops:	
  3589  0053                     	ds	1
  3590  0054                     _lyData:	
  3591  0054                     	ds	1
  3592  0055                     _lxData:	
  3593  0055                     	ds	1
  3594  0056                     _ryData:	
  3595  0056                     	ds	1
  3596  0057                     _rxData:	
  3597  0057                     	ds	1
  3598  0058                     _digitalStateSecond:	
  3599  0058                     	ds	1
  3600  0059                     _digitalStateFirst:	
  3601  0059                     	ds	1
  3602  005A                     _response:	
  3603  005A                     	ds	20
  3604                           
  3605                           	psect	bssBANK1
  3606  00A0                     __pbssBANK1:	
  3607  00A0                     _IndexDigitalByte2:	
  3608  00A0                     	ds	8
  3609  00A8                     _IndexDigitalByte1:	
  3610  00A8                     	ds	8
  3611  00B0                     _PreviousDigitalByte2:	
  3612  00B0                     	ds	8
  3613  00B8                     _PreviousDigitalByte1:	
  3614  00B8                     	ds	8
  3615  00C0                     _DigitalControllerByte2:	
  3616  00C0                     	ds	8
  3617  00C8                     _DigitalControllerByte1:	
  3618  00C8                     	ds	8
  3619  00D0                     _analogStateSecond:	
  3620  00D0                     	ds	8
  3621  00D8                     _analogStateFirst:	
  3622  00D8                     	ds	8
  3623                           
  3624                           	psect	inittext
  3625  0DE3                     init_ram:	
  3626  0DE3  00FE               	movwf	btemp
  3627  0DE4                     initloop:	
  3628  0DE4  0012               	moviw fsr0++
  3629  0DE5  001E               	movwi fsr1++
  3630  0DE6  3001               	movlw	1
  3631  0DE7  02FE               	subwf	btemp,f
  3632  0DE8  3000               	movlw	0
  3633  0DE9  3BFF               	subwfb	btemp+1,f
  3634  0DEA  087F               	movf	btemp+1,w
  3635  0DEB  047E               	iorwf	btemp,w
  3636  0DEC  1D03               	skipz
  3637  0DED  2DE4               	goto	initloop
  3638  0DEE  3400               	retlw	0
  3639                           
  3640                           	psect	clrtext
  3641  0DD7                     clear_ram0:	
  3642                           ;	Called with FSR0 containing the base address, and
  3643                           ;	btemp/btemp+1 has the size to clear
  3644                           
  3645  0DD7  0064               	clrwdt	;clear the watchdog before getting into this loop
  3646  0DD8                     clrloop0:	
  3647  0DD8  0180               	clrf	0	;clear RAM location pointed to by FSR
  3648  0DD9  3101               	addfsr 0,1
  3649  0DDA  3001               	movlw	1
  3650  0DDB  02FE               	subwf	btemp,f
  3651  0DDC  3000               	movlw	0
  3652  0DDD  3BFF               	subwfb	btemp+1,f
  3653  0DDE  087F               	movf	btemp+1,w
  3654  0DDF  047E               	iorwf	btemp,w
  3655  0DE0  1D03               	skipz
  3656  0DE1  2DD8               	goto	clrloop0	;have we reached the end yet?
  3657  0DE2  3400               	retlw	0	;all done for this memory range, return
  3658                           
  3659                           	psect	cstackCOMMON
  3660  0070                     __pcstackCOMMON:	
  3661  0070                     ?_spiRead:	
  3662  0070                     ??_spiRead:	
  3663                           ; 1 bytes @ 0x0
  3664                           
  3665  0070                     ?_spiWrite:	
  3666                           ; 1 bytes @ 0x0
  3667                           
  3668  0070                     ??_spiWrite:	
  3669                           ; 1 bytes @ 0x0
  3670                           
  3671  0070                     ?_picInit:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     ?_adcInit:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ?_lutInit:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ?_configureController:	
  3681                           ; 1 bytes @ 0x0
  3682                           
  3683  0070                     ?_readController:	
  3684                           ; 1 bytes @ 0x0
  3685                           
  3686  0070                     ?_readControllerAnalog:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_eepromRead:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_nvmUnlock:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_pollController:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ??_pollController:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_PS2Command:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_PWMTestFunc:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_main:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_reversebyte:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_ppsUnlock:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_ppsLock:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_spiReceiveWait:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ??_spiReceiveWait:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     spiWrite@dat:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728                           
  3729                           ; 1 bytes @ 0x0
  3730  0070                     	ds	1
  3731  0071                     pollController@response:	
  3732                           
  3733                           ; 1 bytes @ 0x1
  3734  0071                     	ds	1
  3735  0072                     ??_PS2Command:	
  3736                           
  3737                           ; 1 bytes @ 0x2
  3738  0072                     	ds	2
  3739  0074                     PS2Command@cmd:	
  3740                           
  3741                           ; 1 bytes @ 0x4
  3742  0074                     	ds	1
  3743                           
  3744                           	psect	cstackBANK0
  3745  0020                     __pcstackBANK0:	
  3746  0020                     ??_adcInit:	
  3747  0020                     ??_readController:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0020                     ??_eepromRead:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0020                     ?_eepromWrite:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0020                     ?_spiInit:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0020                     ??_nvmUnlock:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0020                     ?_PwmInit:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0020                     ?_PWMButton:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0020                     ??_reversebyte:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0020                     ??_ppsUnlock:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0020                     ??_ppsLock:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0020                     ?_readADC:	
  3778                           ; 1 bytes @ 0x0
  3779                           
  3780  0020                     ?___wmul:	
  3781                           ; 2 bytes @ 0x0
  3782                           
  3783  0020                     spiInit@sDataSample:	
  3784                           ; 2 bytes @ 0x0
  3785                           
  3786  0020                     eepromWrite@data:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0020                     PwmInit@idle:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0020                     PWMButton@value:	
  3793                           ; 2 bytes @ 0x0
  3794                           
  3795  0020                     readADC@channel:	
  3796                           ; 2 bytes @ 0x0
  3797                           
  3798  0020                     ___wmul@multiplier:	
  3799                           ; 2 bytes @ 0x0
  3800                           
  3801                           
  3802                           ; 2 bytes @ 0x0
  3803  0020                     	ds	1
  3804  0021                     ??_eepromWrite:	
  3805  0021                     spiInit@sClockIdle:	
  3806                           ; 1 bytes @ 0x1
  3807                           
  3808  0021                     eepromWrite@address:	
  3809                           ; 1 bytes @ 0x1
  3810                           
  3811  0021                     eepromRead@address:	
  3812                           ; 1 bytes @ 0x1
  3813                           
  3814                           
  3815                           ; 1 bytes @ 0x1
  3816  0021                     	ds	1
  3817  0022                     ??_PwmInit:	
  3818  0022                     ??_PWMButton:	
  3819                           ; 1 bytes @ 0x2
  3820                           
  3821  0022                     ??_readADC:	
  3822                           ; 1 bytes @ 0x2
  3823                           
  3824  0022                     readController@analogMode:	
  3825                           ; 1 bytes @ 0x2
  3826                           
  3827  0022                     spiInit@sTransmitEdge:	
  3828                           ; 1 bytes @ 0x2
  3829                           
  3830  0022                     eepromWrite@interruptStatus:	
  3831                           ; 1 bytes @ 0x2
  3832                           
  3833  0022                     eepromRead@data:	
  3834                           ; 1 bytes @ 0x2
  3835                           
  3836  0022                     ___wmul@multiplicand:	
  3837                           ; 1 bytes @ 0x2
  3838                           
  3839                           
  3840                           ; 2 bytes @ 0x2
  3841  0022                     	ds	1
  3842  0023                     ??_spiInit:	
  3843  0023                     reversebyte@byte:	
  3844                           ; 1 bytes @ 0x3
  3845                           
  3846  0023                     spiInit@sType:	
  3847                           ; 1 bytes @ 0x3
  3848                           
  3849                           
  3850                           ; 1 bytes @ 0x3
  3851  0023                     	ds	1
  3852  0024                     ??_picInit:	
  3853  0024                     ??_PWMTestFunc:	
  3854                           ; 1 bytes @ 0x4
  3855                           
  3856  0024                     ??___wmul:	
  3857                           ; 1 bytes @ 0x4
  3858                           
  3859  0024                     ___wmul@product:	
  3860                           ; 1 bytes @ 0x4
  3861                           
  3862                           
  3863                           ; 2 bytes @ 0x4
  3864  0024                     	ds	2
  3865  0026                     ?___awdiv:	
  3866  0026                     ___awdiv@divisor:	
  3867                           ; 2 bytes @ 0x6
  3868                           
  3869                           
  3870                           ; 2 bytes @ 0x6
  3871  0026                     	ds	2
  3872  0028                     ___awdiv@dividend:	
  3873                           
  3874                           ; 2 bytes @ 0x8
  3875  0028                     	ds	1
  3876  0029                     ??_configureController:	
  3877  0029                     ??_readControllerAnalog:	
  3878                           ; 1 bytes @ 0x9
  3879                           
  3880                           
  3881                           ; 1 bytes @ 0x9
  3882  0029                     	ds	1
  3883  002A                     ??___awdiv:	
  3884  002A                     configureController@lxMin:	
  3885                           ; 1 bytes @ 0xA
  3886                           
  3887                           
  3888                           ; 1 bytes @ 0xA
  3889  002A                     	ds	1
  3890  002B                     configureController@lxMax:	
  3891  002B                     ___awdiv@counter:	
  3892                           ; 1 bytes @ 0xB
  3893                           
  3894                           
  3895                           ; 1 bytes @ 0xB
  3896  002B                     	ds	1
  3897  002C                     configureController@lyMin:	
  3898  002C                     ___awdiv@sign:	
  3899                           ; 1 bytes @ 0xC
  3900                           
  3901                           
  3902                           ; 1 bytes @ 0xC
  3903  002C                     	ds	1
  3904  002D                     configureController@lyMax:	
  3905  002D                     ___awdiv@quotient:	
  3906                           ; 1 bytes @ 0xD
  3907                           
  3908                           
  3909                           ; 2 bytes @ 0xD
  3910  002D                     	ds	1
  3911  002E                     configureController@rxMin:	
  3912                           
  3913                           ; 1 bytes @ 0xE
  3914  002E                     	ds	1
  3915  002F                     ?_Map:	
  3916  002F                     configureController@rxMax:	
  3917                           ; 1 bytes @ 0xF
  3918                           
  3919  002F                     Map@x:	
  3920                           ; 1 bytes @ 0xF
  3921                           
  3922                           
  3923                           ; 2 bytes @ 0xF
  3924  002F                     	ds	1
  3925  0030                     configureController@ryMin:	
  3926                           
  3927                           ; 1 bytes @ 0x10
  3928  0030                     	ds	1
  3929  0031                     configureController@ryMax:	
  3930  0031                     Map@inMin:	
  3931                           ; 1 bytes @ 0x11
  3932                           
  3933                           
  3934                           ; 2 bytes @ 0x11
  3935  0031                     	ds	1
  3936  0032                     configureController@lx:	
  3937                           
  3938                           ; 1 bytes @ 0x12
  3939  0032                     	ds	1
  3940  0033                     configureController@ly:	
  3941  0033                     Map@inMax:	
  3942                           ; 1 bytes @ 0x13
  3943                           
  3944                           
  3945                           ; 2 bytes @ 0x13
  3946  0033                     	ds	1
  3947  0034                     configureController@rx:	
  3948                           
  3949                           ; 1 bytes @ 0x14
  3950  0034                     	ds	1
  3951  0035                     configureController@ry:	
  3952  0035                     Map@outMin:	
  3953                           ; 1 bytes @ 0x15
  3954                           
  3955                           
  3956                           ; 2 bytes @ 0x15
  3957  0035                     	ds	2
  3958  0037                     Map@outMax:	
  3959                           
  3960                           ; 2 bytes @ 0x17
  3961  0037                     	ds	2
  3962  0039                     ??_lutInit:	
  3963  0039                     ??_Map:	
  3964                           ; 1 bytes @ 0x19
  3965                           
  3966                           
  3967                           ; 1 bytes @ 0x19
  3968  0039                     	ds	9
  3969  0042                     lutInit@lxMin:	
  3970                           
  3971                           ; 1 bytes @ 0x22
  3972  0042                     	ds	1
  3973  0043                     lutInit@lxMax:	
  3974                           
  3975                           ; 1 bytes @ 0x23
  3976  0043                     	ds	1
  3977  0044                     lutInit@lyMin:	
  3978                           
  3979                           ; 1 bytes @ 0x24
  3980  0044                     	ds	1
  3981  0045                     lutInit@lyMax:	
  3982                           
  3983                           ; 1 bytes @ 0x25
  3984  0045                     	ds	1
  3985  0046                     lutInit@rxMin:	
  3986                           
  3987                           ; 1 bytes @ 0x26
  3988  0046                     	ds	1
  3989  0047                     lutInit@rxMax:	
  3990                           
  3991                           ; 1 bytes @ 0x27
  3992  0047                     	ds	1
  3993  0048                     lutInit@ryMin:	
  3994                           
  3995                           ; 1 bytes @ 0x28
  3996  0048                     	ds	1
  3997  0049                     lutInit@ryMax:	
  3998                           
  3999                           ; 1 bytes @ 0x29
  4000  0049                     	ds	1
  4001  004A                     lutInit@position:	
  4002                           
  4003                           ; 2 bytes @ 0x2A
  4004  004A                     	ds	2
  4005  004C                     ??_main:	
  4006                           
  4007                           ; 1 bytes @ 0x2C
  4008  004C                     	ds	1
  4009  004D                     main@slaveSelectStatePrev:	
  4010                           
  4011                           ; 1 bytes @ 0x2D
  4012  004D                     	ds	1
  4013  004E                     main@count:	
  4014                           
  4015                           ; 1 bytes @ 0x2E
  4016  004E                     	ds	1
  4017  004F                     main@slaveSelect:	
  4018                           
  4019                           ; 1 bytes @ 0x2F
  4020  004F                     	ds	1
  4021                           
  4022                           	psect	maintext
  4023  0FA1                     __pmaintext:	
  4024 ;;
  4025 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4026 ;;
  4027 ;; *************** function _main *****************
  4028 ;; Defined at:
  4029 ;;		line 486 in file "main.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;  slaveSelect     1   47[BANK0 ] unsigned char 
  4034 ;;  count           1   46[BANK0 ] unsigned char 
  4035 ;;  slaveSelectS    1   45[BANK0 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : B1F/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4046 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4047 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4049 ;;Total ram usage:        4 bytes
  4050 ;; Hardware stack levels required when called:    6
  4051 ;; This function calls:
  4052 ;;		_PWMTestFunc
  4053 ;;		_PwmInit
  4054 ;;		_adcInit
  4055 ;;		_configureController
  4056 ;;		_lutInit
  4057 ;;		_picInit
  4058 ;;		_readController
  4059 ;;		_readControllerAnalog
  4060 ;; This function is called by:
  4061 ;;		Startup code after reset
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _main
  4067  0FA1                     _main:	
  4068  0FA1                     l3059:	
  4069                           ;incstack = 0
  4070                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4071                           
  4072                           
  4073                           ;main.c: 488:     picInit();
  4074  0FA1  318F  2723  318F   	fcall	_picInit
  4075                           
  4076                           ;main.c: 489:     adcInit();
  4077  0FA4  318D  25CD  318F   	fcall	_adcInit
  4078  0FA7                     l3061:	
  4079                           
  4080                           ;main.c: 490:     lutInit();
  4081  0FA7  3181  21D2  318F   	fcall	_lutInit
  4082  0FAA                     l3063:	
  4083                           
  4084                           ;main.c: 491:     PwmInit(167);
  4085  0FAA  30A7               	movlw	167
  4086  0FAB  0020               	movlb	0	; select bank0
  4087  0FAC  00A0               	movwf	PwmInit@idle
  4088  0FAD  3000               	movlw	0
  4089  0FAE  00A1               	movwf	PwmInit@idle+1
  4090  0FAF  318E  2615  318F   	fcall	_PwmInit
  4091  0FB2                     l3065:	
  4092                           
  4093                           ;main.c: 495:     response[1] = 0x5A;
  4094  0FB2  305A               	movlw	90
  4095  0FB3  0020               	movlb	0	; select bank0
  4096  0FB4  00CC               	movwf	??_main
  4097  0FB5  084C               	movf	??_main,w
  4098  0FB6  00DB               	movwf	_response+1
  4099  0FB7                     l3067:	
  4100                           
  4101                           ;main.c: 497:     char slaveSelect;;main.c: 498:     char slaveSelectStatePrev = 0;
  4102  0FB7  01CD               	clrf	main@slaveSelectStatePrev
  4103  0FB8                     l3069:	
  4104                           
  4105                           ;main.c: 499:     char count = 0;
  4106  0FB8  01CE               	clrf	main@count
  4107  0FB9                     l3071:	
  4108                           
  4109                           ;main.c: 500:     RA4 = 1;
  4110  0FB9  160C               	bsf	12,4	;volatile
  4111  0FBA                     l3073:	
  4112                           
  4113                           ;main.c: 505:         PWMTestFunc();
  4114  0FBA  318E  26EB  318F   	fcall	_PWMTestFunc
  4115  0FBD                     l3075:	
  4116                           
  4117                           ;main.c: 508:         if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4118  0FBD  307F               	movlw	127
  4119  0FBE  0020               	movlb	0	; select bank0
  4120  0FBF  0659               	xorwf	_digitalStateFirst,w
  4121  0FC0  1D03               	btfss	3,2
  4122  0FC1  2FC3               	goto	u2201
  4123  0FC2  2FC4               	goto	u2200
  4124  0FC3                     u2201:	
  4125  0FC3  2FCD               	goto	l3081
  4126  0FC4                     u2200:	
  4127  0FC4                     l3077:	
  4128  0FC4  305F               	movlw	95
  4129  0FC5  0658               	xorwf	_digitalStateSecond,w
  4130  0FC6  1D03               	btfss	3,2
  4131  0FC7  2FC9               	goto	u2211
  4132  0FC8  2FCA               	goto	u2210
  4133  0FC9                     u2211:	
  4134  0FC9  2FCD               	goto	l3081
  4135  0FCA                     u2210:	
  4136  0FCA                     l3079:	
  4137                           
  4138                           ;main.c: 510:             configureController();
  4139  0FCA  3183  23C3  318F   	fcall	_configureController
  4140  0FCD                     l3081:	
  4141                           
  4142                           ;main.c: 515:         slaveSelect = RA5;
  4143  0FCD  3000               	movlw	0
  4144  0FCE  0020               	movlb	0	; select bank0
  4145  0FCF  1A8C               	btfsc	12,5	;volatile
  4146  0FD0  3001               	movlw	1
  4147  0FD1  00CF               	movwf	main@slaveSelect
  4148  0FD2                     l3083:	
  4149                           
  4150                           ;main.c: 517:         if (slaveSelect) {
  4151  0FD2  084F               	movf	main@slaveSelect,w
  4152  0FD3  1903               	btfsc	3,2
  4153  0FD4  2FD6               	goto	u2221
  4154  0FD5  2FD7               	goto	u2220
  4155  0FD6                     u2221:	
  4156  0FD6  2FDB               	goto	l186
  4157  0FD7                     u2220:	
  4158  0FD7                     l3085:	
  4159                           
  4160                           ;main.c: 518:             count++;
  4161  0FD7  3001               	movlw	1
  4162  0FD8  00CC               	movwf	??_main
  4163  0FD9  084C               	movf	??_main,w
  4164  0FDA  07CE               	addwf	main@count,f
  4165  0FDB                     l186:	
  4166                           ;main.c: 519:         }
  4167                           
  4168                           
  4169                           ;main.c: 521:         if (slaveSelect ^ slaveSelectStatePrev) {
  4170  0FDB  084F               	movf	main@slaveSelect,w
  4171  0FDC  064D               	xorwf	main@slaveSelectStatePrev,w
  4172  0FDD  1903               	btfsc	3,2
  4173  0FDE  2FE0               	goto	u2231
  4174  0FDF  2FE1               	goto	u2230
  4175  0FE0                     u2231:	
  4176  0FE0  2FE2               	goto	l3089
  4177  0FE1                     u2230:	
  4178  0FE1                     l3087:	
  4179                           
  4180                           ;main.c: 522:             count = 0;
  4181  0FE1  01CE               	clrf	main@count
  4182  0FE2                     l3089:	
  4183                           
  4184                           ;main.c: 525:         slaveSelectStatePrev = slaveSelect;
  4185  0FE2  084F               	movf	main@slaveSelect,w
  4186  0FE3  00CC               	movwf	??_main
  4187  0FE4  084C               	movf	??_main,w
  4188  0FE5  00CD               	movwf	main@slaveSelectStatePrev
  4189  0FE6                     l3091:	
  4190                           
  4191                           ;main.c: 527:         if (count >= 3) {
  4192  0FE6  3003               	movlw	3
  4193  0FE7  024E               	subwf	main@count,w
  4194  0FE8  1C03               	skipc
  4195  0FE9  2FEB               	goto	u2241
  4196  0FEA  2FEC               	goto	u2240
  4197  0FEB                     u2241:	
  4198  0FEB  2FF6               	goto	l3099
  4199  0FEC                     u2240:	
  4200  0FEC                     l3093:	
  4201                           
  4202                           ;main.c: 529:             cmdCounter = 0;
  4203  0FEC  01F7               	clrf	_cmdCounter
  4204  0FED                     l3095:	
  4205                           
  4206                           ;main.c: 530:             responseLength = 9;
  4207  0FED  3009               	movlw	9
  4208  0FEE  00CC               	movwf	??_main
  4209  0FEF  084C               	movf	??_main,w
  4210  0FF0  00D2               	movwf	_responseLength
  4211  0FF1                     l3097:	
  4212                           
  4213                           ;main.c: 531:             SSP1BUF = 0xFF;
  4214  0FF1  30FF               	movlw	255
  4215  0FF2  0023               	movlb	3	; select bank3
  4216  0FF3  008C               	movwf	12	;volatile
  4217                           
  4218                           ;main.c: 532:             previousCmd = 0x00;
  4219  0FF4  0020               	movlb	0	; select bank0
  4220  0FF5  01EE               	clrf	_previousCmd
  4221  0FF6                     l3099:	
  4222                           
  4223                           ;main.c: 536:         readController(analogMode);
  4224  0FF6  0879               	movf	_analogMode,w
  4225  0FF7  3185  2524  318F   	fcall	_readController
  4226  0FFA                     l3101:	
  4227                           
  4228                           ;main.c: 538:         readControllerAnalog();
  4229  0FFA  3187  2709  318F   	fcall	_readControllerAnalog
  4230  0FFD  2FBA               	goto	l3073
  4231  0FFE  3181  299E         	ljmp	start
  4232  1000                     __end_of_main:	
  4233                           
  4234                           	psect	text1
  4235  0709                     __ptext1:	
  4236 ;; *************** function _readControllerAnalog *****************
  4237 ;; Defined at:
  4238 ;;		line 175 in file "Controller.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4254 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4255 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4256 ;;Total ram usage:        3 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    4
  4259 ;; This function calls:
  4260 ;;		_readADC
  4261 ;;		_reversebyte
  4262 ;; This function is called by:
  4263 ;;		_main
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _readControllerAnalog
  4269  0709                     _readControllerAnalog:	
  4270  0709                     l3057:	
  4271                           ;incstack = 0
  4272                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4273                           
  4274                           
  4275                           ;Controller.c: 177:     lxData = reversebyte(lutLX[readADC(0b010000)]);
  4276  0709  3010               	movlw	16
  4277  070A  0020               	movlb	0	; select bank0
  4278  070B  00A0               	movwf	readADC@channel
  4279  070C  3000               	movlw	0
  4280  070D  00A1               	movwf	readADC@channel+1
  4281  070E  3187  27D3  3187   	fcall	_readADC
  4282  0711  30F0               	movlw	240
  4283  0712  0020               	movlb	0	; select bank0
  4284  0713  00A9               	movwf	??_readControllerAnalog
  4285  0714  3026               	movlw	38
  4286  0715  00AA               	movwf	??_readControllerAnalog+1
  4287  0716  0820               	movf	?_readADC,w
  4288  0717  0729               	addwf	??_readControllerAnalog,w
  4289  0718  0086               	movwf	6
  4290  0719  0821               	movf	?_readADC+1,w
  4291  071A  3D2A               	addwfc	??_readControllerAnalog+1,w
  4292  071B  0087               	movwf	7
  4293  071C  0801               	movf	1,w
  4294  071D  318E  26B4  3187   	fcall	_reversebyte
  4295  0720  0020               	movlb	0	; select bank0
  4296  0721  00AB               	movwf	??_readControllerAnalog+2
  4297  0722  082B               	movf	??_readControllerAnalog+2,w
  4298  0723  00D5               	movwf	_lxData
  4299                           
  4300                           ;Controller.c: 178:     lyData = reversebyte(lutLY[readADC(0b10001)]);
  4301  0724  3011               	movlw	17
  4302  0725  00A0               	movwf	readADC@channel
  4303  0726  3000               	movlw	0
  4304  0727  00A1               	movwf	readADC@channel+1
  4305  0728  3187  27D3  3187   	fcall	_readADC
  4306  072B  30F0               	movlw	240
  4307  072C  0020               	movlb	0	; select bank0
  4308  072D  00A9               	movwf	??_readControllerAnalog
  4309  072E  3025               	movlw	37
  4310  072F  00AA               	movwf	??_readControllerAnalog+1
  4311  0730  0820               	movf	?_readADC,w
  4312  0731  0729               	addwf	??_readControllerAnalog,w
  4313  0732  0086               	movwf	6
  4314  0733  0821               	movf	?_readADC+1,w
  4315  0734  3D2A               	addwfc	??_readControllerAnalog+1,w
  4316  0735  0087               	movwf	7
  4317  0736  0801               	movf	1,w
  4318  0737  318E  26B4  3187   	fcall	_reversebyte
  4319  073A  0020               	movlb	0	; select bank0
  4320  073B  00AB               	movwf	??_readControllerAnalog+2
  4321  073C  082B               	movf	??_readControllerAnalog+2,w
  4322  073D  00D4               	movwf	_lyData
  4323                           
  4324                           ;Controller.c: 180:     rxData = reversebyte(lutRX[readADC(0b010110)]);
  4325  073E  3016               	movlw	22
  4326  073F  00A0               	movwf	readADC@channel
  4327  0740  3000               	movlw	0
  4328  0741  00A1               	movwf	readADC@channel+1
  4329  0742  3187  27D3  3187   	fcall	_readADC
  4330  0745  30F0               	movlw	240
  4331  0746  0020               	movlb	0	; select bank0
  4332  0747  00A9               	movwf	??_readControllerAnalog
  4333  0748  3024               	movlw	36
  4334  0749  00AA               	movwf	??_readControllerAnalog+1
  4335  074A  0820               	movf	?_readADC,w
  4336  074B  0729               	addwf	??_readControllerAnalog,w
  4337  074C  0086               	movwf	6
  4338  074D  0821               	movf	?_readADC+1,w
  4339  074E  3D2A               	addwfc	??_readControllerAnalog+1,w
  4340  074F  0087               	movwf	7
  4341  0750  0801               	movf	1,w
  4342  0751  318E  26B4  3187   	fcall	_reversebyte
  4343  0754  0020               	movlb	0	; select bank0
  4344  0755  00AB               	movwf	??_readControllerAnalog+2
  4345  0756  082B               	movf	??_readControllerAnalog+2,w
  4346  0757  00D7               	movwf	_rxData
  4347                           
  4348                           ;Controller.c: 181:     ryData = reversebyte(lutRY[readADC(0b010111)]);
  4349  0758  3017               	movlw	23
  4350  0759  00A0               	movwf	readADC@channel
  4351  075A  3000               	movlw	0
  4352  075B  00A1               	movwf	readADC@channel+1
  4353  075C  3187  27D3  3187   	fcall	_readADC
  4354  075F  30F0               	movlw	240
  4355  0760  0020               	movlb	0	; select bank0
  4356  0761  00A9               	movwf	??_readControllerAnalog
  4357  0762  3023               	movlw	35
  4358  0763  00AA               	movwf	??_readControllerAnalog+1
  4359  0764  0820               	movf	?_readADC,w
  4360  0765  0729               	addwf	??_readControllerAnalog,w
  4361  0766  0086               	movwf	6
  4362  0767  0821               	movf	?_readADC+1,w
  4363  0768  3D2A               	addwfc	??_readControllerAnalog+1,w
  4364  0769  0087               	movwf	7
  4365  076A  0801               	movf	1,w
  4366  076B  318E  26B4  3187   	fcall	_reversebyte
  4367  076E  0020               	movlb	0	; select bank0
  4368  076F  00AB               	movwf	??_readControllerAnalog+2
  4369  0770  082B               	movf	??_readControllerAnalog+2,w
  4370  0771  00D6               	movwf	_ryData
  4371  0772                     l331:	
  4372  0772  0008               	return
  4373  0773                     __end_of_readControllerAnalog:	
  4374                           
  4375                           	psect	text2
  4376  0EB4                     __ptext2:	
  4377 ;; *************** function _reversebyte *****************
  4378 ;; Defined at:
  4379 ;;		line 167 in file "Controller.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  byte            1    wreg     unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  byte            1    3[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      unsigned char 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4395 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4396 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4397 ;;Total ram usage:        4 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    3
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_readControllerAnalog
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _reversebyte
  4409  0EB4                     _reversebyte:	
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  4413                           ;reversebyte@byte stored from wreg
  4414  0EB4  0020               	movlb	0	; select bank0
  4415  0EB5  00A3               	movwf	reversebyte@byte
  4416  0EB6                     l2853:	
  4417                           
  4418                           ;Controller.c: 168:     byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  4419  0EB6  0823               	movf	reversebyte@byte,w
  4420  0EB7  390F               	andlw	15
  4421  0EB8  00A0               	movwf	??_reversebyte
  4422  0EB9  3004               	movlw	4
  4423  0EBA                     u1915:	
  4424  0EBA  35A0               	lslf	??_reversebyte,f
  4425  0EBB  0B89               	decfsz	9,f
  4426  0EBC  2EBA               	goto	u1915
  4427  0EBD  0823               	movf	reversebyte@byte,w
  4428  0EBE  00A1               	movwf	??_reversebyte+1
  4429  0EBF  3004               	movlw	4
  4430  0EC0                     u1925:	
  4431  0EC0  36A1               	lsrf	??_reversebyte+1,f
  4432  0EC1  0B89               	decfsz	9,f
  4433  0EC2  2EC0               	goto	u1925
  4434  0EC3  0821               	movf	??_reversebyte+1,w
  4435  0EC4  390F               	andlw	15
  4436  0EC5  0420               	iorwf	??_reversebyte,w
  4437  0EC6  00A2               	movwf	??_reversebyte+2
  4438  0EC7  0822               	movf	??_reversebyte+2,w
  4439  0EC8  00A3               	movwf	reversebyte@byte
  4440                           
  4441                           ;Controller.c: 169:     byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  4442  0EC9  0823               	movf	reversebyte@byte,w
  4443  0ECA  3933               	andlw	51
  4444  0ECB  00A0               	movwf	??_reversebyte
  4445  0ECC  3002               	movlw	2
  4446  0ECD                     u1935:	
  4447  0ECD  35A0               	lslf	??_reversebyte,f
  4448  0ECE  0B89               	decfsz	9,f
  4449  0ECF  2ECD               	goto	u1935
  4450  0ED0  0823               	movf	reversebyte@byte,w
  4451  0ED1  00A1               	movwf	??_reversebyte+1
  4452  0ED2  3002               	movlw	2
  4453  0ED3                     u1945:	
  4454  0ED3  36A1               	lsrf	??_reversebyte+1,f
  4455  0ED4  0B89               	decfsz	9,f
  4456  0ED5  2ED3               	goto	u1945
  4457  0ED6  0821               	movf	??_reversebyte+1,w
  4458  0ED7  3933               	andlw	51
  4459  0ED8  0420               	iorwf	??_reversebyte,w
  4460  0ED9  00A2               	movwf	??_reversebyte+2
  4461  0EDA  0822               	movf	??_reversebyte+2,w
  4462  0EDB  00A3               	movwf	reversebyte@byte
  4463                           
  4464                           ;Controller.c: 170:     byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  4465  0EDC  0823               	movf	reversebyte@byte,w
  4466  0EDD  3955               	andlw	85
  4467  0EDE  00A0               	movwf	??_reversebyte
  4468  0EDF  3001               	movlw	1
  4469  0EE0                     u1955:	
  4470  0EE0  35A0               	lslf	??_reversebyte,f
  4471  0EE1  0B89               	decfsz	9,f
  4472  0EE2  2EE0               	goto	u1955
  4473  0EE3  3623               	lsrf	reversebyte@byte,w
  4474  0EE4  3955               	andlw	85
  4475  0EE5  0420               	iorwf	??_reversebyte,w
  4476  0EE6  00A1               	movwf	??_reversebyte+1
  4477  0EE7  0821               	movf	??_reversebyte+1,w
  4478  0EE8  00A3               	movwf	reversebyte@byte
  4479  0EE9                     l2855:	
  4480                           
  4481                           ;Controller.c: 172:     return byte;
  4482  0EE9  0823               	movf	reversebyte@byte,w
  4483  0EEA                     l328:	
  4484  0EEA  0008               	return
  4485  0EEB                     __end_of_reversebyte:	
  4486                           
  4487                           	psect	text3
  4488  0F23                     __ptext3:	
  4489 ;; *************** function _picInit *****************
  4490 ;; Defined at:
  4491 ;;		line 32 in file "PicConfig.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;		None
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;		None
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4509 ;;Total ram usage:        2 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    4
  4512 ;; This function calls:
  4513 ;;		_ppsLock
  4514 ;;		_ppsUnlock
  4515 ;;		_spiInit
  4516 ;; This function is called by:
  4517 ;;		_main
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _picInit
  4523  0F23                     _picInit:	
  4524  0F23                     l2907:	
  4525                           ;incstack = 0
  4526                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  4527                           
  4528                           
  4529                           ;PicConfig.c: 35:     TRISA = 0xFF;
  4530  0F23  30FF               	movlw	255
  4531  0F24  0020               	movlb	0	; select bank0
  4532  0F25  0091               	movwf	17	;volatile
  4533                           
  4534                           ;PicConfig.c: 36:     TRISB = 0xFF;
  4535  0F26  30FF               	movlw	255
  4536  0F27  0092               	movwf	18	;volatile
  4537                           
  4538                           ;PicConfig.c: 37:     TRISC = 0xFF;
  4539  0F28  30FF               	movlw	255
  4540  0F29  0093               	movwf	19	;volatile
  4541                           
  4542                           ;PicConfig.c: 38:     TRISD = 0xEF;
  4543  0F2A  30EF               	movlw	239
  4544  0F2B  0094               	movwf	20	;volatile
  4545                           
  4546                           ;PicConfig.c: 39:     TRISE = 0xFF;
  4547  0F2C  30FF               	movlw	255
  4548  0F2D  0095               	movwf	21	;volatile
  4549  0F2E                     l2909:	
  4550                           
  4551                           ;PicConfig.c: 42:     ANSELA = 0;
  4552  0F2E  003E               	movlb	30	; select bank30
  4553  0F2F  01B8               	clrf	56	;volatile
  4554  0F30                     l2911:	
  4555                           
  4556                           ;PicConfig.c: 43:     ANSELB = 0;
  4557  0F30  01C3               	clrf	67	;volatile
  4558                           
  4559                           ;PicConfig.c: 44:     ANSELC = 0xC3;
  4560  0F31  30C3               	movlw	195
  4561  0F32  00CE               	movwf	78	;volatile
  4562  0F33                     l2913:	
  4563                           
  4564                           ;PicConfig.c: 45:     ANSELD = 0;
  4565  0F33  01D9               	clrf	89	;volatile
  4566  0F34                     l2915:	
  4567                           
  4568                           ;PicConfig.c: 46:     ANSELE = 0;
  4569  0F34  01E4               	clrf	100	;volatile
  4570                           
  4571                           ;PicConfig.c: 49:     WPUA = 0xCF;
  4572  0F35  30CF               	movlw	207
  4573  0F36  00B9               	movwf	57	;volatile
  4574                           
  4575                           ;PicConfig.c: 50:     WPUB = 0xFF;
  4576  0F37  30FF               	movlw	255
  4577  0F38  00C4               	movwf	68	;volatile
  4578                           
  4579                           ;PicConfig.c: 51:     WPUC = 0x04;
  4580  0F39  3004               	movlw	4
  4581  0F3A  00CF               	movwf	79	;volatile
  4582                           
  4583                           ;PicConfig.c: 52:     WPUD = 0x01;
  4584  0F3B  3001               	movlw	1
  4585  0F3C  00DA               	movwf	90	;volatile
  4586  0F3D                     l2917:	
  4587                           
  4588                           ;PicConfig.c: 53:     WPUE = 0;
  4589  0F3D  01E5               	clrf	101	;volatile
  4590  0F3E                     l2919:	
  4591                           
  4592                           ;PicConfig.c: 56:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HI
      +                          GH, SPI_ACTIVE_2_IDLE);
  4593  0F3E  0020               	movlb	0	; select bank0
  4594  0F3F  01A0               	clrf	spiInit@sDataSample
  4595  0F40  3010               	movlw	16
  4596  0F41  00A4               	movwf	??_picInit
  4597  0F42  0824               	movf	??_picInit,w
  4598  0F43  00A1               	movwf	spiInit@sClockIdle
  4599  0F44  3040               	movlw	64
  4600  0F45  00A5               	movwf	??_picInit+1
  4601  0F46  0825               	movf	??_picInit+1,w
  4602  0F47  00A2               	movwf	spiInit@sTransmitEdge
  4603  0F48  3024               	movlw	36
  4604  0F49  318E  2601  318F   	fcall	_spiInit
  4605  0F4C                     l2921:	
  4606                           
  4607                           ;PicConfig.c: 58:     TRISCbits.TRISC5 = 0;
  4608  0F4C  0020               	movlb	0	; select bank0
  4609  0F4D  1293               	bcf	19,5	;volatile
  4610  0F4E                     l2923:	
  4611                           
  4612                           ;PicConfig.c: 59:     TRISAbits.TRISA4 = 0;
  4613  0F4E  1211               	bcf	17,4	;volatile
  4614  0F4F                     l2925:	
  4615                           
  4616                           ;PicConfig.c: 60:     ppsUnlock();
  4617  0F4F  318D  25BE  318F   	fcall	_ppsUnlock
  4618  0F52                     l2927:	
  4619                           
  4620                           ;PicConfig.c: 62:     RC5PPS = 0x15;
  4621  0F52  3015               	movlw	21
  4622  0F53  003E               	movlb	30	; select bank30
  4623  0F54  00A5               	movwf	37	;volatile
  4624  0F55                     l2929:	
  4625                           
  4626                           ;PicConfig.c: 64:     ppsLock();
  4627  0F55  318D  25C5  318F   	fcall	_ppsLock
  4628  0F58                     l2931:	
  4629                           
  4630                           ;PicConfig.c: 67:     INTCONbits.GIE = 1;
  4631  0F58  178B               	bsf	11,7	;volatile
  4632  0F59                     l2933:	
  4633                           
  4634                           ;PicConfig.c: 68:     INTCONbits.PEIE = 1;
  4635  0F59  170B               	bsf	11,6	;volatile
  4636  0F5A                     l2935:	
  4637                           
  4638                           ;PicConfig.c: 69:     SSP1IF = 0;
  4639  0F5A  002E               	movlb	14	; select bank14
  4640  0F5B  100F               	bcf	15,0	;volatile
  4641  0F5C                     l2937:	
  4642                           
  4643                           ;PicConfig.c: 70:     SSP1IE = 1;
  4644  0F5C  1419               	bsf	25,0	;volatile
  4645  0F5D                     l417:	
  4646  0F5D  0008               	return
  4647  0F5E                     __end_of_picInit:	
  4648                           
  4649                           	psect	text4
  4650  0E01                     __ptext4:	
  4651 ;; *************** function _spiInit *****************
  4652 ;; Defined at:
  4653 ;;		line 10 in file "Spi.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  sType           1    wreg     enum E12122
  4656 ;;  sDataSample     1    0[BANK0 ] enum E12130
  4657 ;;  sClockIdle      1    1[BANK0 ] enum E12134
  4658 ;;  sTransmitEdg    1    2[BANK0 ] enum E12138
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  sType           1    3[BANK0 ] enum E12122
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4670 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4671 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4673 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4674 ;;Total ram usage:        4 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_picInit
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _spiInit
  4686  0E01                     _spiInit:	
  4687                           
  4688                           ;incstack = 0
  4689                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  4690                           ;spiInit@sType stored from wreg
  4691  0E01  0020               	movlb	0	; select bank0
  4692  0E02  00A3               	movwf	spiInit@sType
  4693  0E03                     l2885:	
  4694                           
  4695                           ;Spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);Spi.c: 11: {;Spi.c: 13:     if(sType & 0b00000
      +                          100)
  4696  0E03  1D23               	btfss	spiInit@sType,2
  4697  0E04  2E06               	goto	u1981
  4698  0E05  2E07               	goto	u1980
  4699  0E06                     u1981:	
  4700  0E06  2E0B               	goto	l2889
  4701  0E07                     u1980:	
  4702  0E07                     l2887:	
  4703                           
  4704                           ;Spi.c: 14:     {;Spi.c: 15:         SSP1STAT = sTransmitEdge;
  4705  0E07  0822               	movf	spiInit@sTransmitEdge,w
  4706  0E08  0023               	movlb	3	; select bank3
  4707  0E09  008F               	movwf	15	;volatile
  4708                           
  4709                           ;Spi.c: 17:     }
  4710  0E0A  2E0F               	goto	l429
  4711  0E0B                     l2889:	
  4712                           
  4713                           ;Spi.c: 19:     {;Spi.c: 20:         SSP1STAT = sDataSample | sTransmitEdge;
  4714  0E0B  0820               	movf	spiInit@sDataSample,w
  4715  0E0C  0422               	iorwf	spiInit@sTransmitEdge,w
  4716  0E0D  0023               	movlb	3	; select bank3
  4717  0E0E  008F               	movwf	15	;volatile
  4718  0E0F                     l429:	
  4719                           ;Spi.c: 22:     }
  4720                           
  4721                           
  4722                           ;Spi.c: 24:     SSP1CON1 = sType | sClockIdle;
  4723  0E0F  0020               	movlb	0	; select bank0
  4724  0E10  0823               	movf	spiInit@sType,w
  4725  0E11  0421               	iorwf	spiInit@sClockIdle,w
  4726  0E12  0023               	movlb	3	; select bank3
  4727  0E13  0090               	movwf	16	;volatile
  4728  0E14                     l430:	
  4729  0E14  0008               	return
  4730  0E15                     __end_of_spiInit:	
  4731                           
  4732                           	psect	text5
  4733  0DBE                     __ptext5:	
  4734 ;; *************** function _ppsUnlock *****************
  4735 ;; Defined at:
  4736 ;;		line 9 in file "PicConfig.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;		None
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4754 ;;Total ram usage:        0 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    3
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_picInit
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _ppsUnlock
  4766  0DBE                     _ppsUnlock:	
  4767  0DBE                     l2879:	
  4768                           ;incstack = 0
  4769                           ; Regs used in _ppsUnlock: [wreg+status,2]
  4770                           
  4771                           
  4772                           ;PicConfig.c: 10:     PPSLOCK = 0x55;
  4773  0DBE  3055               	movlw	85
  4774  0DBF  003D               	movlb	29	; select bank29
  4775  0DC0  008F               	movwf	15	;volsfr
  4776                           
  4777                           ;PicConfig.c: 11:     PPSLOCK = 0xAA;
  4778  0DC1  30AA               	movlw	170
  4779  0DC2  008F               	movwf	15	;volsfr
  4780  0DC3                     l2881:	
  4781                           
  4782                           ;PicConfig.c: 12:     PPSLOCK = 0;
  4783  0DC3  018F               	clrf	15	;volsfr
  4784  0DC4                     l408:	
  4785  0DC4  0008               	return
  4786  0DC5                     __end_of_ppsUnlock:	
  4787                           
  4788                           	psect	text6
  4789  0DC5                     __ptext6:	
  4790 ;; *************** function _ppsLock *****************
  4791 ;; Defined at:
  4792 ;;		line 15 in file "PicConfig.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    3
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_picInit
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _ppsLock
  4822  0DC5                     _ppsLock:	
  4823  0DC5                     l2883:	
  4824                           ;incstack = 0
  4825                           ; Regs used in _ppsLock: [wreg]
  4826                           
  4827                           
  4828                           ;PicConfig.c: 16:     PPSLOCK = 0x55;
  4829  0DC5  3055               	movlw	85
  4830  0DC6  003D               	movlb	29	; select bank29
  4831  0DC7  008F               	movwf	15	;volsfr
  4832                           
  4833                           ;PicConfig.c: 17:     PPSLOCK = 0xAA;
  4834  0DC8  30AA               	movlw	170
  4835  0DC9  008F               	movwf	15	;volsfr
  4836                           
  4837                           ;PicConfig.c: 18:     PPSLOCK = 1;
  4838  0DCA  3001               	movlw	1
  4839  0DCB  008F               	movwf	15	;volsfr
  4840  0DCC                     l411:	
  4841  0DCC  0008               	return
  4842  0DCD                     __end_of_ppsLock:	
  4843                           
  4844                           	psect	text7
  4845  01D2                     __ptext7:	
  4846 ;; *************** function _lutInit *****************
  4847 ;; Defined at:
  4848 ;;		line 98 in file "Controller.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  position        2   42[BANK0 ] int 
  4853 ;;  ryMax           1   41[BANK0 ] unsigned char 
  4854 ;;  ryMin           1   40[BANK0 ] unsigned char 
  4855 ;;  rxMax           1   39[BANK0 ] unsigned char 
  4856 ;;  rxMin           1   38[BANK0 ] unsigned char 
  4857 ;;  lyMax           1   37[BANK0 ] unsigned char 
  4858 ;;  lyMin           1   36[BANK0 ] unsigned char 
  4859 ;;  lxMax           1   35[BANK0 ] unsigned char 
  4860 ;;  lxMin           1   34[BANK0 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4871 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4872 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4873 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:       19 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    5
  4877 ;; This function calls:
  4878 ;;		_Map
  4879 ;;		_eepromRead
  4880 ;; This function is called by:
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _lutInit
  4887  01D2                     _lutInit:	
  4888  01D2                     l2951:	
  4889                           ;incstack = 0
  4890                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4891                           
  4892                           
  4893                           ;Controller.c: 100:     char lxMin = eepromRead(0x60);
  4894  01D2  3060               	movlw	96
  4895  01D3  318D  25EF  3181   	fcall	_eepromRead
  4896  01D6  0020               	movlb	0	; select bank0
  4897  01D7  00B9               	movwf	??_lutInit
  4898  01D8  0839               	movf	??_lutInit,w
  4899  01D9  00C2               	movwf	lutInit@lxMin
  4900                           
  4901                           ;Controller.c: 101:     char lxMax = eepromRead(0x61);
  4902  01DA  3061               	movlw	97
  4903  01DB  318D  25EF  3181   	fcall	_eepromRead
  4904  01DE  0020               	movlb	0	; select bank0
  4905  01DF  00B9               	movwf	??_lutInit
  4906  01E0  0839               	movf	??_lutInit,w
  4907  01E1  00C3               	movwf	lutInit@lxMax
  4908                           
  4909                           ;Controller.c: 102:     char lyMin = eepromRead(0x62);
  4910  01E2  3062               	movlw	98
  4911  01E3  318D  25EF  3181   	fcall	_eepromRead
  4912  01E6  0020               	movlb	0	; select bank0
  4913  01E7  00B9               	movwf	??_lutInit
  4914  01E8  0839               	movf	??_lutInit,w
  4915  01E9  00C4               	movwf	lutInit@lyMin
  4916                           
  4917                           ;Controller.c: 103:     char lyMax = eepromRead(0x63);
  4918  01EA  3063               	movlw	99
  4919  01EB  318D  25EF  3181   	fcall	_eepromRead
  4920  01EE  0020               	movlb	0	; select bank0
  4921  01EF  00B9               	movwf	??_lutInit
  4922  01F0  0839               	movf	??_lutInit,w
  4923  01F1  00C5               	movwf	lutInit@lyMax
  4924                           
  4925                           ;Controller.c: 105:     char rxMin = eepromRead(0x64);
  4926  01F2  3064               	movlw	100
  4927  01F3  318D  25EF  3181   	fcall	_eepromRead
  4928  01F6  0020               	movlb	0	; select bank0
  4929  01F7  00B9               	movwf	??_lutInit
  4930  01F8  0839               	movf	??_lutInit,w
  4931  01F9  00C6               	movwf	lutInit@rxMin
  4932                           
  4933                           ;Controller.c: 106:     char rxMax = eepromRead(0x65);
  4934  01FA  3065               	movlw	101
  4935  01FB  318D  25EF  3181   	fcall	_eepromRead
  4936  01FE  0020               	movlb	0	; select bank0
  4937  01FF  00B9               	movwf	??_lutInit
  4938  0200  0839               	movf	??_lutInit,w
  4939  0201  00C7               	movwf	lutInit@rxMax
  4940                           
  4941                           ;Controller.c: 107:     char ryMin = eepromRead(0x66);
  4942  0202  3066               	movlw	102
  4943  0203  318D  25EF  3181   	fcall	_eepromRead
  4944  0206  0020               	movlb	0	; select bank0
  4945  0207  00B9               	movwf	??_lutInit
  4946  0208  0839               	movf	??_lutInit,w
  4947  0209  00C8               	movwf	lutInit@ryMin
  4948                           
  4949                           ;Controller.c: 108:     char ryMax = eepromRead(0x67);
  4950  020A  3067               	movlw	103
  4951  020B  318D  25EF  3181   	fcall	_eepromRead
  4952  020E  0020               	movlb	0	; select bank0
  4953  020F  00B9               	movwf	??_lutInit
  4954  0210  0839               	movf	??_lutInit,w
  4955  0211  00C9               	movwf	lutInit@ryMax
  4956  0212                     l2953:	
  4957                           
  4958                           ;Controller.c: 110:     for (int position = 0; position < 256; position++) {
  4959  0212  01CA               	clrf	lutInit@position
  4960  0213  01CB               	clrf	lutInit@position+1
  4961  0214                     l2959:	
  4962                           
  4963                           ;Controller.c: 113:         if (position < lxMin) {
  4964  0214  0020               	movlb	0	; select bank0
  4965  0215  084B               	movf	lutInit@position+1,w
  4966  0216  3A80               	xorlw	128
  4967  0217  00B9               	movwf	??_lutInit
  4968  0218  3080               	movlw	128
  4969  0219  0239               	subwf	??_lutInit,w
  4970  021A  1D03               	skipz
  4971  021B  2A1E               	goto	u1995
  4972  021C  0842               	movf	lutInit@lxMin,w
  4973  021D  024A               	subwf	lutInit@position,w
  4974  021E                     u1995:	
  4975  021E  1803               	skipnc
  4976  021F  2A21               	goto	u1991
  4977  0220  2A22               	goto	u1990
  4978  0221                     u1991:	
  4979  0221  2A2F               	goto	l2963
  4980  0222                     u1990:	
  4981  0222                     l2961:	
  4982                           
  4983                           ;Controller.c: 115:             lutLX[position] = 0;
  4984  0222  30F0               	movlw	240
  4985  0223  0020               	movlb	0	; select bank0
  4986  0224  00B9               	movwf	??_lutInit
  4987  0225  3026               	movlw	38
  4988  0226  00BA               	movwf	??_lutInit+1
  4989  0227  084A               	movf	lutInit@position,w
  4990  0228  0739               	addwf	??_lutInit,w
  4991  0229  0086               	movwf	6
  4992  022A  084B               	movf	lutInit@position+1,w
  4993  022B  3D3A               	addwfc	??_lutInit+1,w
  4994  022C  0087               	movwf	7
  4995  022D  0181               	clrf	1
  4996                           
  4997                           ;Controller.c: 116:         } else if (position > lxMax) {
  4998  022E  2A7C               	goto	l2969
  4999  022F                     l2963:	
  5000  022F  0020               	movlb	0	; select bank0
  5001  0230  084B               	movf	lutInit@position+1,w
  5002  0231  3A80               	xorlw	128
  5003  0232  3C80               	sublw	128
  5004  0233  1D03               	skipz
  5005  0234  2A37               	goto	u2005
  5006  0235  084A               	movf	lutInit@position,w
  5007  0236  0243               	subwf	lutInit@lxMax,w
  5008  0237                     u2005:	
  5009  0237  1803               	skipnc
  5010  0238  2A3A               	goto	u2001
  5011  0239  2A3B               	goto	u2000
  5012  023A                     u2001:	
  5013  023A  2A4D               	goto	l2967
  5014  023B                     u2000:	
  5015  023B                     l2965:	
  5016                           
  5017                           ;Controller.c: 117:             lutLX[position] = 255;
  5018  023B  30F0               	movlw	240
  5019  023C  0020               	movlb	0	; select bank0
  5020  023D  00B9               	movwf	??_lutInit
  5021  023E  3026               	movlw	38
  5022  023F  00BA               	movwf	??_lutInit+1
  5023  0240  084A               	movf	lutInit@position,w
  5024  0241  0739               	addwf	??_lutInit,w
  5025  0242  00BB               	movwf	??_lutInit+2
  5026  0243  084B               	movf	lutInit@position+1,w
  5027  0244  3D3A               	addwfc	??_lutInit+1,w
  5028  0245  00BC               	movwf	??_lutInit+3
  5029  0246  083B               	movf	??_lutInit+2,w
  5030  0247  0086               	movwf	6
  5031  0248  083C               	movf	??_lutInit+3,w
  5032  0249  0087               	movwf	7
  5033  024A  30FF               	movlw	255
  5034  024B  0081               	movwf	1
  5035                           
  5036                           ;Controller.c: 119:         } else {
  5037  024C  2A7C               	goto	l2969
  5038  024D                     l2967:	
  5039                           
  5040                           ;Controller.c: 120:             lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  5041  024D  0020               	movlb	0	; select bank0
  5042  024E  084B               	movf	lutInit@position+1,w
  5043  024F  00B0               	movwf	Map@x+1
  5044  0250  084A               	movf	lutInit@position,w
  5045  0251  00AF               	movwf	Map@x
  5046  0252  0842               	movf	lutInit@lxMin,w
  5047  0253  00B9               	movwf	??_lutInit
  5048  0254  01BA               	clrf	??_lutInit+1
  5049  0255  0839               	movf	??_lutInit,w
  5050  0256  00B1               	movwf	Map@inMin
  5051  0257  083A               	movf	??_lutInit+1,w
  5052  0258  00B2               	movwf	Map@inMin+1
  5053  0259  0843               	movf	lutInit@lxMax,w
  5054  025A  00BB               	movwf	??_lutInit+2
  5055  025B  01BC               	clrf	??_lutInit+3
  5056  025C  083B               	movf	??_lutInit+2,w
  5057  025D  00B3               	movwf	Map@inMax
  5058  025E  083C               	movf	??_lutInit+3,w
  5059  025F  00B4               	movwf	Map@inMax+1
  5060  0260  3000               	movlw	0
  5061  0261  00B5               	movwf	Map@outMin
  5062  0262  00B6               	movwf	Map@outMin+1
  5063  0263  30FF               	movlw	255
  5064  0264  00B7               	movwf	Map@outMax
  5065  0265  3000               	movlw	0
  5066  0266  00B8               	movwf	Map@outMax+1
  5067  0267  318E  266D  3181   	fcall	_Map
  5068  026A  0020               	movlb	0	; select bank0
  5069  026B  00BD               	movwf	??_lutInit+4
  5070  026C  30F0               	movlw	240
  5071  026D  00BE               	movwf	??_lutInit+5
  5072  026E  3026               	movlw	38
  5073  026F  00BF               	movwf	??_lutInit+6
  5074  0270  084A               	movf	lutInit@position,w
  5075  0271  073E               	addwf	??_lutInit+5,w
  5076  0272  00C0               	movwf	??_lutInit+7
  5077  0273  084B               	movf	lutInit@position+1,w
  5078  0274  3D3F               	addwfc	??_lutInit+6,w
  5079  0275  00C1               	movwf	??_lutInit+8
  5080  0276  0840               	movf	??_lutInit+7,w
  5081  0277  0086               	movwf	6
  5082  0278  0841               	movf	??_lutInit+8,w
  5083  0279  0087               	movwf	7
  5084  027A  083D               	movf	??_lutInit+4,w
  5085  027B  0081               	movwf	1
  5086  027C                     l2969:	
  5087                           
  5088                           ;Controller.c: 124:         if (position < lyMin) {
  5089  027C  084B               	movf	lutInit@position+1,w
  5090  027D  3A80               	xorlw	128
  5091  027E  00B9               	movwf	??_lutInit
  5092  027F  3080               	movlw	128
  5093  0280  0239               	subwf	??_lutInit,w
  5094  0281  1D03               	skipz
  5095  0282  2A85               	goto	u2015
  5096  0283  0844               	movf	lutInit@lyMin,w
  5097  0284  024A               	subwf	lutInit@position,w
  5098  0285                     u2015:	
  5099  0285  1803               	skipnc
  5100  0286  2A88               	goto	u2011
  5101  0287  2A89               	goto	u2010
  5102  0288                     u2011:	
  5103  0288  2A96               	goto	l2973
  5104  0289                     u2010:	
  5105  0289                     l2971:	
  5106                           
  5107                           ;Controller.c: 125:             lutLY[position] = 0;
  5108  0289  30F0               	movlw	240
  5109  028A  0020               	movlb	0	; select bank0
  5110  028B  00B9               	movwf	??_lutInit
  5111  028C  3025               	movlw	37
  5112  028D  00BA               	movwf	??_lutInit+1
  5113  028E  084A               	movf	lutInit@position,w
  5114  028F  0739               	addwf	??_lutInit,w
  5115  0290  0086               	movwf	6
  5116  0291  084B               	movf	lutInit@position+1,w
  5117  0292  3D3A               	addwfc	??_lutInit+1,w
  5118  0293  0087               	movwf	7
  5119  0294  0181               	clrf	1
  5120                           
  5121                           ;Controller.c: 126:         } else if (position > lyMax) {
  5122  0295  2AE3               	goto	l2979
  5123  0296                     l2973:	
  5124  0296  0020               	movlb	0	; select bank0
  5125  0297  084B               	movf	lutInit@position+1,w
  5126  0298  3A80               	xorlw	128
  5127  0299  3C80               	sublw	128
  5128  029A  1D03               	skipz
  5129  029B  2A9E               	goto	u2025
  5130  029C  084A               	movf	lutInit@position,w
  5131  029D  0245               	subwf	lutInit@lyMax,w
  5132  029E                     u2025:	
  5133  029E  1803               	skipnc
  5134  029F  2AA1               	goto	u2021
  5135  02A0  2AA2               	goto	u2020
  5136  02A1                     u2021:	
  5137  02A1  2AB4               	goto	l2977
  5138  02A2                     u2020:	
  5139  02A2                     l2975:	
  5140                           
  5141                           ;Controller.c: 127:             lutLY[position] = 255;
  5142  02A2  30F0               	movlw	240
  5143  02A3  0020               	movlb	0	; select bank0
  5144  02A4  00B9               	movwf	??_lutInit
  5145  02A5  3025               	movlw	37
  5146  02A6  00BA               	movwf	??_lutInit+1
  5147  02A7  084A               	movf	lutInit@position,w
  5148  02A8  0739               	addwf	??_lutInit,w
  5149  02A9  00BB               	movwf	??_lutInit+2
  5150  02AA  084B               	movf	lutInit@position+1,w
  5151  02AB  3D3A               	addwfc	??_lutInit+1,w
  5152  02AC  00BC               	movwf	??_lutInit+3
  5153  02AD  083B               	movf	??_lutInit+2,w
  5154  02AE  0086               	movwf	6
  5155  02AF  083C               	movf	??_lutInit+3,w
  5156  02B0  0087               	movwf	7
  5157  02B1  30FF               	movlw	255
  5158  02B2  0081               	movwf	1
  5159                           
  5160                           ;Controller.c: 129:         } else {
  5161  02B3  2AE3               	goto	l2979
  5162  02B4                     l2977:	
  5163                           
  5164                           ;Controller.c: 130:             lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  5165  02B4  0020               	movlb	0	; select bank0
  5166  02B5  084B               	movf	lutInit@position+1,w
  5167  02B6  00B0               	movwf	Map@x+1
  5168  02B7  084A               	movf	lutInit@position,w
  5169  02B8  00AF               	movwf	Map@x
  5170  02B9  0844               	movf	lutInit@lyMin,w
  5171  02BA  00B9               	movwf	??_lutInit
  5172  02BB  01BA               	clrf	??_lutInit+1
  5173  02BC  0839               	movf	??_lutInit,w
  5174  02BD  00B1               	movwf	Map@inMin
  5175  02BE  083A               	movf	??_lutInit+1,w
  5176  02BF  00B2               	movwf	Map@inMin+1
  5177  02C0  0845               	movf	lutInit@lyMax,w
  5178  02C1  00BB               	movwf	??_lutInit+2
  5179  02C2  01BC               	clrf	??_lutInit+3
  5180  02C3  083B               	movf	??_lutInit+2,w
  5181  02C4  00B3               	movwf	Map@inMax
  5182  02C5  083C               	movf	??_lutInit+3,w
  5183  02C6  00B4               	movwf	Map@inMax+1
  5184  02C7  3000               	movlw	0
  5185  02C8  00B5               	movwf	Map@outMin
  5186  02C9  00B6               	movwf	Map@outMin+1
  5187  02CA  30FF               	movlw	255
  5188  02CB  00B7               	movwf	Map@outMax
  5189  02CC  3000               	movlw	0
  5190  02CD  00B8               	movwf	Map@outMax+1
  5191  02CE  318E  266D  3181   	fcall	_Map
  5192  02D1  0020               	movlb	0	; select bank0
  5193  02D2  00BD               	movwf	??_lutInit+4
  5194  02D3  30F0               	movlw	240
  5195  02D4  00BE               	movwf	??_lutInit+5
  5196  02D5  3025               	movlw	37
  5197  02D6  00BF               	movwf	??_lutInit+6
  5198  02D7  084A               	movf	lutInit@position,w
  5199  02D8  073E               	addwf	??_lutInit+5,w
  5200  02D9  00C0               	movwf	??_lutInit+7
  5201  02DA  084B               	movf	lutInit@position+1,w
  5202  02DB  3D3F               	addwfc	??_lutInit+6,w
  5203  02DC  00C1               	movwf	??_lutInit+8
  5204  02DD  0840               	movf	??_lutInit+7,w
  5205  02DE  0086               	movwf	6
  5206  02DF  0841               	movf	??_lutInit+8,w
  5207  02E0  0087               	movwf	7
  5208  02E1  083D               	movf	??_lutInit+4,w
  5209  02E2  0081               	movwf	1
  5210  02E3                     l2979:	
  5211                           
  5212                           ;Controller.c: 134:         if (position < rxMin) {
  5213  02E3  084B               	movf	lutInit@position+1,w
  5214  02E4  3A80               	xorlw	128
  5215  02E5  00B9               	movwf	??_lutInit
  5216  02E6  3080               	movlw	128
  5217  02E7  0239               	subwf	??_lutInit,w
  5218  02E8  1D03               	skipz
  5219  02E9  2AEC               	goto	u2035
  5220  02EA  0846               	movf	lutInit@rxMin,w
  5221  02EB  024A               	subwf	lutInit@position,w
  5222  02EC                     u2035:	
  5223  02EC  1803               	skipnc
  5224  02ED  2AEF               	goto	u2031
  5225  02EE  2AF0               	goto	u2030
  5226  02EF                     u2031:	
  5227  02EF  2AFD               	goto	l2983
  5228  02F0                     u2030:	
  5229  02F0                     l2981:	
  5230                           
  5231                           ;Controller.c: 135:             lutRX[position] = 0;
  5232  02F0  30F0               	movlw	240
  5233  02F1  0020               	movlb	0	; select bank0
  5234  02F2  00B9               	movwf	??_lutInit
  5235  02F3  3024               	movlw	36
  5236  02F4  00BA               	movwf	??_lutInit+1
  5237  02F5  084A               	movf	lutInit@position,w
  5238  02F6  0739               	addwf	??_lutInit,w
  5239  02F7  0086               	movwf	6
  5240  02F8  084B               	movf	lutInit@position+1,w
  5241  02F9  3D3A               	addwfc	??_lutInit+1,w
  5242  02FA  0087               	movwf	7
  5243  02FB  0181               	clrf	1
  5244                           
  5245                           ;Controller.c: 136:         } else if (position > rxMax) {
  5246  02FC  2B4A               	goto	l2989
  5247  02FD                     l2983:	
  5248  02FD  0020               	movlb	0	; select bank0
  5249  02FE  084B               	movf	lutInit@position+1,w
  5250  02FF  3A80               	xorlw	128
  5251  0300  3C80               	sublw	128
  5252  0301  1D03               	skipz
  5253  0302  2B05               	goto	u2045
  5254  0303  084A               	movf	lutInit@position,w
  5255  0304  0247               	subwf	lutInit@rxMax,w
  5256  0305                     u2045:	
  5257  0305  1803               	skipnc
  5258  0306  2B08               	goto	u2041
  5259  0307  2B09               	goto	u2040
  5260  0308                     u2041:	
  5261  0308  2B1B               	goto	l2987
  5262  0309                     u2040:	
  5263  0309                     l2985:	
  5264                           
  5265                           ;Controller.c: 137:             lutRX[position] = 255;
  5266  0309  30F0               	movlw	240
  5267  030A  0020               	movlb	0	; select bank0
  5268  030B  00B9               	movwf	??_lutInit
  5269  030C  3024               	movlw	36
  5270  030D  00BA               	movwf	??_lutInit+1
  5271  030E  084A               	movf	lutInit@position,w
  5272  030F  0739               	addwf	??_lutInit,w
  5273  0310  00BB               	movwf	??_lutInit+2
  5274  0311  084B               	movf	lutInit@position+1,w
  5275  0312  3D3A               	addwfc	??_lutInit+1,w
  5276  0313  00BC               	movwf	??_lutInit+3
  5277  0314  083B               	movf	??_lutInit+2,w
  5278  0315  0086               	movwf	6
  5279  0316  083C               	movf	??_lutInit+3,w
  5280  0317  0087               	movwf	7
  5281  0318  30FF               	movlw	255
  5282  0319  0081               	movwf	1
  5283                           
  5284                           ;Controller.c: 139:         } else {
  5285  031A  2B4A               	goto	l2989
  5286  031B                     l2987:	
  5287                           
  5288                           ;Controller.c: 140:             lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  5289  031B  0020               	movlb	0	; select bank0
  5290  031C  084B               	movf	lutInit@position+1,w
  5291  031D  00B0               	movwf	Map@x+1
  5292  031E  084A               	movf	lutInit@position,w
  5293  031F  00AF               	movwf	Map@x
  5294  0320  0846               	movf	lutInit@rxMin,w
  5295  0321  00B9               	movwf	??_lutInit
  5296  0322  01BA               	clrf	??_lutInit+1
  5297  0323  0839               	movf	??_lutInit,w
  5298  0324  00B1               	movwf	Map@inMin
  5299  0325  083A               	movf	??_lutInit+1,w
  5300  0326  00B2               	movwf	Map@inMin+1
  5301  0327  0847               	movf	lutInit@rxMax,w
  5302  0328  00BB               	movwf	??_lutInit+2
  5303  0329  01BC               	clrf	??_lutInit+3
  5304  032A  083B               	movf	??_lutInit+2,w
  5305  032B  00B3               	movwf	Map@inMax
  5306  032C  083C               	movf	??_lutInit+3,w
  5307  032D  00B4               	movwf	Map@inMax+1
  5308  032E  3000               	movlw	0
  5309  032F  00B5               	movwf	Map@outMin
  5310  0330  00B6               	movwf	Map@outMin+1
  5311  0331  30FF               	movlw	255
  5312  0332  00B7               	movwf	Map@outMax
  5313  0333  3000               	movlw	0
  5314  0334  00B8               	movwf	Map@outMax+1
  5315  0335  318E  266D  3181   	fcall	_Map
  5316  0338  0020               	movlb	0	; select bank0
  5317  0339  00BD               	movwf	??_lutInit+4
  5318  033A  30F0               	movlw	240
  5319  033B  00BE               	movwf	??_lutInit+5
  5320  033C  3024               	movlw	36
  5321  033D  00BF               	movwf	??_lutInit+6
  5322  033E  084A               	movf	lutInit@position,w
  5323  033F  073E               	addwf	??_lutInit+5,w
  5324  0340  00C0               	movwf	??_lutInit+7
  5325  0341  084B               	movf	lutInit@position+1,w
  5326  0342  3D3F               	addwfc	??_lutInit+6,w
  5327  0343  00C1               	movwf	??_lutInit+8
  5328  0344  0840               	movf	??_lutInit+7,w
  5329  0345  0086               	movwf	6
  5330  0346  0841               	movf	??_lutInit+8,w
  5331  0347  0087               	movwf	7
  5332  0348  083D               	movf	??_lutInit+4,w
  5333  0349  0081               	movwf	1
  5334  034A                     l2989:	
  5335                           
  5336                           ;Controller.c: 144:         if (position < ryMin) {
  5337  034A  084B               	movf	lutInit@position+1,w
  5338  034B  3A80               	xorlw	128
  5339  034C  00B9               	movwf	??_lutInit
  5340  034D  3080               	movlw	128
  5341  034E  0239               	subwf	??_lutInit,w
  5342  034F  1D03               	skipz
  5343  0350  2B53               	goto	u2055
  5344  0351  0848               	movf	lutInit@ryMin,w
  5345  0352  024A               	subwf	lutInit@position,w
  5346  0353                     u2055:	
  5347  0353  1803               	skipnc
  5348  0354  2B56               	goto	u2051
  5349  0355  2B57               	goto	u2050
  5350  0356                     u2051:	
  5351  0356  2B64               	goto	l2993
  5352  0357                     u2050:	
  5353  0357                     l2991:	
  5354                           
  5355                           ;Controller.c: 145:             lutRY[position] = 0;
  5356  0357  30F0               	movlw	240
  5357  0358  0020               	movlb	0	; select bank0
  5358  0359  00B9               	movwf	??_lutInit
  5359  035A  3023               	movlw	35
  5360  035B  00BA               	movwf	??_lutInit+1
  5361  035C  084A               	movf	lutInit@position,w
  5362  035D  0739               	addwf	??_lutInit,w
  5363  035E  0086               	movwf	6
  5364  035F  084B               	movf	lutInit@position+1,w
  5365  0360  3D3A               	addwfc	??_lutInit+1,w
  5366  0361  0087               	movwf	7
  5367  0362  0181               	clrf	1
  5368                           
  5369                           ;Controller.c: 146:         } else if (position > ryMax) {
  5370  0363  2BB1               	goto	l2999
  5371  0364                     l2993:	
  5372  0364  0020               	movlb	0	; select bank0
  5373  0365  084B               	movf	lutInit@position+1,w
  5374  0366  3A80               	xorlw	128
  5375  0367  3C80               	sublw	128
  5376  0368  1D03               	skipz
  5377  0369  2B6C               	goto	u2065
  5378  036A  084A               	movf	lutInit@position,w
  5379  036B  0249               	subwf	lutInit@ryMax,w
  5380  036C                     u2065:	
  5381  036C  1803               	skipnc
  5382  036D  2B6F               	goto	u2061
  5383  036E  2B70               	goto	u2060
  5384  036F                     u2061:	
  5385  036F  2B82               	goto	l2997
  5386  0370                     u2060:	
  5387  0370                     l2995:	
  5388                           
  5389                           ;Controller.c: 147:             lutRY[position] = 255;
  5390  0370  30F0               	movlw	240
  5391  0371  0020               	movlb	0	; select bank0
  5392  0372  00B9               	movwf	??_lutInit
  5393  0373  3023               	movlw	35
  5394  0374  00BA               	movwf	??_lutInit+1
  5395  0375  084A               	movf	lutInit@position,w
  5396  0376  0739               	addwf	??_lutInit,w
  5397  0377  00BB               	movwf	??_lutInit+2
  5398  0378  084B               	movf	lutInit@position+1,w
  5399  0379  3D3A               	addwfc	??_lutInit+1,w
  5400  037A  00BC               	movwf	??_lutInit+3
  5401  037B  083B               	movf	??_lutInit+2,w
  5402  037C  0086               	movwf	6
  5403  037D  083C               	movf	??_lutInit+3,w
  5404  037E  0087               	movwf	7
  5405  037F  30FF               	movlw	255
  5406  0380  0081               	movwf	1
  5407                           
  5408                           ;Controller.c: 149:         } else {
  5409  0381  2BB1               	goto	l2999
  5410  0382                     l2997:	
  5411                           
  5412                           ;Controller.c: 150:             lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  5413  0382  0020               	movlb	0	; select bank0
  5414  0383  084B               	movf	lutInit@position+1,w
  5415  0384  00B0               	movwf	Map@x+1
  5416  0385  084A               	movf	lutInit@position,w
  5417  0386  00AF               	movwf	Map@x
  5418  0387  0848               	movf	lutInit@ryMin,w
  5419  0388  00B9               	movwf	??_lutInit
  5420  0389  01BA               	clrf	??_lutInit+1
  5421  038A  0839               	movf	??_lutInit,w
  5422  038B  00B1               	movwf	Map@inMin
  5423  038C  083A               	movf	??_lutInit+1,w
  5424  038D  00B2               	movwf	Map@inMin+1
  5425  038E  0849               	movf	lutInit@ryMax,w
  5426  038F  00BB               	movwf	??_lutInit+2
  5427  0390  01BC               	clrf	??_lutInit+3
  5428  0391  083B               	movf	??_lutInit+2,w
  5429  0392  00B3               	movwf	Map@inMax
  5430  0393  083C               	movf	??_lutInit+3,w
  5431  0394  00B4               	movwf	Map@inMax+1
  5432  0395  3000               	movlw	0
  5433  0396  00B5               	movwf	Map@outMin
  5434  0397  00B6               	movwf	Map@outMin+1
  5435  0398  30FF               	movlw	255
  5436  0399  00B7               	movwf	Map@outMax
  5437  039A  3000               	movlw	0
  5438  039B  00B8               	movwf	Map@outMax+1
  5439  039C  318E  266D  3181   	fcall	_Map
  5440  039F  0020               	movlb	0	; select bank0
  5441  03A0  00BD               	movwf	??_lutInit+4
  5442  03A1  30F0               	movlw	240
  5443  03A2  00BE               	movwf	??_lutInit+5
  5444  03A3  3023               	movlw	35
  5445  03A4  00BF               	movwf	??_lutInit+6
  5446  03A5  084A               	movf	lutInit@position,w
  5447  03A6  073E               	addwf	??_lutInit+5,w
  5448  03A7  00C0               	movwf	??_lutInit+7
  5449  03A8  084B               	movf	lutInit@position+1,w
  5450  03A9  3D3F               	addwfc	??_lutInit+6,w
  5451  03AA  00C1               	movwf	??_lutInit+8
  5452  03AB  0840               	movf	??_lutInit+7,w
  5453  03AC  0086               	movwf	6
  5454  03AD  0841               	movf	??_lutInit+8,w
  5455  03AE  0087               	movwf	7
  5456  03AF  083D               	movf	??_lutInit+4,w
  5457  03B0  0081               	movwf	1
  5458  03B1                     l2999:	
  5459                           
  5460                           ;Controller.c: 153:     }
  5461  03B1  3001               	movlw	1
  5462  03B2  07CA               	addwf	lutInit@position,f
  5463  03B3  3000               	movlw	0
  5464  03B4  3DCB               	addwfc	lutInit@position+1,f
  5465  03B5                     l3001:	
  5466  03B5  084B               	movf	lutInit@position+1,w
  5467  03B6  3A80               	xorlw	128
  5468  03B7  00B9               	movwf	??_lutInit
  5469  03B8  3081               	movlw	129
  5470  03B9  0239               	subwf	??_lutInit,w
  5471  03BA  1D03               	skipz
  5472  03BB  2BBE               	goto	u2075
  5473  03BC  3000               	movlw	0
  5474  03BD  024A               	subwf	lutInit@position,w
  5475  03BE                     u2075:	
  5476  03BE  1C03               	skipc
  5477  03BF  2BC1               	goto	u2071
  5478  03C0  2BC2               	goto	u2070
  5479  03C1                     u2071:	
  5480  03C1  2A14               	goto	l2959
  5481  03C2                     u2070:	
  5482  03C2                     l319:	
  5483  03C2  0008               	return
  5484  03C3                     __end_of_lutInit:	
  5485                           
  5486                           	psect	text8
  5487  0DEF                     __ptext8:	
  5488 ;; *************** function _eepromRead *****************
  5489 ;; Defined at:
  5490 ;;		line 33 in file "Nvm.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  address         1    wreg     unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  address         1    1[BANK0 ] unsigned char 
  5495 ;;  data            1    2[BANK0 ] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      unsigned char 
  5498 ;; Registers used:
  5499 ;;		wreg
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5507 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5508 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5509 ;;Total ram usage:        3 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    3
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_lutInit
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _eepromRead
  5521  0DEF                     _eepromRead:	
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in _eepromRead: [wreg]
  5525                           ;eepromRead@address stored from wreg
  5526  0DEF  0020               	movlb	0	; select bank0
  5527  0DF0  00A1               	movwf	eepromRead@address
  5528  0DF1                     l2833:	
  5529                           
  5530                           ;Nvm.c: 35:     char data;;Nvm.c: 37:     NVMCON1bits.NVMREGS = 1;
  5531  0DF1  0030               	movlb	16	; select bank16
  5532  0DF2  171E               	bsf	30,6	;volsfr
  5533  0DF3                     l2835:	
  5534                           
  5535                           ;Nvm.c: 38:     NVMADRH = 0xF0;
  5536  0DF3  30F0               	movlw	240
  5537  0DF4  009B               	movwf	27	;volatile
  5538                           
  5539                           ;Nvm.c: 39:     NVMADRL = address;
  5540  0DF5  0020               	movlb	0	; select bank0
  5541  0DF6  0821               	movf	eepromRead@address,w
  5542  0DF7  0030               	movlb	16	; select bank16
  5543  0DF8  009A               	movwf	26	;volatile
  5544  0DF9                     l2837:	
  5545                           
  5546                           ;Nvm.c: 40:     NVMCON1bits.RD = 1;
  5547  0DF9  141E               	bsf	30,0	;volsfr
  5548                           
  5549                           ;Nvm.c: 42:     data = NVMDATL;
  5550  0DFA  081C               	movf	28,w	;volatile
  5551  0DFB  0020               	movlb	0	; select bank0
  5552  0DFC  00A0               	movwf	??_eepromRead
  5553  0DFD  0820               	movf	??_eepromRead,w
  5554  0DFE  00A2               	movwf	eepromRead@data
  5555                           
  5556                           ;Nvm.c: 44:     return data;
  5557  0DFF  0822               	movf	eepromRead@data,w
  5558  0E00                     l466:	
  5559  0E00  0008               	return
  5560  0E01                     __end_of_eepromRead:	
  5561                           
  5562                           	psect	text9
  5563  0E6D                     __ptext9:	
  5564 ;; *************** function _Map *****************
  5565 ;; Defined at:
  5566 ;;		line 93 in file "Controller.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  x               2   15[BANK0 ] int 
  5569 ;;  inMin           2   17[BANK0 ] int 
  5570 ;;  inMax           2   19[BANK0 ] int 
  5571 ;;  outMin          2   21[BANK0 ] int 
  5572 ;;  outMax          2   23[BANK0 ] int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  1    wreg      unsigned char 
  5577 ;; Registers used:
  5578 ;;		wreg, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5584 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5587 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5588 ;;Total ram usage:       10 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    4
  5591 ;; This function calls:
  5592 ;;		___awdiv
  5593 ;;		___wmul
  5594 ;; This function is called by:
  5595 ;;		_lutInit
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _Map
  5601  0E6D                     _Map:	
  5602  0E6D                     l2829:	
  5603                           ;incstack = 0
  5604                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  5605                           
  5606                           
  5607                           ;Controller.c: 95:     return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + ou
      +                          tMin;
  5608  0E6D  0020               	movlb	0	; select bank0
  5609  0E6E  0831               	movf	Map@inMin,w
  5610  0E6F  0233               	subwf	Map@inMax,w
  5611  0E70  00A6               	movwf	___awdiv@divisor
  5612  0E71  0832               	movf	Map@inMin+1,w
  5613  0E72  3B34               	subwfb	Map@inMax+1,w
  5614  0E73  00A7               	movwf	___awdiv@divisor+1
  5615  0E74  0831               	movf	Map@inMin,w
  5616  0E75  022F               	subwf	Map@x,w
  5617  0E76  00A0               	movwf	___wmul@multiplier
  5618  0E77  0832               	movf	Map@inMin+1,w
  5619  0E78  3B30               	subwfb	Map@x+1,w
  5620  0E79  00A1               	movwf	___wmul@multiplier+1
  5621  0E7A  0835               	movf	Map@outMin,w
  5622  0E7B  0237               	subwf	Map@outMax,w
  5623  0E7C  00A2               	movwf	___wmul@multiplicand
  5624  0E7D  0836               	movf	Map@outMin+1,w
  5625  0E7E  3B38               	subwfb	Map@outMax+1,w
  5626  0E7F  00A3               	movwf	___wmul@multiplicand+1
  5627  0E80  318E  264D  318E   	fcall	___wmul
  5628  0E83  0020               	movlb	0	; select bank0
  5629  0E84  0821               	movf	?___wmul+1,w
  5630  0E85  00A9               	movwf	___awdiv@dividend+1
  5631  0E86  0820               	movf	?___wmul,w
  5632  0E87  00A8               	movwf	___awdiv@dividend
  5633  0E88  3187  2773  318E   	fcall	___awdiv
  5634  0E8B  0020               	movlb	0	; select bank0
  5635  0E8C  0826               	movf	?___awdiv,w
  5636  0E8D  0735               	addwf	Map@outMin,w
  5637  0E8E                     l298:	
  5638  0E8E  0008               	return
  5639  0E8F                     __end_of_Map:	
  5640                           
  5641                           	psect	text10
  5642  0E4D                     __ptext10:	
  5643 ;; *************** function ___wmul *****************
  5644 ;; Defined at:
  5645 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5648 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;  product         2    4[BANK0 ] unsigned int 
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  2    0[BANK0 ] unsigned int 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5660 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5663 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5664 ;;Total ram usage:        6 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    3
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_Map
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           
  5675                           ;psect for function ___wmul
  5676  0E4D                     ___wmul:	
  5677  0E4D                     l2747:	
  5678                           ;incstack = 0
  5679                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5680                           
  5681  0E4D  0020               	movlb	0	; select bank0
  5682  0E4E  01A4               	clrf	___wmul@product
  5683  0E4F  01A5               	clrf	___wmul@product+1
  5684  0E50                     l2749:	
  5685  0E50  1C20               	btfss	___wmul@multiplier,0
  5686  0E51  2E53               	goto	u1671
  5687  0E52  2E54               	goto	u1670
  5688  0E53                     u1671:	
  5689  0E53  2E58               	goto	l621
  5690  0E54                     u1670:	
  5691  0E54                     l2751:	
  5692  0E54  0822               	movf	___wmul@multiplicand,w
  5693  0E55  07A4               	addwf	___wmul@product,f
  5694  0E56  0823               	movf	___wmul@multiplicand+1,w
  5695  0E57  3DA5               	addwfc	___wmul@product+1,f
  5696  0E58                     l621:	
  5697  0E58  3001               	movlw	1
  5698  0E59                     u1685:	
  5699  0E59  35A2               	lslf	___wmul@multiplicand,f
  5700  0E5A  0DA3               	rlf	___wmul@multiplicand+1,f
  5701  0E5B  0B89               	decfsz	9,f
  5702  0E5C  2E59               	goto	u1685
  5703  0E5D                     l2753:	
  5704  0E5D  3001               	movlw	1
  5705  0E5E                     u1695:	
  5706  0E5E  36A1               	lsrf	___wmul@multiplier+1,f
  5707  0E5F  0CA0               	rrf	___wmul@multiplier,f
  5708  0E60  0B89               	decfsz	9,f
  5709  0E61  2E5E               	goto	u1695
  5710  0E62                     l2755:	
  5711  0E62  0820               	movf	___wmul@multiplier,w
  5712  0E63  0421               	iorwf	___wmul@multiplier+1,w
  5713  0E64  1D03               	btfss	3,2
  5714  0E65  2E67               	goto	u1701
  5715  0E66  2E68               	goto	u1700
  5716  0E67                     u1701:	
  5717  0E67  2E50               	goto	l2749
  5718  0E68                     u1700:	
  5719  0E68                     l2757:	
  5720  0E68  0825               	movf	___wmul@product+1,w
  5721  0E69  00A1               	movwf	?___wmul+1
  5722  0E6A  0824               	movf	___wmul@product,w
  5723  0E6B  00A0               	movwf	?___wmul
  5724  0E6C                     l623:	
  5725  0E6C  0008               	return
  5726  0E6D                     __end_of___wmul:	
  5727                           
  5728                           	psect	text11
  5729  0773                     __ptext11:	
  5730 ;; *************** function ___awdiv *****************
  5731 ;; Defined at:
  5732 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  divisor         2    6[BANK0 ] int 
  5735 ;;  dividend        2    8[BANK0 ] int 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  quotient        2   13[BANK0 ] int 
  5738 ;;  sign            1   12[BANK0 ] unsigned char 
  5739 ;;  counter         1   11[BANK0 ] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  2    6[BANK0 ] int 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5751 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5752 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5753 ;;Total ram usage:        9 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    3
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_Map
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           
  5764                           ;psect for function ___awdiv
  5765  0773                     ___awdiv:	
  5766  0773                     l1929:	
  5767                           ;incstack = 0
  5768                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5769                           
  5770  0773  0020               	movlb	0	; select bank0
  5771  0774  01AC               	clrf	___awdiv@sign
  5772  0775                     l1931:	
  5773  0775  1FA7               	btfss	___awdiv@divisor+1,7
  5774  0776  2F78               	goto	u881
  5775  0777  2F79               	goto	u880
  5776  0778                     u881:	
  5777  0778  2F80               	goto	l1937
  5778  0779                     u880:	
  5779  0779                     l1933:	
  5780  0779  09A6               	comf	___awdiv@divisor,f
  5781  077A  09A7               	comf	___awdiv@divisor+1,f
  5782  077B  0AA6               	incf	___awdiv@divisor,f
  5783  077C  1903               	skipnz
  5784  077D  0AA7               	incf	___awdiv@divisor+1,f
  5785  077E                     l1935:	
  5786  077E  01AC               	clrf	___awdiv@sign
  5787  077F  0AAC               	incf	___awdiv@sign,f
  5788  0780                     l1937:	
  5789  0780  1FA9               	btfss	___awdiv@dividend+1,7
  5790  0781  2F83               	goto	u891
  5791  0782  2F84               	goto	u890
  5792  0783                     u891:	
  5793  0783  2F8D               	goto	l1943
  5794  0784                     u890:	
  5795  0784                     l1939:	
  5796  0784  09A8               	comf	___awdiv@dividend,f
  5797  0785  09A9               	comf	___awdiv@dividend+1,f
  5798  0786  0AA8               	incf	___awdiv@dividend,f
  5799  0787  1903               	skipnz
  5800  0788  0AA9               	incf	___awdiv@dividend+1,f
  5801  0789                     l1941:	
  5802  0789  3001               	movlw	1
  5803  078A  00AA               	movwf	??___awdiv
  5804  078B  082A               	movf	??___awdiv,w
  5805  078C  06AC               	xorwf	___awdiv@sign,f
  5806  078D                     l1943:	
  5807  078D  01AD               	clrf	___awdiv@quotient
  5808  078E  01AE               	clrf	___awdiv@quotient+1
  5809  078F                     l1945:	
  5810  078F  0826               	movf	___awdiv@divisor,w
  5811  0790  0427               	iorwf	___awdiv@divisor+1,w
  5812  0791  1903               	btfsc	3,2
  5813  0792  2F94               	goto	u901
  5814  0793  2F95               	goto	u900
  5815  0794                     u901:	
  5816  0794  2FC4               	goto	l1965
  5817  0795                     u900:	
  5818  0795                     l1947:	
  5819  0795  01AB               	clrf	___awdiv@counter
  5820  0796  0AAB               	incf	___awdiv@counter,f
  5821  0797  2FA1               	goto	l1953
  5822  0798                     l1949:	
  5823  0798  3001               	movlw	1
  5824  0799                     u915:	
  5825  0799  35A6               	lslf	___awdiv@divisor,f
  5826  079A  0DA7               	rlf	___awdiv@divisor+1,f
  5827  079B  0B89               	decfsz	9,f
  5828  079C  2F99               	goto	u915
  5829  079D                     l1951:	
  5830  079D  3001               	movlw	1
  5831  079E  00AA               	movwf	??___awdiv
  5832  079F  082A               	movf	??___awdiv,w
  5833  07A0  07AB               	addwf	___awdiv@counter,f
  5834  07A1                     l1953:	
  5835  07A1  1FA7               	btfss	___awdiv@divisor+1,7
  5836  07A2  2FA4               	goto	u921
  5837  07A3  2FA5               	goto	u920
  5838  07A4                     u921:	
  5839  07A4  2F98               	goto	l1949
  5840  07A5                     u920:	
  5841  07A5                     l1955:	
  5842  07A5  3001               	movlw	1
  5843  07A6                     u935:	
  5844  07A6  35AD               	lslf	___awdiv@quotient,f
  5845  07A7  0DAE               	rlf	___awdiv@quotient+1,f
  5846  07A8  0B89               	decfsz	9,f
  5847  07A9  2FA6               	goto	u935
  5848  07AA  0827               	movf	___awdiv@divisor+1,w
  5849  07AB  0229               	subwf	___awdiv@dividend+1,w
  5850  07AC  1D03               	skipz
  5851  07AD  2FB0               	goto	u945
  5852  07AE  0826               	movf	___awdiv@divisor,w
  5853  07AF  0228               	subwf	___awdiv@dividend,w
  5854  07B0                     u945:	
  5855  07B0  1C03               	skipc
  5856  07B1  2FB3               	goto	u941
  5857  07B2  2FB4               	goto	u940
  5858  07B3                     u941:	
  5859  07B3  2FB9               	goto	l1961
  5860  07B4                     u940:	
  5861  07B4                     l1957:	
  5862  07B4  0826               	movf	___awdiv@divisor,w
  5863  07B5  02A8               	subwf	___awdiv@dividend,f
  5864  07B6  0827               	movf	___awdiv@divisor+1,w
  5865  07B7  3BA9               	subwfb	___awdiv@dividend+1,f
  5866  07B8                     l1959:	
  5867  07B8  142D               	bsf	___awdiv@quotient,0
  5868  07B9                     l1961:	
  5869  07B9  3001               	movlw	1
  5870  07BA                     u955:	
  5871  07BA  36A7               	lsrf	___awdiv@divisor+1,f
  5872  07BB  0CA6               	rrf	___awdiv@divisor,f
  5873  07BC  0B89               	decfsz	9,f
  5874  07BD  2FBA               	goto	u955
  5875  07BE                     l1963:	
  5876  07BE  3001               	movlw	1
  5877  07BF  02AB               	subwf	___awdiv@counter,f
  5878  07C0  1D03               	btfss	3,2
  5879  07C1  2FC3               	goto	u961
  5880  07C2  2FC4               	goto	u960
  5881  07C3                     u961:	
  5882  07C3  2FA5               	goto	l1955
  5883  07C4                     u960:	
  5884  07C4                     l1965:	
  5885  07C4  082C               	movf	___awdiv@sign,w
  5886  07C5  1903               	btfsc	3,2
  5887  07C6  2FC8               	goto	u971
  5888  07C7  2FC9               	goto	u970
  5889  07C8                     u971:	
  5890  07C8  2FCE               	goto	l1969
  5891  07C9                     u970:	
  5892  07C9                     l1967:	
  5893  07C9  09AD               	comf	___awdiv@quotient,f
  5894  07CA  09AE               	comf	___awdiv@quotient+1,f
  5895  07CB  0AAD               	incf	___awdiv@quotient,f
  5896  07CC  1903               	skipnz
  5897  07CD  0AAE               	incf	___awdiv@quotient+1,f
  5898  07CE                     l1969:	
  5899  07CE  082E               	movf	___awdiv@quotient+1,w
  5900  07CF  00A7               	movwf	?___awdiv+1
  5901  07D0  082D               	movf	___awdiv@quotient,w
  5902  07D1  00A6               	movwf	?___awdiv
  5903  07D2                     l774:	
  5904  07D2  0008               	return
  5905  07D3                     __end_of___awdiv:	
  5906                           
  5907                           	psect	text12
  5908  03C3                     __ptext12:	
  5909 ;; *************** function _configureController *****************
  5910 ;; Defined at:
  5911 ;;		line 186 in file "Controller.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  ry              1   21[BANK0 ] unsigned char 
  5916 ;;  rx              1   20[BANK0 ] unsigned char 
  5917 ;;  ly              1   19[BANK0 ] unsigned char 
  5918 ;;  lx              1   18[BANK0 ] unsigned char 
  5919 ;;  ryMax           1   17[BANK0 ] unsigned char 
  5920 ;;  ryMin           1   16[BANK0 ] unsigned char 
  5921 ;;  rxMax           1   15[BANK0 ] unsigned char 
  5922 ;;  rxMin           1   14[BANK0 ] unsigned char 
  5923 ;;  lyMax           1   13[BANK0 ] unsigned char 
  5924 ;;  lyMin           1   12[BANK0 ] unsigned char 
  5925 ;;  lxMax           1   11[BANK0 ] unsigned char 
  5926 ;;  lxMin           1   10[BANK0 ] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5937 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5939 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5940 ;;Total ram usage:       13 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    5
  5943 ;; This function calls:
  5944 ;;		_eepromWrite
  5945 ;;		_readADC
  5946 ;;		_readController
  5947 ;; This function is called by:
  5948 ;;		_main
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _configureController
  5954  03C3                     _configureController:	
  5955  03C3                     l3003:	
  5956                           ;incstack = 0
  5957                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5958                           
  5959                           
  5960                           ;Controller.c: 189:     INTCONbits.GIE = 0;
  5961  03C3  138B               	bcf	11,7	;volatile
  5962                           
  5963                           ;Controller.c: 190:     INTCONbits.PEIE = 0;
  5964  03C4  130B               	bcf	11,6	;volatile
  5965  03C5                     l3005:	
  5966                           
  5967                           ;Controller.c: 192:     char lxMin = readADC(0b010000);
  5968  03C5  3010               	movlw	16
  5969  03C6  0020               	movlb	0	; select bank0
  5970  03C7  00A0               	movwf	readADC@channel
  5971  03C8  3000               	movlw	0
  5972  03C9  00A1               	movwf	readADC@channel+1
  5973  03CA  3187  27D3  3183   	fcall	_readADC
  5974  03CD  0020               	movlb	0	; select bank0
  5975  03CE  0820               	movf	?_readADC,w
  5976  03CF  00A9               	movwf	??_configureController
  5977  03D0  0829               	movf	??_configureController,w
  5978  03D1  00AA               	movwf	configureController@lxMin
  5979                           
  5980                           ;Controller.c: 193:     char lxMax = readADC(0b010000);
  5981  03D2  3010               	movlw	16
  5982  03D3  00A0               	movwf	readADC@channel
  5983  03D4  3000               	movlw	0
  5984  03D5  00A1               	movwf	readADC@channel+1
  5985  03D6  3187  27D3  3183   	fcall	_readADC
  5986  03D9  0020               	movlb	0	; select bank0
  5987  03DA  0820               	movf	?_readADC,w
  5988  03DB  00A9               	movwf	??_configureController
  5989  03DC  0829               	movf	??_configureController,w
  5990  03DD  00AB               	movwf	configureController@lxMax
  5991                           
  5992                           ;Controller.c: 194:     char lyMin = readADC(0b10001);
  5993  03DE  3011               	movlw	17
  5994  03DF  00A0               	movwf	readADC@channel
  5995  03E0  3000               	movlw	0
  5996  03E1  00A1               	movwf	readADC@channel+1
  5997  03E2  3187  27D3  3183   	fcall	_readADC
  5998  03E5  0020               	movlb	0	; select bank0
  5999  03E6  0820               	movf	?_readADC,w
  6000  03E7  00A9               	movwf	??_configureController
  6001  03E8  0829               	movf	??_configureController,w
  6002  03E9  00AC               	movwf	configureController@lyMin
  6003                           
  6004                           ;Controller.c: 195:     char lyMax = readADC(0b10001);
  6005  03EA  3011               	movlw	17
  6006  03EB  00A0               	movwf	readADC@channel
  6007  03EC  3000               	movlw	0
  6008  03ED  00A1               	movwf	readADC@channel+1
  6009  03EE  3187  27D3  3183   	fcall	_readADC
  6010  03F1  0020               	movlb	0	; select bank0
  6011  03F2  0820               	movf	?_readADC,w
  6012  03F3  00A9               	movwf	??_configureController
  6013  03F4  0829               	movf	??_configureController,w
  6014  03F5  00AD               	movwf	configureController@lyMax
  6015                           
  6016                           ;Controller.c: 197:     char rxMin = readADC(0b010110);
  6017  03F6  3016               	movlw	22
  6018  03F7  00A0               	movwf	readADC@channel
  6019  03F8  3000               	movlw	0
  6020  03F9  00A1               	movwf	readADC@channel+1
  6021  03FA  3187  27D3  3183   	fcall	_readADC
  6022  03FD  0020               	movlb	0	; select bank0
  6023  03FE  0820               	movf	?_readADC,w
  6024  03FF  00A9               	movwf	??_configureController
  6025  0400  0829               	movf	??_configureController,w
  6026  0401  00AE               	movwf	configureController@rxMin
  6027                           
  6028                           ;Controller.c: 198:     char rxMax = readADC(0b010110);
  6029  0402  3016               	movlw	22
  6030  0403  00A0               	movwf	readADC@channel
  6031  0404  3000               	movlw	0
  6032  0405  00A1               	movwf	readADC@channel+1
  6033  0406  3187  27D3  3183   	fcall	_readADC
  6034  0409  0020               	movlb	0	; select bank0
  6035  040A  0820               	movf	?_readADC,w
  6036  040B  00A9               	movwf	??_configureController
  6037  040C  0829               	movf	??_configureController,w
  6038  040D  00AF               	movwf	configureController@rxMax
  6039                           
  6040                           ;Controller.c: 199:     char ryMin = readADC(0b010111);
  6041  040E  3017               	movlw	23
  6042  040F  00A0               	movwf	readADC@channel
  6043  0410  3000               	movlw	0
  6044  0411  00A1               	movwf	readADC@channel+1
  6045  0412  3187  27D3  3183   	fcall	_readADC
  6046  0415  0020               	movlb	0	; select bank0
  6047  0416  0820               	movf	?_readADC,w
  6048  0417  00A9               	movwf	??_configureController
  6049  0418  0829               	movf	??_configureController,w
  6050  0419  00B0               	movwf	configureController@ryMin
  6051                           
  6052                           ;Controller.c: 200:     char ryMax = readADC(0b010111);
  6053  041A  3017               	movlw	23
  6054  041B  00A0               	movwf	readADC@channel
  6055  041C  3000               	movlw	0
  6056  041D  00A1               	movwf	readADC@channel+1
  6057  041E  3187  27D3  3183   	fcall	_readADC
  6058  0421  0020               	movlb	0	; select bank0
  6059  0422  0820               	movf	?_readADC,w
  6060  0423  00A9               	movwf	??_configureController
  6061  0424  0829               	movf	??_configureController,w
  6062  0425  00B1               	movwf	configureController@ryMax
  6063  0426                     l3007:	
  6064                           
  6065                           ;Controller.c: 212:         readController(0);
  6066  0426  3000               	movlw	0
  6067  0427  3185  2524  3183   	fcall	_readController
  6068  042A                     l3009:	
  6069                           
  6070                           ;Controller.c: 215:         if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F)
      +                           {
  6071  042A  306F               	movlw	111
  6072  042B  0020               	movlb	0	; select bank0
  6073  042C  0659               	xorwf	_digitalStateFirst,w
  6074  042D  1D03               	btfss	3,2
  6075  042E  2C30               	goto	u2081
  6076  042F  2C31               	goto	u2080
  6077  0430                     u2081:	
  6078  0430  2C4C               	goto	l3025
  6079  0431                     u2080:	
  6080  0431                     l3011:	
  6081  0431  303F               	movlw	63
  6082  0432  0658               	xorwf	_digitalStateSecond,w
  6083  0433  1D03               	btfss	3,2
  6084  0434  2C36               	goto	u2091
  6085  0435  2C37               	goto	u2090
  6086  0436                     u2091:	
  6087  0436  2C4C               	goto	l3025
  6088  0437                     u2090:	
  6089  0437                     l3013:	
  6090                           
  6091                           ;Controller.c: 218:             lxMin = 0;
  6092  0437  01AA               	clrf	configureController@lxMin
  6093  0438                     l3015:	
  6094                           
  6095                           ;Controller.c: 219:             lxMax = 255;
  6096  0438  30FF               	movlw	255
  6097  0439  00A9               	movwf	??_configureController
  6098  043A  0829               	movf	??_configureController,w
  6099  043B  00AB               	movwf	configureController@lxMax
  6100  043C                     l3017:	
  6101                           
  6102                           ;Controller.c: 220:             lyMin = 0;
  6103  043C  01AC               	clrf	configureController@lyMin
  6104                           
  6105                           ;Controller.c: 221:             lyMax = 255;
  6106  043D  30FF               	movlw	255
  6107  043E  00A9               	movwf	??_configureController
  6108  043F  0829               	movf	??_configureController,w
  6109  0440  00AD               	movwf	configureController@lyMax
  6110  0441                     l3019:	
  6111                           
  6112                           ;Controller.c: 223:             rxMin = 0;
  6113  0441  01AE               	clrf	configureController@rxMin
  6114  0442                     l3021:	
  6115                           
  6116                           ;Controller.c: 224:             rxMax = 255;
  6117  0442  30FF               	movlw	255
  6118  0443  00A9               	movwf	??_configureController
  6119  0444  0829               	movf	??_configureController,w
  6120  0445  00AF               	movwf	configureController@rxMax
  6121                           
  6122                           ;Controller.c: 225:             ryMin = 0;
  6123  0446  01B0               	clrf	configureController@ryMin
  6124  0447                     l3023:	
  6125                           
  6126                           ;Controller.c: 226:             ryMax = 255;
  6127  0447  30FF               	movlw	255
  6128  0448  00A9               	movwf	??_configureController
  6129  0449  0829               	movf	??_configureController,w
  6130  044A  00B1               	movwf	configureController@ryMax
  6131                           
  6132                           ;Controller.c: 228:             break;
  6133  044B  2CDA               	goto	l3051
  6134  044C                     l3025:	
  6135                           
  6136                           ;Controller.c: 232:         if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF)
      +                           {
  6137  044C  307F               	movlw	127
  6138  044D  0659               	xorwf	_digitalStateFirst,w
  6139  044E  1D03               	btfss	3,2
  6140  044F  2C51               	goto	u2101
  6141  0450  2C52               	goto	u2100
  6142  0451                     u2101:	
  6143  0451  2C59               	goto	l3031
  6144  0452                     u2100:	
  6145  0452                     l3027:	
  6146  0452  30CF               	movlw	207
  6147  0453  0658               	xorwf	_digitalStateSecond,w
  6148  0454  1D03               	btfss	3,2
  6149  0455  2C57               	goto	u2111
  6150  0456  2C58               	goto	u2110
  6151  0457                     u2111:	
  6152  0457  2C59               	goto	l3031
  6153  0458                     u2110:	
  6154  0458  2CDA               	goto	l3051
  6155  0459                     l3031:	
  6156                           
  6157                           ;Controller.c: 237:         lx = readADC(0b010000);
  6158  0459  3010               	movlw	16
  6159  045A  00A0               	movwf	readADC@channel
  6160  045B  3000               	movlw	0
  6161  045C  00A1               	movwf	readADC@channel+1
  6162  045D  3187  27D3  3183   	fcall	_readADC
  6163  0460  0020               	movlb	0	; select bank0
  6164  0461  0820               	movf	?_readADC,w
  6165  0462  00A9               	movwf	??_configureController
  6166  0463  0829               	movf	??_configureController,w
  6167  0464  00B2               	movwf	configureController@lx
  6168                           
  6169                           ;Controller.c: 238:         ly = readADC(0b10001);
  6170  0465  3011               	movlw	17
  6171  0466  00A0               	movwf	readADC@channel
  6172  0467  3000               	movlw	0
  6173  0468  00A1               	movwf	readADC@channel+1
  6174  0469  3187  27D3  3183   	fcall	_readADC
  6175  046C  0020               	movlb	0	; select bank0
  6176  046D  0820               	movf	?_readADC,w
  6177  046E  00A9               	movwf	??_configureController
  6178  046F  0829               	movf	??_configureController,w
  6179  0470  00B3               	movwf	configureController@ly
  6180                           
  6181                           ;Controller.c: 240:         rx = readADC(0b010110);
  6182  0471  3016               	movlw	22
  6183  0472  00A0               	movwf	readADC@channel
  6184  0473  3000               	movlw	0
  6185  0474  00A1               	movwf	readADC@channel+1
  6186  0475  3187  27D3  3183   	fcall	_readADC
  6187  0478  0020               	movlb	0	; select bank0
  6188  0479  0820               	movf	?_readADC,w
  6189  047A  00A9               	movwf	??_configureController
  6190  047B  0829               	movf	??_configureController,w
  6191  047C  00B4               	movwf	configureController@rx
  6192                           
  6193                           ;Controller.c: 241:         ry = readADC(0b010111);
  6194  047D  3017               	movlw	23
  6195  047E  00A0               	movwf	readADC@channel
  6196  047F  3000               	movlw	0
  6197  0480  00A1               	movwf	readADC@channel+1
  6198  0481  3187  27D3  3183   	fcall	_readADC
  6199  0484  0020               	movlb	0	; select bank0
  6200  0485  0820               	movf	?_readADC,w
  6201  0486  00A9               	movwf	??_configureController
  6202  0487  0829               	movf	??_configureController,w
  6203  0488  00B5               	movwf	configureController@ry
  6204  0489                     l3033:	
  6205                           
  6206                           ;Controller.c: 244:         if (ly > lyMax) {
  6207  0489  0833               	movf	configureController@ly,w
  6208  048A  022D               	subwf	configureController@lyMax,w
  6209  048B  1803               	skipnc
  6210  048C  2C8E               	goto	u2121
  6211  048D  2C8F               	goto	u2120
  6212  048E                     u2121:	
  6213  048E  2C93               	goto	l338
  6214  048F                     u2120:	
  6215  048F                     l3035:	
  6216                           
  6217                           ;Controller.c: 245:             lyMax = ly;
  6218  048F  0833               	movf	configureController@ly,w
  6219  0490  00A9               	movwf	??_configureController
  6220  0491  0829               	movf	??_configureController,w
  6221  0492  00AD               	movwf	configureController@lyMax
  6222  0493                     l338:	
  6223                           ;Controller.c: 246:         }
  6224                           
  6225                           
  6226                           ;Controller.c: 248:         if (ly < lyMin) {
  6227  0493  082C               	movf	configureController@lyMin,w
  6228  0494  0233               	subwf	configureController@ly,w
  6229  0495  1803               	skipnc
  6230  0496  2C98               	goto	u2131
  6231  0497  2C99               	goto	u2130
  6232  0498                     u2131:	
  6233  0498  2C9D               	goto	l339
  6234  0499                     u2130:	
  6235  0499                     l3037:	
  6236                           
  6237                           ;Controller.c: 249:             lyMin = ly;
  6238  0499  0833               	movf	configureController@ly,w
  6239  049A  00A9               	movwf	??_configureController
  6240  049B  0829               	movf	??_configureController,w
  6241  049C  00AC               	movwf	configureController@lyMin
  6242  049D                     l339:	
  6243                           ;Controller.c: 250:         }
  6244                           
  6245                           
  6246                           ;Controller.c: 252:         if (lx > lxMax) {
  6247  049D  0832               	movf	configureController@lx,w
  6248  049E  022B               	subwf	configureController@lxMax,w
  6249  049F  1803               	skipnc
  6250  04A0  2CA2               	goto	u2141
  6251  04A1  2CA3               	goto	u2140
  6252  04A2                     u2141:	
  6253  04A2  2CA7               	goto	l340
  6254  04A3                     u2140:	
  6255  04A3                     l3039:	
  6256                           
  6257                           ;Controller.c: 253:             lxMax = lx;
  6258  04A3  0832               	movf	configureController@lx,w
  6259  04A4  00A9               	movwf	??_configureController
  6260  04A5  0829               	movf	??_configureController,w
  6261  04A6  00AB               	movwf	configureController@lxMax
  6262  04A7                     l340:	
  6263                           ;Controller.c: 254:         }
  6264                           
  6265                           
  6266                           ;Controller.c: 256:         if (lx < lxMin) {
  6267  04A7  082A               	movf	configureController@lxMin,w
  6268  04A8  0232               	subwf	configureController@lx,w
  6269  04A9  1803               	skipnc
  6270  04AA  2CAC               	goto	u2151
  6271  04AB  2CAD               	goto	u2150
  6272  04AC                     u2151:	
  6273  04AC  2CB1               	goto	l341
  6274  04AD                     u2150:	
  6275  04AD                     l3041:	
  6276                           
  6277                           ;Controller.c: 257:             lxMin = lx;
  6278  04AD  0832               	movf	configureController@lx,w
  6279  04AE  00A9               	movwf	??_configureController
  6280  04AF  0829               	movf	??_configureController,w
  6281  04B0  00AA               	movwf	configureController@lxMin
  6282  04B1                     l341:	
  6283                           ;Controller.c: 258:         }
  6284                           
  6285                           
  6286                           ;Controller.c: 262:         if (ry > ryMax) {
  6287  04B1  0835               	movf	configureController@ry,w
  6288  04B2  0231               	subwf	configureController@ryMax,w
  6289  04B3  1803               	skipnc
  6290  04B4  2CB6               	goto	u2161
  6291  04B5  2CB7               	goto	u2160
  6292  04B6                     u2161:	
  6293  04B6  2CBB               	goto	l342
  6294  04B7                     u2160:	
  6295  04B7                     l3043:	
  6296                           
  6297                           ;Controller.c: 263:             ryMax = ry;
  6298  04B7  0835               	movf	configureController@ry,w
  6299  04B8  00A9               	movwf	??_configureController
  6300  04B9  0829               	movf	??_configureController,w
  6301  04BA  00B1               	movwf	configureController@ryMax
  6302  04BB                     l342:	
  6303                           ;Controller.c: 264:         }
  6304                           
  6305                           
  6306                           ;Controller.c: 266:         if (ry < ryMin) {
  6307  04BB  0830               	movf	configureController@ryMin,w
  6308  04BC  0235               	subwf	configureController@ry,w
  6309  04BD  1803               	skipnc
  6310  04BE  2CC0               	goto	u2171
  6311  04BF  2CC1               	goto	u2170
  6312  04C0                     u2171:	
  6313  04C0  2CC5               	goto	l343
  6314  04C1                     u2170:	
  6315  04C1                     l3045:	
  6316                           
  6317                           ;Controller.c: 267:             ryMin = ry;
  6318  04C1  0835               	movf	configureController@ry,w
  6319  04C2  00A9               	movwf	??_configureController
  6320  04C3  0829               	movf	??_configureController,w
  6321  04C4  00B0               	movwf	configureController@ryMin
  6322  04C5                     l343:	
  6323                           ;Controller.c: 268:         }
  6324                           
  6325                           
  6326                           ;Controller.c: 270:         if (rx > rxMax) {
  6327  04C5  0834               	movf	configureController@rx,w
  6328  04C6  022F               	subwf	configureController@rxMax,w
  6329  04C7  1803               	skipnc
  6330  04C8  2CCA               	goto	u2181
  6331  04C9  2CCB               	goto	u2180
  6332  04CA                     u2181:	
  6333  04CA  2CCF               	goto	l344
  6334  04CB                     u2180:	
  6335  04CB                     l3047:	
  6336                           
  6337                           ;Controller.c: 271:             rxMax = rx;
  6338  04CB  0834               	movf	configureController@rx,w
  6339  04CC  00A9               	movwf	??_configureController
  6340  04CD  0829               	movf	??_configureController,w
  6341  04CE  00AF               	movwf	configureController@rxMax
  6342  04CF                     l344:	
  6343                           ;Controller.c: 272:         }
  6344                           
  6345                           
  6346                           ;Controller.c: 274:         if (rx < rxMin) {
  6347  04CF  082E               	movf	configureController@rxMin,w
  6348  04D0  0234               	subwf	configureController@rx,w
  6349  04D1  1803               	skipnc
  6350  04D2  2CD4               	goto	u2191
  6351  04D3  2CD5               	goto	u2190
  6352  04D4                     u2191:	
  6353  04D4  2C26               	goto	l3007
  6354  04D5                     u2190:	
  6355  04D5                     l3049:	
  6356                           
  6357                           ;Controller.c: 275:             rxMin = rx;
  6358  04D5  0834               	movf	configureController@rx,w
  6359  04D6  00A9               	movwf	??_configureController
  6360  04D7  0829               	movf	??_configureController,w
  6361  04D8  00AE               	movwf	configureController@rxMin
  6362  04D9  2C26               	goto	l3007
  6363  04DA                     l3051:	
  6364                           
  6365                           ;Controller.c: 281:     eepromWrite(0x60, lxMin);
  6366  04DA  082A               	movf	configureController@lxMin,w
  6367  04DB  00A9               	movwf	??_configureController
  6368  04DC  0829               	movf	??_configureController,w
  6369  04DD  00A0               	movwf	eepromWrite@data
  6370  04DE  3060               	movlw	96
  6371  04DF  318E  268F  3183   	fcall	_eepromWrite
  6372                           
  6373                           ;Controller.c: 282:     eepromWrite(0x61, lxMax);
  6374  04E2  0020               	movlb	0	; select bank0
  6375  04E3  082B               	movf	configureController@lxMax,w
  6376  04E4  00A9               	movwf	??_configureController
  6377  04E5  0829               	movf	??_configureController,w
  6378  04E6  00A0               	movwf	eepromWrite@data
  6379  04E7  3061               	movlw	97
  6380  04E8  318E  268F  3183   	fcall	_eepromWrite
  6381                           
  6382                           ;Controller.c: 283:     eepromWrite(0x62, lyMin);
  6383  04EB  0020               	movlb	0	; select bank0
  6384  04EC  082C               	movf	configureController@lyMin,w
  6385  04ED  00A9               	movwf	??_configureController
  6386  04EE  0829               	movf	??_configureController,w
  6387  04EF  00A0               	movwf	eepromWrite@data
  6388  04F0  3062               	movlw	98
  6389  04F1  318E  268F  3183   	fcall	_eepromWrite
  6390                           
  6391                           ;Controller.c: 284:     eepromWrite(0x63, lyMax);
  6392  04F4  0020               	movlb	0	; select bank0
  6393  04F5  082D               	movf	configureController@lyMax,w
  6394  04F6  00A9               	movwf	??_configureController
  6395  04F7  0829               	movf	??_configureController,w
  6396  04F8  00A0               	movwf	eepromWrite@data
  6397  04F9  3063               	movlw	99
  6398  04FA  318E  268F  3183   	fcall	_eepromWrite
  6399                           
  6400                           ;Controller.c: 286:     eepromWrite(0x64, rxMin);
  6401  04FD  0020               	movlb	0	; select bank0
  6402  04FE  082E               	movf	configureController@rxMin,w
  6403  04FF  00A9               	movwf	??_configureController
  6404  0500  0829               	movf	??_configureController,w
  6405  0501  00A0               	movwf	eepromWrite@data
  6406  0502  3064               	movlw	100
  6407  0503  318E  268F  3183   	fcall	_eepromWrite
  6408                           
  6409                           ;Controller.c: 287:     eepromWrite(0x65, rxMax);
  6410  0506  0020               	movlb	0	; select bank0
  6411  0507  082F               	movf	configureController@rxMax,w
  6412  0508  00A9               	movwf	??_configureController
  6413  0509  0829               	movf	??_configureController,w
  6414  050A  00A0               	movwf	eepromWrite@data
  6415  050B  3065               	movlw	101
  6416  050C  318E  268F  3183   	fcall	_eepromWrite
  6417                           
  6418                           ;Controller.c: 288:     eepromWrite(0x66, ryMin);
  6419  050F  0020               	movlb	0	; select bank0
  6420  0510  0830               	movf	configureController@ryMin,w
  6421  0511  00A9               	movwf	??_configureController
  6422  0512  0829               	movf	??_configureController,w
  6423  0513  00A0               	movwf	eepromWrite@data
  6424  0514  3066               	movlw	102
  6425  0515  318E  268F  3183   	fcall	_eepromWrite
  6426                           
  6427                           ;Controller.c: 289:     eepromWrite(0x67, ryMax);
  6428  0518  0020               	movlb	0	; select bank0
  6429  0519  0831               	movf	configureController@ryMax,w
  6430  051A  00A9               	movwf	??_configureController
  6431  051B  0829               	movf	??_configureController,w
  6432  051C  00A0               	movwf	eepromWrite@data
  6433  051D  3067               	movlw	103
  6434  051E  318E  268F  3183   	fcall	_eepromWrite
  6435  0521                     l3053:	
  6436                           
  6437                           ;Controller.c: 291:     INTCONbits.GIE = 1;
  6438  0521  178B               	bsf	11,7	;volatile
  6439  0522                     l3055:	
  6440                           
  6441                           ;Controller.c: 292:     INTCONbits.PEIE = 1;
  6442  0522  170B               	bsf	11,6	;volatile
  6443  0523                     l347:	
  6444  0523  0008               	return
  6445  0524                     __end_of_configureController:	
  6446                           
  6447                           	psect	text13
  6448  0524                     __ptext13:	
  6449 ;; *************** function _readController *****************
  6450 ;; Defined at:
  6451 ;;		line 12 in file "Controller.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  analogMode      1    wreg     unsigned char 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  analogMode      1    2[BANK0 ] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6468 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:        3 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    3
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;;		_configureController
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           
  6481                           ;psect for function _readController
  6482  0524                     _readController:	
  6483                           
  6484                           ;incstack = 0
  6485                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  6486                           ;readController@analogMode stored from wreg
  6487  0524  0020               	movlb	0	; select bank0
  6488  0525  00A2               	movwf	readController@analogMode
  6489  0526                     l2787:	
  6490                           
  6491                           ;Controller.c: 15:     DigitalControllerByte1[DDown] = RA7;
  6492  0526  3000               	movlw	0
  6493  0527  1B8C               	btfsc	12,7	;volatile
  6494  0528  3001               	movlw	1
  6495  0529  0021               	movlb	1	; select bank1
  6496  052A  00C9               	movwf	(_DigitalControllerByte1^(0+128)+1)
  6497                           
  6498                           ;Controller.c: 16:     DigitalControllerByte1[DUp] = RA6;
  6499  052B  3000               	movlw	0
  6500  052C  0020               	movlb	0	; select bank0
  6501  052D  1B0C               	btfsc	12,6	;volatile
  6502  052E  3001               	movlw	1
  6503  052F  0021               	movlb	1	; select bank1
  6504  0530  00CB               	movwf	(_DigitalControllerByte1^(0+128)+3)
  6505                           
  6506                           ;Controller.c: 17:     DigitalControllerByte1[DLeft] = RB0;
  6507  0531  3000               	movlw	0
  6508  0532  0020               	movlb	0	; select bank0
  6509  0533  180D               	btfsc	13,0	;volatile
  6510  0534  3001               	movlw	1
  6511  0535  0021               	movlb	1	; select bank1
  6512  0536  00C8               	movwf	_DigitalControllerByte1^(0+128)
  6513                           
  6514                           ;Controller.c: 18:     DigitalControllerByte1[DRight] = RB1;
  6515  0537  3000               	movlw	0
  6516  0538  0020               	movlb	0	; select bank0
  6517  0539  188D               	btfsc	13,1	;volatile
  6518  053A  3001               	movlw	1
  6519  053B  0021               	movlb	1	; select bank1
  6520  053C  00CA               	movwf	(_DigitalControllerByte1^(0+128)+2)
  6521                           
  6522                           ;Controller.c: 19:     DigitalControllerByte1[R3] = RD0;
  6523  053D  3000               	movlw	0
  6524  053E  0020               	movlb	0	; select bank0
  6525  053F  180F               	btfsc	15,0	;volatile
  6526  0540  3001               	movlw	1
  6527  0541  0021               	movlb	1	; select bank1
  6528  0542  00CD               	movwf	(_DigitalControllerByte1^(0+128)+5)
  6529                           
  6530                           ;Controller.c: 20:     DigitalControllerByte1[L3] = RC2;
  6531  0543  3000               	movlw	0
  6532  0544  0020               	movlb	0	; select bank0
  6533  0545  190E               	btfsc	14,2	;volatile
  6534  0546  3001               	movlw	1
  6535  0547  0021               	movlb	1	; select bank1
  6536  0548  00CE               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6537                           
  6538                           ;Controller.c: 21:     DigitalControllerByte1[Start] = RB6;
  6539  0549  3000               	movlw	0
  6540  054A  0020               	movlb	0	; select bank0
  6541  054B  1B0D               	btfsc	13,6	;volatile
  6542  054C  3001               	movlw	1
  6543  054D  0021               	movlb	1	; select bank1
  6544  054E  00CC               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6545                           
  6546                           ;Controller.c: 22:     DigitalControllerByte1[Select] = RB7;
  6547  054F  3000               	movlw	0
  6548  0550  0020               	movlb	0	; select bank0
  6549  0551  1B8D               	btfsc	13,7	;volatile
  6550  0552  3001               	movlw	1
  6551  0553  0021               	movlb	1	; select bank1
  6552  0554  00CF               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6553                           
  6554                           ;Controller.c: 24:     DigitalControllerByte2[Square] = RA0;
  6555  0555  3000               	movlw	0
  6556  0556  0020               	movlb	0	; select bank0
  6557  0557  180C               	btfsc	12,0	;volatile
  6558  0558  3001               	movlw	1
  6559  0559  0021               	movlb	1	; select bank1
  6560  055A  00C0               	movwf	_DigitalControllerByte2^(0+128)
  6561                           
  6562                           ;Controller.c: 25:     DigitalControllerByte2[Circle] = RA3;
  6563  055B  3000               	movlw	0
  6564  055C  0020               	movlb	0	; select bank0
  6565  055D  198C               	btfsc	12,3	;volatile
  6566  055E  3001               	movlw	1
  6567  055F  0021               	movlb	1	; select bank1
  6568  0560  00C2               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6569                           
  6570                           ;Controller.c: 26:     DigitalControllerByte2[X] = RA2;
  6571  0561  3000               	movlw	0
  6572  0562  0020               	movlb	0	; select bank0
  6573  0563  190C               	btfsc	12,2	;volatile
  6574  0564  3001               	movlw	1
  6575  0565  0021               	movlb	1	; select bank1
  6576  0566  00C1               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6577                           
  6578                           ;Controller.c: 27:     DigitalControllerByte2[Triangle] = RA1;
  6579  0567  3000               	movlw	0
  6580  0568  0020               	movlb	0	; select bank0
  6581  0569  188C               	btfsc	12,1	;volatile
  6582  056A  3001               	movlw	1
  6583  056B  0021               	movlb	1	; select bank1
  6584  056C  00C3               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6585                           
  6586                           ;Controller.c: 28:     DigitalControllerByte2[R1] = RB4;
  6587  056D  3000               	movlw	0
  6588  056E  0020               	movlb	0	; select bank0
  6589  056F  1A0D               	btfsc	13,4	;volatile
  6590  0570  3001               	movlw	1
  6591  0571  0021               	movlb	1	; select bank1
  6592  0572  00C4               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6593                           
  6594                           ;Controller.c: 29:     DigitalControllerByte2[R2] = RB5;
  6595  0573  3000               	movlw	0
  6596  0574  0020               	movlb	0	; select bank0
  6597  0575  1A8D               	btfsc	13,5	;volatile
  6598  0576  3001               	movlw	1
  6599  0577  0021               	movlb	1	; select bank1
  6600  0578  00C6               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6601                           
  6602                           ;Controller.c: 30:     DigitalControllerByte2[L1] = RB2;
  6603  0579  3000               	movlw	0
  6604  057A  0020               	movlb	0	; select bank0
  6605  057B  190D               	btfsc	13,2	;volatile
  6606  057C  3001               	movlw	1
  6607  057D  0021               	movlb	1	; select bank1
  6608  057E  00C5               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6609                           
  6610                           ;Controller.c: 31:     DigitalControllerByte2[L2] = RB3;
  6611  057F  3000               	movlw	0
  6612  0580  0020               	movlb	0	; select bank0
  6613  0581  198D               	btfsc	13,3	;volatile
  6614  0582  3001               	movlw	1
  6615  0583  0021               	movlb	1	; select bank1
  6616  0584  00C7               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6617  0585                     l2789:	
  6618                           
  6619                           ;Controller.c: 36:     if (index > Select) {
  6620  0585  3008               	movlw	8
  6621  0586  0278               	subwf	_index,w
  6622  0587  1C03               	skipc
  6623  0588  2D8A               	goto	u1731
  6624  0589  2D8B               	goto	u1730
  6625  058A                     u1731:	
  6626  058A  2D8C               	goto	l2793
  6627  058B                     u1730:	
  6628  058B                     l2791:	
  6629                           
  6630                           ;Controller.c: 37:         index = 0;
  6631  058B  01F8               	clrf	_index
  6632  058C                     l2793:	
  6633                           
  6634                           ;Controller.c: 41:     if (!DigitalControllerByte1[index]) {
  6635  058C  0878               	movf	_index,w
  6636  058D  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6637  058E  0086               	movwf	6
  6638  058F  0187               	clrf	7
  6639  0590  0801               	movf	1,w
  6640  0591  1D03               	btfss	3,2
  6641  0592  2D94               	goto	u1741
  6642  0593  2D95               	goto	u1740
  6643  0594                     u1741:	
  6644  0594  2D9E               	goto	l285
  6645  0595                     u1740:	
  6646  0595                     l2795:	
  6647                           
  6648                           ;Controller.c: 42:         IndexDigitalByte1[index]++;
  6649  0595  3001               	movlw	1
  6650  0596  0020               	movlb	0	; select bank0
  6651  0597  00A0               	movwf	??_readController
  6652  0598  0878               	movf	_index,w
  6653  0599  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6654  059A  0086               	movwf	6
  6655  059B  0187               	clrf	7
  6656  059C  0820               	movf	??_readController,w
  6657  059D  0781               	addwf	1,f
  6658  059E                     l285:	
  6659                           ;Controller.c: 43:     }
  6660                           
  6661                           
  6662                           ;Controller.c: 44:     if (!DigitalControllerByte2[index]) {
  6663  059E  0878               	movf	_index,w
  6664  059F  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6665  05A0  0086               	movwf	6
  6666  05A1  0187               	clrf	7
  6667  05A2  0801               	movf	1,w
  6668  05A3  1D03               	btfss	3,2
  6669  05A4  2DA6               	goto	u1751
  6670  05A5  2DA7               	goto	u1750
  6671  05A6                     u1751:	
  6672  05A6  2DB0               	goto	l2799
  6673  05A7                     u1750:	
  6674  05A7                     l2797:	
  6675                           
  6676                           ;Controller.c: 45:         IndexDigitalByte2[index]++;
  6677  05A7  3001               	movlw	1
  6678  05A8  0020               	movlb	0	; select bank0
  6679  05A9  00A0               	movwf	??_readController
  6680  05AA  0878               	movf	_index,w
  6681  05AB  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6682  05AC  0086               	movwf	6
  6683  05AD  0187               	clrf	7
  6684  05AE  0820               	movf	??_readController,w
  6685  05AF  0781               	addwf	1,f
  6686  05B0                     l2799:	
  6687                           
  6688                           ;Controller.c: 49:     if (DigitalControllerByte1[index] ^ PreviousDigitalByte1[index]) 
      +                          {
  6689  05B0  0878               	movf	_index,w
  6690  05B1  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6691  05B2  0086               	movwf	6
  6692  05B3  0187               	clrf	7
  6693  05B4  0878               	movf	_index,w
  6694  05B5  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6695  05B6  0084               	movwf	4
  6696  05B7  0185               	clrf	5
  6697  05B8  0800               	movf	0,w
  6698  05B9  0601               	xorwf	1,w
  6699  05BA  1903               	btfsc	3,2
  6700  05BB  2DBD               	goto	u1761
  6701  05BC  2DBE               	goto	u1760
  6702  05BD                     u1761:	
  6703  05BD  2DD9               	goto	l2809
  6704  05BE                     u1760:	
  6705  05BE                     l2801:	
  6706                           
  6707                           ;Controller.c: 50:         IndexDigitalByte1[index] = 0;
  6708  05BE  0878               	movf	_index,w
  6709  05BF  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6710  05C0  0086               	movwf	6
  6711  05C1  0187               	clrf	7
  6712  05C2  0181               	clrf	1
  6713  05C3                     l2803:	
  6714                           
  6715                           ;Controller.c: 51:         digitalStateFirst |= 1 << index;
  6716  05C3  3001               	movlw	1
  6717  05C4  0020               	movlb	0	; select bank0
  6718  05C5  00A0               	movwf	??_readController
  6719  05C6  0A78               	incf	_index,w
  6720  05C7  2DC9               	goto	u1774
  6721  05C8                     u1775:	
  6722  05C8  35A0               	lslf	??_readController,f
  6723  05C9                     u1774:	
  6724  05C9  0B89               	decfsz	9,f
  6725  05CA  2DC8               	goto	u1775
  6726  05CB  0820               	movf	??_readController,w
  6727  05CC  00A1               	movwf	??_readController+1
  6728  05CD  0821               	movf	??_readController+1,w
  6729  05CE  04D9               	iorwf	_digitalStateFirst,f
  6730  05CF                     l2805:	
  6731                           
  6732                           ;Controller.c: 53:         if (analogMode) {
  6733  05CF  0822               	movf	readController@analogMode,w
  6734  05D0  1903               	btfsc	3,2
  6735  05D1  2DD3               	goto	u1781
  6736  05D2  2DD4               	goto	u1780
  6737  05D3                     u1781:	
  6738  05D3  2DD9               	goto	l2809
  6739  05D4                     u1780:	
  6740  05D4                     l2807:	
  6741                           
  6742                           ;Controller.c: 54:             analogStateFirst[index] = 0x00;
  6743  05D4  0878               	movf	_index,w
  6744  05D5  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6745  05D6  0086               	movwf	6
  6746  05D7  0187               	clrf	7
  6747  05D8  0181               	clrf	1
  6748  05D9                     l2809:	
  6749                           
  6750                           ;Controller.c: 58:     if (DigitalControllerByte2[index] ^ PreviousDigitalByte2[index]) 
      +                          {
  6751  05D9  0878               	movf	_index,w
  6752  05DA  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6753  05DB  0086               	movwf	6
  6754  05DC  0187               	clrf	7
  6755  05DD  0878               	movf	_index,w
  6756  05DE  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6757  05DF  0084               	movwf	4
  6758  05E0  0185               	clrf	5
  6759  05E1  0800               	movf	0,w
  6760  05E2  0601               	xorwf	1,w
  6761  05E3  1903               	btfsc	3,2
  6762  05E4  2DE6               	goto	u1791
  6763  05E5  2DE7               	goto	u1790
  6764  05E6                     u1791:	
  6765  05E6  2E02               	goto	l289
  6766  05E7                     u1790:	
  6767  05E7                     l2811:	
  6768                           
  6769                           ;Controller.c: 59:         IndexDigitalByte2[index] = 0;
  6770  05E7  0878               	movf	_index,w
  6771  05E8  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6772  05E9  0086               	movwf	6
  6773  05EA  0187               	clrf	7
  6774  05EB  0181               	clrf	1
  6775  05EC                     l2813:	
  6776                           
  6777                           ;Controller.c: 60:         digitalStateSecond |= 1 << index;
  6778  05EC  3001               	movlw	1
  6779  05ED  0020               	movlb	0	; select bank0
  6780  05EE  00A0               	movwf	??_readController
  6781  05EF  0A78               	incf	_index,w
  6782  05F0  2DF2               	goto	u1804
  6783  05F1                     u1805:	
  6784  05F1  35A0               	lslf	??_readController,f
  6785  05F2                     u1804:	
  6786  05F2  0B89               	decfsz	9,f
  6787  05F3  2DF1               	goto	u1805
  6788  05F4  0820               	movf	??_readController,w
  6789  05F5  00A1               	movwf	??_readController+1
  6790  05F6  0821               	movf	??_readController+1,w
  6791  05F7  04D8               	iorwf	_digitalStateSecond,f
  6792  05F8                     l2815:	
  6793                           
  6794                           ;Controller.c: 62:         if (analogMode) {
  6795  05F8  0822               	movf	readController@analogMode,w
  6796  05F9  1903               	btfsc	3,2
  6797  05FA  2DFC               	goto	u1811
  6798  05FB  2DFD               	goto	u1810
  6799  05FC                     u1811:	
  6800  05FC  2E02               	goto	l289
  6801  05FD                     u1810:	
  6802  05FD                     l2817:	
  6803                           
  6804                           ;Controller.c: 63:             analogStateSecond[index] = 0x00;
  6805  05FD  0878               	movf	_index,w
  6806  05FE  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6807  05FF  0086               	movwf	6
  6808  0600  0187               	clrf	7
  6809  0601  0181               	clrf	1
  6810  0602                     l289:	
  6811                           ;Controller.c: 66:     }
  6812                           
  6813  0602  0878               	movf	_index,w
  6814  0603  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6815  0604  0086               	movwf	6
  6816  0605  0187               	clrf	7
  6817  0606  3003               	movlw	3
  6818  0607  0201               	subwf	1,w
  6819  0608  1C03               	skipc
  6820  0609  2E0B               	goto	u1821
  6821  060A  2E0C               	goto	u1820
  6822  060B                     u1821:	
  6823  060B  2E26               	goto	l291
  6824  060C                     u1820:	
  6825  060C                     l2819:	
  6826                           
  6827                           ;Controller.c: 70:         digitalStateFirst &= ~(1 << index);
  6828  060C  3001               	movlw	1
  6829  060D  0020               	movlb	0	; select bank0
  6830  060E  00A0               	movwf	??_readController
  6831  060F  0A78               	incf	_index,w
  6832  0610  2E12               	goto	u1834
  6833  0611                     u1835:	
  6834  0611  35A0               	lslf	??_readController,f
  6835  0612                     u1834:	
  6836  0612  0B89               	decfsz	9,f
  6837  0613  2E11               	goto	u1835
  6838  0614  0820               	movf	??_readController,w
  6839  0615  3AFF               	xorlw	255
  6840  0616  00A1               	movwf	??_readController+1
  6841  0617  0821               	movf	??_readController+1,w
  6842  0618  05D9               	andwf	_digitalStateFirst,f
  6843                           
  6844                           ;Controller.c: 72:         if (analogMode) {
  6845  0619  0822               	movf	readController@analogMode,w
  6846  061A  1903               	btfsc	3,2
  6847  061B  2E1D               	goto	u1841
  6848  061C  2E1E               	goto	u1840
  6849  061D                     u1841:	
  6850  061D  2E26               	goto	l291
  6851  061E                     u1840:	
  6852  061E                     l2821:	
  6853                           
  6854                           ;Controller.c: 73:             analogStateFirst[index] = 0xFF;
  6855  061E  30FF               	movlw	255
  6856  061F  00A0               	movwf	??_readController
  6857  0620  0878               	movf	_index,w
  6858  0621  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6859  0622  0086               	movwf	6
  6860  0623  0187               	clrf	7
  6861  0624  0820               	movf	??_readController,w
  6862  0625  0081               	movwf	1
  6863  0626                     l291:	
  6864                           ;Controller.c: 76:     }
  6865                           
  6866  0626  0878               	movf	_index,w
  6867  0627  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6868  0628  0086               	movwf	6
  6869  0629  0187               	clrf	7
  6870  062A  3003               	movlw	3
  6871  062B  0201               	subwf	1,w
  6872  062C  1C03               	skipc
  6873  062D  2E2F               	goto	u1851
  6874  062E  2E30               	goto	u1850
  6875  062F                     u1851:	
  6876  062F  2E4A               	goto	l293
  6877  0630                     u1850:	
  6878  0630                     l2823:	
  6879                           
  6880                           ;Controller.c: 78:         digitalStateSecond &= ~(1 << index);
  6881  0630  3001               	movlw	1
  6882  0631  0020               	movlb	0	; select bank0
  6883  0632  00A0               	movwf	??_readController
  6884  0633  0A78               	incf	_index,w
  6885  0634  2E36               	goto	u1864
  6886  0635                     u1865:	
  6887  0635  35A0               	lslf	??_readController,f
  6888  0636                     u1864:	
  6889  0636  0B89               	decfsz	9,f
  6890  0637  2E35               	goto	u1865
  6891  0638  0820               	movf	??_readController,w
  6892  0639  3AFF               	xorlw	255
  6893  063A  00A1               	movwf	??_readController+1
  6894  063B  0821               	movf	??_readController+1,w
  6895  063C  05D8               	andwf	_digitalStateSecond,f
  6896                           
  6897                           ;Controller.c: 80:         if (analogMode) {
  6898  063D  0822               	movf	readController@analogMode,w
  6899  063E  1903               	btfsc	3,2
  6900  063F  2E41               	goto	u1871
  6901  0640  2E42               	goto	u1870
  6902  0641                     u1871:	
  6903  0641  2E4A               	goto	l293
  6904  0642                     u1870:	
  6905  0642                     l2825:	
  6906                           
  6907                           ;Controller.c: 81:             analogStateSecond[index] = 0xFF;
  6908  0642  30FF               	movlw	255
  6909  0643  00A0               	movwf	??_readController
  6910  0644  0878               	movf	_index,w
  6911  0645  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6912  0646  0086               	movwf	6
  6913  0647  0187               	clrf	7
  6914  0648  0820               	movf	??_readController,w
  6915  0649  0081               	movwf	1
  6916  064A                     l293:	
  6917                           ;Controller.c: 84:     }
  6918                           
  6919                           
  6920                           ;Controller.c: 87:     PreviousDigitalByte1[index] = DigitalControllerByte1[index];
  6921  064A  0878               	movf	_index,w
  6922  064B  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6923  064C  0086               	movwf	6
  6924  064D  0187               	clrf	7
  6925  064E  0801               	movf	1,w
  6926  064F  0020               	movlb	0	; select bank0
  6927  0650  00A0               	movwf	??_readController
  6928  0651  0878               	movf	_index,w
  6929  0652  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6930  0653  0086               	movwf	6
  6931  0654  0187               	clrf	7
  6932  0655  0820               	movf	??_readController,w
  6933  0656  0081               	movwf	1
  6934                           
  6935                           ;Controller.c: 88:     PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6936  0657  0878               	movf	_index,w
  6937  0658  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6938  0659  0086               	movwf	6
  6939  065A  0187               	clrf	7
  6940  065B  0801               	movf	1,w
  6941  065C  00A0               	movwf	??_readController
  6942  065D  0878               	movf	_index,w
  6943  065E  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6944  065F  0086               	movwf	6
  6945  0660  0187               	clrf	7
  6946  0661  0820               	movf	??_readController,w
  6947  0662  0081               	movwf	1
  6948  0663                     l2827:	
  6949                           
  6950                           ;Controller.c: 90:     index++;
  6951  0663  3001               	movlw	1
  6952  0664  00A0               	movwf	??_readController
  6953  0665  0820               	movf	??_readController,w
  6954  0666  07F8               	addwf	_index,f
  6955  0667                     l295:	
  6956  0667  0008               	return
  6957  0668                     __end_of_readController:	
  6958                           
  6959                           	psect	text14
  6960  07D3                     __ptext14:	
  6961 ;; *************** function _readADC *****************
  6962 ;; Defined at:
  6963 ;;		line 156 in file "Controller.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  channel         2    0[BANK0 ] int 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    0[BANK0 ] unsigned int 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6979 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6980 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6981 ;;Total ram usage:        9 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    3
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_readControllerAnalog
  6988 ;;		_configureController
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           
  6993                           ;psect for function _readADC
  6994  07D3                     _readADC:	
  6995  07D3                     l2841:	
  6996                           ;incstack = 0
  6997                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6998                           
  6999                           
  7000                           ;Controller.c: 157:     ADPCH = channel;
  7001  07D3  0020               	movlb	0	; select bank0
  7002  07D4  0820               	movf	readADC@channel,w
  7003  07D5  0021               	movlb	1	; select bank1
  7004  07D6  009E               	movwf	30	;volatile
  7005  07D7                     l2843:	
  7006                           
  7007                           ;Controller.c: 158:     ADPRE = 0x00;
  7008  07D7  019C               	clrf	28	;volatile
  7009  07D8                     l2845:	
  7010                           
  7011                           ;Controller.c: 159:     ADACQ = 0x3F;
  7012  07D8  303F               	movlw	63
  7013  07D9  009D               	movwf	29	;volatile
  7014  07DA                     l2847:	
  7015                           
  7016                           ;Controller.c: 161:     ADCON0bits.ADGO = 1;
  7017  07DA  1413               	bsf	19,0	;volatile
  7018  07DB                     l322:	
  7019                           ;Controller.c: 162:     while (ADCON0bits.ADGO);
  7020                           
  7021  07DB  1813               	btfsc	19,0	;volatile
  7022  07DC  2FDE               	goto	u1881
  7023  07DD  2FDF               	goto	u1880
  7024  07DE                     u1881:	
  7025  07DE  2FDB               	goto	l322
  7026  07DF                     u1880:	
  7027  07DF                     l2849:	
  7028                           
  7029                           ;Controller.c: 164:     return ((ADRESH << 6) | (ADRESL >> 2));
  7030  07DF  080C               	movf	12,w	;volatile
  7031  07E0  0020               	movlb	0	; select bank0
  7032  07E1  00A2               	movwf	??_readADC
  7033  07E2  3002               	movlw	2
  7034  07E3                     u1895:	
  7035  07E3  36A2               	lsrf	??_readADC,f
  7036  07E4  0B89               	decfsz	9,f
  7037  07E5  2FE3               	goto	u1895
  7038  07E6  0822               	movf	??_readADC,w
  7039  07E7  00A3               	movwf	??_readADC+1
  7040  07E8  01A4               	clrf	??_readADC+2
  7041  07E9  0021               	movlb	1	; select bank1
  7042  07EA  080D               	movf	13,w	;volatile
  7043  07EB  0020               	movlb	0	; select bank0
  7044  07EC  00A5               	movwf	??_readADC+3
  7045  07ED  01A6               	clrf	??_readADC+4
  7046  07EE  3006               	movlw	6
  7047  07EF                     u1905:	
  7048  07EF  35A5               	lslf	??_readADC+3,f
  7049  07F0  0DA6               	rlf	??_readADC+4,f
  7050  07F1  0B89               	decfsz	9,f
  7051  07F2  2FEF               	goto	u1905
  7052  07F3  0823               	movf	??_readADC+1,w
  7053  07F4  0425               	iorwf	??_readADC+3,w
  7054  07F5  00A7               	movwf	??_readADC+5
  7055  07F6  0824               	movf	??_readADC+2,w
  7056  07F7  0426               	iorwf	??_readADC+4,w
  7057  07F8  00A8               	movwf	??_readADC+6
  7058  07F9  0827               	movf	??_readADC+5,w
  7059  07FA  00A0               	movwf	?_readADC
  7060  07FB  0828               	movf	??_readADC+6,w
  7061  07FC  00A1               	movwf	?_readADC+1
  7062  07FD                     l325:	
  7063  07FD  0008               	return
  7064  07FE                     __end_of_readADC:	
  7065                           
  7066                           	psect	text15
  7067  0E8F                     __ptext15:	
  7068 ;; *************** function _eepromWrite *****************
  7069 ;; Defined at:
  7070 ;;		line 9 in file "Nvm.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  address         1    wreg     unsigned char 
  7073 ;;  data            1    0[BANK0 ] unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  address         1    1[BANK0 ] unsigned char 
  7076 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      void 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0, pclath, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7086 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7090 ;;Total ram usage:        3 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    4
  7093 ;; This function calls:
  7094 ;;		_nvmUnlock
  7095 ;; This function is called by:
  7096 ;;		_configureController
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _eepromWrite
  7102  0E8F                     _eepromWrite:	
  7103                           
  7104                           ;incstack = 0
  7105                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7106                           ;eepromWrite@address stored from wreg
  7107  0E8F  0020               	movlb	0	; select bank0
  7108  0E90  00A1               	movwf	eepromWrite@address
  7109  0E91                     l2859:	
  7110                           
  7111                           ;Nvm.c: 12:     unsigned char interruptStatus = INTCONbits.GIE;
  7112  0E91  3000               	movlw	0
  7113  0E92  1B8B               	btfsc	11,7	;volatile
  7114  0E93  3001               	movlw	1
  7115  0E94  00A2               	movwf	eepromWrite@interruptStatus
  7116  0E95                     l2861:	
  7117                           
  7118                           ;Nvm.c: 14:     INTCONbits.GIE = 0;
  7119  0E95  138B               	bcf	11,7	;volatile
  7120  0E96                     l2863:	
  7121                           
  7122                           ;Nvm.c: 16:     NVMCON1bits.NVMREGS = 1;
  7123  0E96  0030               	movlb	16	; select bank16
  7124  0E97  171E               	bsf	30,6	;volsfr
  7125  0E98                     l2865:	
  7126                           
  7127                           ;Nvm.c: 17:     NVMCON1bits.WREN = 1;
  7128  0E98  151E               	bsf	30,2	;volsfr
  7129  0E99                     l2867:	
  7130                           
  7131                           ;Nvm.c: 19:     NVMADRH = 0xF0;
  7132  0E99  30F0               	movlw	240
  7133  0E9A  009B               	movwf	27	;volatile
  7134  0E9B                     l2869:	
  7135                           
  7136                           ;Nvm.c: 20:     NVMADRL = address;
  7137  0E9B  0020               	movlb	0	; select bank0
  7138  0E9C  0821               	movf	eepromWrite@address,w
  7139  0E9D  0030               	movlb	16	; select bank16
  7140  0E9E  009A               	movwf	26	;volatile
  7141  0E9F                     l2871:	
  7142                           
  7143                           ;Nvm.c: 22:     NVMDATL = data;
  7144  0E9F  0020               	movlb	0	; select bank0
  7145  0EA0  0820               	movf	eepromWrite@data,w
  7146  0EA1  0030               	movlb	16	; select bank16
  7147  0EA2  009C               	movwf	28	;volatile
  7148  0EA3                     l2873:	
  7149                           
  7150                           ;Nvm.c: 24:     nvmUnlock();
  7151  0EA3  318D  25B7  318E   	fcall	_nvmUnlock
  7152  0EA6                     l459:	
  7153                           ;Nvm.c: 26:     while (NVMCON1bits.WR);
  7154                           
  7155  0EA6  0030               	movlb	16	; select bank16
  7156  0EA7  189E               	btfsc	30,1	;volsfr
  7157  0EA8  2EAA               	goto	u1961
  7158  0EA9  2EAB               	goto	u1960
  7159  0EAA                     u1961:	
  7160  0EAA  2EA6               	goto	l459
  7161  0EAB                     u1960:	
  7162  0EAB                     l461:	
  7163                           
  7164                           ;Nvm.c: 28:     NVMCON1bits.WREN = 0;
  7165  0EAB  111E               	bcf	30,2	;volsfr
  7166  0EAC                     l2875:	
  7167                           
  7168                           ;Nvm.c: 30:     if (interruptStatus) INTCONbits.GIE = 1;
  7169  0EAC  0020               	movlb	0	; select bank0
  7170  0EAD  0822               	movf	eepromWrite@interruptStatus,w
  7171  0EAE  1903               	btfsc	3,2
  7172  0EAF  2EB1               	goto	u1971
  7173  0EB0  2EB2               	goto	u1970
  7174  0EB1                     u1971:	
  7175  0EB1  2EB3               	goto	l463
  7176  0EB2                     u1970:	
  7177  0EB2                     l2877:	
  7178  0EB2  178B               	bsf	11,7	;volatile
  7179  0EB3                     l463:	
  7180  0EB3  0008               	return
  7181  0EB4                     __end_of_eepromWrite:	
  7182                           
  7183                           	psect	text16
  7184  0DB7                     __ptext16:	
  7185 ;; *************** function _nvmUnlock *****************
  7186 ;; Defined at:
  7187 ;;		line 48 in file "Nvm.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7205 ;;Total ram usage:        0 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    3
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_eepromWrite
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           
  7216                           ;psect for function _nvmUnlock
  7217  0DB7                     _nvmUnlock:	
  7218  0DB7                     l2743:	
  7219                           ;incstack = 0
  7220                           ; Regs used in _nvmUnlock: [wreg]
  7221                           
  7222                           
  7223                           ;Nvm.c: 50:     NVMCON2 = 0x55;
  7224  0DB7  3055               	movlw	85
  7225  0DB8  0030               	movlb	16	; select bank16
  7226  0DB9  009F               	movwf	31	;volsfr
  7227                           
  7228                           ;Nvm.c: 51:     NVMCON2 = 0xAA;
  7229  0DBA  30AA               	movlw	170
  7230  0DBB  009F               	movwf	31	;volsfr
  7231  0DBC                     l2745:	
  7232                           
  7233                           ;Nvm.c: 52:     NVMCON1bits.WR = 1;
  7234  0DBC  149E               	bsf	30,1	;volsfr
  7235  0DBD                     l469:	
  7236  0DBD  0008               	return
  7237  0DBE                     __end_of_nvmUnlock:	
  7238                           
  7239                           	psect	text17
  7240  0DCD                     __ptext17:	
  7241 ;; *************** function _adcInit *****************
  7242 ;; Defined at:
  7243 ;;		line 21 in file "PicConfig.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;		None
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7261 ;;Total ram usage:        0 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:    3
  7264 ;; This function calls:
  7265 ;;		Nothing
  7266 ;; This function is called by:
  7267 ;;		_main
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           
  7272                           ;psect for function _adcInit
  7273  0DCD                     _adcInit:	
  7274  0DCD                     l2939:	
  7275                           ;incstack = 0
  7276                           ; Regs used in _adcInit: [wreg+status,2]
  7277                           
  7278                           
  7279                           ;PicConfig.c: 22:     ADCON0 = 0x04;
  7280  0DCD  3004               	movlw	4
  7281  0DCE  0021               	movlb	1	; select bank1
  7282  0DCF  0093               	movwf	19	;volatile
  7283  0DD0                     l2941:	
  7284                           
  7285                           ;PicConfig.c: 23:     ADCON1 = 0;
  7286  0DD0  0194               	clrf	20	;volatile
  7287  0DD1                     l2943:	
  7288                           
  7289                           ;PicConfig.c: 24:     ADCON2 = 0;
  7290  0DD1  0195               	clrf	21	;volatile
  7291  0DD2                     l2945:	
  7292                           
  7293                           ;PicConfig.c: 25:     ADREF = 0;
  7294  0DD2  019A               	clrf	26	;volatile
  7295  0DD3                     l2947:	
  7296                           
  7297                           ;PicConfig.c: 26:     ADCLK = 0x3F;
  7298  0DD3  303F               	movlw	63
  7299  0DD4  0098               	movwf	24	;volatile
  7300  0DD5                     l2949:	
  7301                           
  7302                           ;PicConfig.c: 27:     ADCON0bits.ADON = 1;
  7303  0DD5  1793               	bsf	19,7	;volatile
  7304  0DD6                     l414:	
  7305  0DD6  0008               	return
  7306  0DD7                     __end_of_adcInit:	
  7307                           
  7308                           	psect	text18
  7309  0E15                     __ptext18:	
  7310 ;; *************** function _PwmInit *****************
  7311 ;; Defined at:
  7312 ;;		line 45 in file "main.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  idle            2    0[BANK0 ] int 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;		None
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7328 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7329 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7330 ;;Total ram usage:        3 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    3
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_main
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           
  7341                           ;psect for function _PwmInit
  7342  0E15                     _PwmInit:	
  7343  0E15                     l2891:	
  7344                           ;incstack = 0
  7345                           ; Regs used in _PwmInit: [wreg]
  7346                           
  7347                           
  7348                           ;main.c: 45: void PwmInit(int idle);main.c: 46: {;main.c: 48:     TRISDbits.TRISD5 = 0;
  7349  0E15  0020               	movlb	0	; select bank0
  7350  0E16  1294               	bcf	20,5	;volatile
  7351  0E17                     l2893:	
  7352                           
  7353                           ;main.c: 50:     PWMOn = 254 - idle;
  7354  0E17  30FE               	movlw	254
  7355  0E18  00A2               	movwf	??_PwmInit
  7356  0E19  0820               	movf	PwmInit@idle,w
  7357  0E1A  0222               	subwf	??_PwmInit,w
  7358  0E1B  00F5               	movwf	_PWMOn
  7359  0E1C  0921               	comf	PwmInit@idle+1,w
  7360  0E1D  1803               	skipnc
  7361  0E1E  0A89               	incf	9,f
  7362  0E1F  00F6               	movwf	_PWMOn+1
  7363                           
  7364                           ;main.c: 51:     T6TMR = PWMPeriod;
  7365  0E20  0850               	movf	_PWMPeriod,w
  7366  0E21  0025               	movlb	5	; select bank5
  7367  0E22  0098               	movwf	24	;volatile
  7368                           
  7369                           ;main.c: 52:     T6CLKCON = 0b00000001;
  7370  0E23  3001               	movlw	1
  7371  0E24  009C               	movwf	28	;volatile
  7372                           
  7373                           ;main.c: 55:     T6HLT = 0b10100000;
  7374  0E25  30A0               	movlw	160
  7375  0E26  009B               	movwf	27	;volatile
  7376                           
  7377                           ;main.c: 56:     T6RST = 0b00000011;
  7378  0E27  3003               	movlw	3
  7379  0E28  009D               	movwf	29	;volatile
  7380                           
  7381                           ;main.c: 58:     T6CON = 0b11100000;
  7382  0E29  30E0               	movlw	224
  7383  0E2A  009A               	movwf	26	;volatile
  7384  0E2B                     l2895:	
  7385                           
  7386                           ;main.c: 59:     TMR6IE = 1;
  7387  0E2B  002E               	movlb	14	; select bank14
  7388  0E2C  169A               	bsf	26,5	;volatile
  7389  0E2D                     l2897:	
  7390                           
  7391                           ;main.c: 60:     TMR6IF = 0;
  7392  0E2D  1290               	bcf	16,5	;volatile
  7393  0E2E                     l105:	
  7394  0E2E  0008               	return
  7395  0E2F                     __end_of_PwmInit:	
  7396                           
  7397                           	psect	text19
  7398  0EEB                     __ptext19:	
  7399 ;; *************** function _PWMTestFunc *****************
  7400 ;; Defined at:
  7401 ;;		line 472 in file "main.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0, pclath, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7419 ;;Total ram usage:        2 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    4
  7422 ;; This function calls:
  7423 ;;		_PWMButton
  7424 ;; This function is called by:
  7425 ;;		_main
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           
  7430                           ;psect for function _PWMTestFunc
  7431  0EEB                     _PWMTestFunc:	
  7432  0EEB                     l2899:	
  7433                           ;incstack = 0
  7434                           ; Regs used in _PWMTestFunc: [wreg+status,2+status,0+pclath+cstack]
  7435                           
  7436                           
  7437                           ;main.c: 474:     _delay((unsigned long)((3000)*(32000000/4000.0)));
  7438  0EEB  307A               	movlw	122
  7439  0EEC  0020               	movlb	0	; select bank0
  7440  0EED  00A5               	movwf	??_PWMTestFunc+1
  7441  0EEE  30C1               	movlw	193
  7442  0EEF  00A4               	movwf	??_PWMTestFunc
  7443  0EF0  3081               	movlw	129
  7444  0EF1                     u2257:	
  7445  0EF1  0B89               	decfsz	9,f
  7446  0EF2  2EF1               	goto	u2257
  7447  0EF3  0BA4               	decfsz	??_PWMTestFunc,f
  7448  0EF4  2EF1               	goto	u2257
  7449  0EF5  0BA5               	decfsz	??_PWMTestFunc+1,f
  7450  0EF6  2EF1               	goto	u2257
  7451  0EF7  3200               	nop2
  7452  0EF8                     l2901:	
  7453                           
  7454                           ;main.c: 478:         PWMButton(18);
  7455  0EF8  3012               	movlw	18
  7456  0EF9  0020               	movlb	0	; select bank0
  7457  0EFA  00A0               	movwf	PWMButton@value
  7458  0EFB  3000               	movlw	0
  7459  0EFC  00A1               	movwf	PWMButton@value+1
  7460  0EFD  318F  275E  318E   	fcall	_PWMButton
  7461  0F00                     l2903:	
  7462                           
  7463                           ;main.c: 479:         _delay((unsigned long)((3000)*(32000000/4000.0)));
  7464  0F00  307A               	movlw	122
  7465  0F01  0020               	movlb	0	; select bank0
  7466  0F02  00A5               	movwf	??_PWMTestFunc+1
  7467  0F03  30C1               	movlw	193
  7468  0F04  00A4               	movwf	??_PWMTestFunc
  7469  0F05  3081               	movlw	129
  7470  0F06                     u2267:	
  7471  0F06  0B89               	decfsz	9,f
  7472  0F07  2F06               	goto	u2267
  7473  0F08  0BA4               	decfsz	??_PWMTestFunc,f
  7474  0F09  2F06               	goto	u2267
  7475  0F0A  0BA5               	decfsz	??_PWMTestFunc+1,f
  7476  0F0B  2F06               	goto	u2267
  7477  0F0C  3200               	nop2
  7478                           
  7479                           ;main.c: 480:         PWMButton(18);
  7480  0F0D  3012               	movlw	18
  7481  0F0E  0020               	movlb	0	; select bank0
  7482  0F0F  00A0               	movwf	PWMButton@value
  7483  0F10  3000               	movlw	0
  7484  0F11  00A1               	movwf	PWMButton@value+1
  7485  0F12  318F  275E  318E   	fcall	_PWMButton
  7486  0F15                     l2905:	
  7487                           
  7488                           ;main.c: 481:         _delay((unsigned long)((3000)*(32000000/4000.0)));
  7489  0F15  307A               	movlw	122
  7490  0F16  0020               	movlb	0	; select bank0
  7491  0F17  00A5               	movwf	??_PWMTestFunc+1
  7492  0F18  30C1               	movlw	193
  7493  0F19  00A4               	movwf	??_PWMTestFunc
  7494  0F1A  3081               	movlw	129
  7495  0F1B                     u2277:	
  7496  0F1B  0B89               	decfsz	9,f
  7497  0F1C  2F1B               	goto	u2277
  7498  0F1D  0BA4               	decfsz	??_PWMTestFunc,f
  7499  0F1E  2F1B               	goto	u2277
  7500  0F1F  0BA5               	decfsz	??_PWMTestFunc+1,f
  7501  0F20  2F1B               	goto	u2277
  7502  0F21  3200               	nop2
  7503  0F22                     l179:	
  7504  0F22  0008               	return
  7505  0F23                     __end_of_PWMTestFunc:	
  7506                           
  7507                           	psect	text20
  7508  0F5E                     __ptext20:	
  7509 ;; *************** function _PWMButton *****************
  7510 ;; Defined at:
  7511 ;;		line 63 in file "main.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  value           2    0[BANK0 ] int 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7527 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7528 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7529 ;;Total ram usage:        4 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    3
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		_PWMTestFunc
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           
  7540                           ;psect for function _PWMButton
  7541  0F5E                     _PWMButton:	
  7542  0F5E                     l2761:	
  7543                           ;incstack = 0
  7544                           ; Regs used in _PWMButton: [wreg+status,2+status,0]
  7545                           
  7546                           
  7547                           ;main.c: 63: void PWMButton(int value);main.c: 64: {;main.c: 66:     PWMOn = 256 - value
      +                          ;
  7548  0F5E  3000               	movlw	0
  7549  0F5F  0020               	movlb	0	; select bank0
  7550  0F60  00A2               	movwf	??_PWMButton
  7551  0F61  3001               	movlw	1
  7552  0F62  00A3               	movwf	??_PWMButton+1
  7553  0F63  0820               	movf	PWMButton@value,w
  7554  0F64  0222               	subwf	??_PWMButton,w
  7555  0F65  00F5               	movwf	_PWMOn
  7556  0F66  0821               	movf	PWMButton@value+1,w
  7557  0F67  3B23               	subwfb	??_PWMButton+1,w
  7558  0F68  00F6               	movwf	_PWMOn+1
  7559  0F69                     l2763:	
  7560                           
  7561                           ;main.c: 67:     TMR6IE = 0;
  7562  0F69  002E               	movlb	14	; select bank14
  7563  0F6A  129A               	bcf	26,5	;volatile
  7564  0F6B                     l2765:	
  7565                           
  7566                           ;main.c: 68:          if( PORTDbits.RD5 == 1)
  7567  0F6B  0020               	movlb	0	; select bank0
  7568  0F6C  1E8F               	btfss	15,5	;volatile
  7569  0F6D  2F6F               	goto	u1711
  7570  0F6E  2F70               	goto	u1710
  7571  0F6F                     u1711:	
  7572  0F6F  2F76               	goto	l108
  7573  0F70                     u1710:	
  7574  0F70                     l2767:	
  7575                           
  7576                           ;main.c: 69:         {;main.c: 70:             PORTDbits.RD5 = 0;
  7577  0F70  128F               	bcf	15,5	;volatile
  7578  0F71                     l2769:	
  7579                           
  7580                           ;main.c: 71:             T6TMR = PWMPeriod - PWMOn;
  7581  0F71  0875               	movf	_PWMOn,w
  7582  0F72  0250               	subwf	_PWMPeriod,w
  7583  0F73  0025               	movlb	5	; select bank5
  7584  0F74  0098               	movwf	24	;volatile
  7585                           
  7586                           ;main.c: 72:         }
  7587  0F75  2F7A               	goto	l2773
  7588  0F76                     l108:	
  7589                           ;main.c: 73:         else
  7590                           
  7591                           
  7592                           ;main.c: 74:         {;main.c: 75:             PORTDbits.RD5 = 1;
  7593  0F76  168F               	bsf	15,5	;volatile
  7594  0F77                     l2771:	
  7595                           
  7596                           ;main.c: 76:             T6TMR = PWMOn;
  7597  0F77  0875               	movf	_PWMOn,w
  7598  0F78  0025               	movlb	5	; select bank5
  7599  0F79  0098               	movwf	24	;volatile
  7600  0F7A                     l2773:	
  7601                           
  7602                           ;main.c: 78:     TMR6IE = 1;
  7603  0F7A  002E               	movlb	14	; select bank14
  7604  0F7B  169A               	bsf	26,5	;volatile
  7605                           
  7606                           ;main.c: 81:     _delay((unsigned long)((3000)*(32000000/4000.0)));
  7607  0F7C  307A               	movlw	122
  7608  0F7D  0020               	movlb	0	; select bank0
  7609  0F7E  00A3               	movwf	??_PWMButton+1
  7610  0F7F  30C1               	movlw	193
  7611  0F80  00A2               	movwf	??_PWMButton
  7612  0F81  3081               	movlw	129
  7613  0F82                     u2287:	
  7614  0F82  0B89               	decfsz	9,f
  7615  0F83  2F82               	goto	u2287
  7616  0F84  0BA2               	decfsz	??_PWMButton,f
  7617  0F85  2F82               	goto	u2287
  7618  0F86  0BA3               	decfsz	??_PWMButton+1,f
  7619  0F87  2F82               	goto	u2287
  7620  0F88  3200               	nop2
  7621                           
  7622                           ;main.c: 83:     PWMOn = 256 - 167 ;
  7623  0F89  3059               	movlw	89
  7624  0F8A  00F5               	movwf	_PWMOn
  7625  0F8B  3000               	movlw	0
  7626  0F8C  00F6               	movwf	_PWMOn+1
  7627  0F8D                     l2775:	
  7628                           
  7629                           ;main.c: 84:     TMR6IE = 0;
  7630  0F8D  002E               	movlb	14	; select bank14
  7631  0F8E  129A               	bcf	26,5	;volatile
  7632  0F8F                     l2777:	
  7633                           
  7634                           ;main.c: 85:          if( PORTDbits.RD5 == 1)
  7635  0F8F  0020               	movlb	0	; select bank0
  7636  0F90  1E8F               	btfss	15,5	;volatile
  7637  0F91  2F93               	goto	u1721
  7638  0F92  2F94               	goto	u1720
  7639  0F93                     u1721:	
  7640  0F93  2F9A               	goto	l110
  7641  0F94                     u1720:	
  7642  0F94                     l2779:	
  7643                           
  7644                           ;main.c: 86:         {;main.c: 87:             PORTDbits.RD5 = 0;
  7645  0F94  128F               	bcf	15,5	;volatile
  7646  0F95                     l2781:	
  7647                           
  7648                           ;main.c: 88:             T6TMR = PWMPeriod - PWMOn;
  7649  0F95  0875               	movf	_PWMOn,w
  7650  0F96  0250               	subwf	_PWMPeriod,w
  7651  0F97  0025               	movlb	5	; select bank5
  7652  0F98  0098               	movwf	24	;volatile
  7653                           
  7654                           ;main.c: 89:         }
  7655  0F99  2F9E               	goto	l2785
  7656  0F9A                     l110:	
  7657                           ;main.c: 90:         else
  7658                           
  7659                           
  7660                           ;main.c: 91:         {;main.c: 92:             PORTDbits.RD5 = 1;
  7661  0F9A  168F               	bsf	15,5	;volatile
  7662  0F9B                     l2783:	
  7663                           
  7664                           ;main.c: 93:             T6TMR = PWMOn;
  7665  0F9B  0875               	movf	_PWMOn,w
  7666  0F9C  0025               	movlb	5	; select bank5
  7667  0F9D  0098               	movwf	24	;volatile
  7668  0F9E                     l2785:	
  7669                           
  7670                           ;main.c: 95:     TMR6IE = 1;
  7671  0F9E  002E               	movlb	14	; select bank14
  7672  0F9F  169A               	bsf	26,5	;volatile
  7673  0FA0                     l112:	
  7674  0FA0  0008               	return
  7675  0FA1                     __end_of_PWMButton:	
  7676                           
  7677                           	psect	intentry
  7678  0004                     __pintentry:	
  7679 ;; *************** function _PS2Command *****************
  7680 ;; Defined at:
  7681 ;;		line 131 in file "main.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;		None
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  cmd             1    4[COMMON] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7698 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7699 ;;Total ram usage:        3 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    2
  7702 ;; This function calls:
  7703 ;;		_pollController
  7704 ;;		_spiRead
  7705 ;;		_spiWrite
  7706 ;; This function is called by:
  7707 ;;		Interrupt level 1
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711  0004                     _PS2Command:	
  7712                           
  7713                           ;incstack = 0
  7714  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7715                           
  7716                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7717  0005  3180               	pagesel	$
  7718  0006                     i1l2323:	
  7719                           
  7720                           ;main.c: 133:     if (SSP1IF) {
  7721  0006  002E               	movlb	14	; select bank14
  7722  0007  1C0F               	btfss	15,0	;volatile
  7723  0008  280A               	goto	u149_21
  7724  0009  280B               	goto	u149_20
  7725  000A                     u149_21:	
  7726  000A  2987               	goto	i1l121
  7727  000B                     u149_20:	
  7728  000B                     i1l2325:	
  7729                           
  7730                           ;main.c: 135:         char cmd = spiRead();
  7731  000B  318D  25B1  3180   	fcall	_spiRead
  7732  000E  00F2               	movwf	??_PS2Command
  7733  000F  0872               	movf	??_PS2Command,w
  7734  0010  00F4               	movwf	PS2Command@cmd
  7735                           
  7736                           ;main.c: 137:         switch (cmdCounter) {
  7737  0011  2941               	goto	i1l2471
  7738  0012                     i1l2327:	
  7739                           
  7740                           ;main.c: 145:                         if(cmd == 0x80)
  7741  0012  3080               	movlw	128
  7742  0013  0674               	xorwf	PS2Command@cmd,w
  7743  0014  1D03               	btfss	3,2
  7744  0015  2817               	goto	u150_21
  7745  0016  2818               	goto	u150_20
  7746  0017                     u150_21:	
  7747  0017  281A               	goto	i1l126
  7748  0018                     u150_20:	
  7749  0018                     i1l2329:	
  7750                           
  7751                           ;main.c: 146:                             RD4 = 1;
  7752  0018  160F               	bsf	15,4	;volatile
  7753  0019  2951               	goto	i1l2473
  7754  001A                     i1l126:	
  7755                           ;main.c: 147:                         else
  7756                           
  7757                           
  7758                           ;main.c: 148:                             RD4 = 0;
  7759  001A  120F               	bcf	15,4	;volatile
  7760  001B  2951               	goto	i1l2473
  7761  001C                     i1l2331:	
  7762                           
  7763                           ;main.c: 153:                         if (cmd == 0x80)
  7764  001C  3080               	movlw	128
  7765  001D  0674               	xorwf	PS2Command@cmd,w
  7766  001E  1D03               	btfss	3,2
  7767  001F  2821               	goto	u151_21
  7768  0020  2822               	goto	u151_20
  7769  0021                     u151_21:	
  7770  0021  2825               	goto	i1l2335
  7771  0022                     u151_20:	
  7772  0022                     i1l2333:	
  7773                           
  7774                           ;main.c: 154:                             escapeMode = 1;
  7775  0022  01EF               	clrf	_escapeMode
  7776  0023  0AEF               	incf	_escapeMode,f
  7777  0024  2951               	goto	i1l2473
  7778  0025                     i1l2335:	
  7779                           
  7780                           ;main.c: 156:                             escapeMode = 0;
  7781  0025  01EF               	clrf	_escapeMode
  7782  0026  2951               	goto	i1l2473
  7783  0027                     i1l2337:	
  7784                           
  7785                           ;main.c: 161:                         if (cmd == 0x80)
  7786  0027  3080               	movlw	128
  7787  0028  0674               	xorwf	PS2Command@cmd,w
  7788  0029  1D03               	btfss	3,2
  7789  002A  282C               	goto	u152_21
  7790  002B  282D               	goto	u152_20
  7791  002C                     u152_21:	
  7792  002C  2830               	goto	i1l2341
  7793  002D                     u152_20:	
  7794  002D                     i1l2339:	
  7795                           
  7796                           ;main.c: 162:                             analogMode = 1;
  7797  002D  01F9               	clrf	_analogMode
  7798  002E  0AF9               	incf	_analogMode,f
  7799  002F  2951               	goto	i1l2473
  7800  0030                     i1l2341:	
  7801                           
  7802                           ;main.c: 164:                             analogMode = 0;
  7803  0030  01F9               	clrf	_analogMode
  7804  0031  2951               	goto	i1l2473
  7805  0032                     i1l2343:	
  7806                           
  7807                           ;main.c: 169:                         if (cmd == 0x80) {
  7808  0032  3080               	movlw	128
  7809  0033  0674               	xorwf	PS2Command@cmd,w
  7810  0034  1D03               	btfss	3,2
  7811  0035  2837               	goto	u153_21
  7812  0036  2838               	goto	u153_20
  7813  0037                     u153_21:	
  7814  0037  2842               	goto	i1l2353
  7815  0038                     u153_20:	
  7816  0038                     i1l2345:	
  7817                           
  7818                           ;main.c: 170:                             response[2] = 0x00;
  7819  0038  01DC               	clrf	_response+2
  7820                           
  7821                           ;main.c: 171:                             response[3] = 0x00;
  7822  0039  01DD               	clrf	_response+3
  7823                           
  7824                           ;main.c: 172:                             response[4] = 0x00;
  7825  003A  01DE               	clrf	_response+4
  7826  003B                     i1l2347:	
  7827                           
  7828                           ;main.c: 173:                             response[5] = 0x60;
  7829  003B  3060               	movlw	96
  7830  003C  00F2               	movwf	??_PS2Command
  7831  003D  0872               	movf	??_PS2Command,w
  7832  003E  00DF               	movwf	_response+5
  7833  003F                     i1l2349:	
  7834                           
  7835                           ;main.c: 174:                             response[6] = 0x00;
  7836  003F  01E0               	clrf	_response+6
  7837  0040                     i1l2351:	
  7838                           
  7839                           ;main.c: 175:                             response[7] = 0x00;
  7840  0040  01E1               	clrf	_response+7
  7841                           
  7842                           ;main.c: 176:                         } else {
  7843  0041  2951               	goto	i1l2473
  7844  0042                     i1l2353:	
  7845                           
  7846                           ;main.c: 177:                             response[2] = 0x00;
  7847  0042  01DC               	clrf	_response+2
  7848                           
  7849                           ;main.c: 178:                             response[3] = 0x00;
  7850  0043  01DD               	clrf	_response+3
  7851                           
  7852                           ;main.c: 179:                             response[4] = 0x00;
  7853  0044  01DE               	clrf	_response+4
  7854  0045                     i1l2355:	
  7855                           
  7856                           ;main.c: 180:                             response[5] = 0x20;
  7857  0045  3020               	movlw	32
  7858  0046  00F2               	movwf	??_PS2Command
  7859  0047  0872               	movf	??_PS2Command,w
  7860  0048  00DF               	movwf	_response+5
  7861  0049  283F               	goto	i1l2349
  7862  004A                     i1l2363:	
  7863  004A  0020               	movlb	0	; select bank0
  7864  004B  086E               	movf	_previousCmd,w
  7865  004C  00F2               	movwf	??_PS2Command
  7866  004D  01F3               	clrf	??_PS2Command+1
  7867                           
  7868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7869                           ; Switch size 1, requested type "simple"
  7870                           ; Number of cases is 1, Range of values is 0 to 0
  7871                           ; switch strategies available:
  7872                           ; Name         Instructions Cycles
  7873                           ; simple_byte            4     3 (average)
  7874                           ; direct_byte            8     6 (fixed)
  7875                           ; jumptable            260     6 (fixed)
  7876                           ;	Chosen strategy is simple_byte
  7877  004E  0873               	movf	??_PS2Command+1,w
  7878  004F  3A00               	xorlw	0	; case 0
  7879  0050  1903               	skipnz
  7880  0051  2853               	goto	i1l3263
  7881  0052  2951               	goto	i1l2473
  7882  0053                     i1l3263:	
  7883                           
  7884                           ; Switch size 1, requested type "simple"
  7885                           ; Number of cases is 5, Range of values is 34 to 242
  7886                           ; switch strategies available:
  7887                           ; Name         Instructions Cycles
  7888                           ; simple_byte           16     9 (average)
  7889                           ; jumptable            263     9 (fixed)
  7890                           ;	Chosen strategy is simple_byte
  7891  0053  0872               	movf	??_PS2Command,w
  7892  0054  3A22               	xorlw	34	; case 34
  7893  0055  1903               	skipnz
  7894  0056  2827               	goto	i1l2337
  7895  0057  3A10               	xorlw	16	; case 50
  7896  0058  1903               	skipnz
  7897  0059  2832               	goto	i1l2343
  7898  005A  3A70               	xorlw	112	; case 66
  7899  005B  1903               	skipnz
  7900  005C  2812               	goto	i1l2327
  7901  005D  3A80               	xorlw	128	; case 194
  7902  005E  1903               	skipnz
  7903  005F  281C               	goto	i1l2331
  7904  0060  3A30               	xorlw	48	; case 242
  7905  0061  1903               	skipnz
  7906  0062  2951               	goto	i1l2473
  7907  0063  2951               	goto	i1l2473
  7908  0064                     i1l2365:	
  7909  0064  2951               	goto	i1l2473
  7910  0065                     i1l2371:	
  7911  0065  0020               	movlb	0	; select bank0
  7912  0066  086E               	movf	_previousCmd,w
  7913  0067  00F2               	movwf	??_PS2Command
  7914  0068  01F3               	clrf	??_PS2Command+1
  7915                           
  7916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7917                           ; Switch size 1, requested type "simple"
  7918                           ; Number of cases is 1, Range of values is 0 to 0
  7919                           ; switch strategies available:
  7920                           ; Name         Instructions Cycles
  7921                           ; simple_byte            4     3 (average)
  7922                           ; direct_byte            8     6 (fixed)
  7923                           ; jumptable            260     6 (fixed)
  7924                           ;	Chosen strategy is simple_byte
  7925  0069  0873               	movf	??_PS2Command+1,w
  7926  006A  3A00               	xorlw	0	; case 0
  7927  006B  1903               	skipnz
  7928  006C  286E               	goto	i1l3265
  7929  006D  2951               	goto	i1l2473
  7930  006E                     i1l3265:	
  7931                           
  7932                           ; Switch size 1, requested type "simple"
  7933                           ; Number of cases is 2, Range of values is 66 to 242
  7934                           ; switch strategies available:
  7935                           ; Name         Instructions Cycles
  7936                           ; simple_byte            7     4 (average)
  7937                           ; jumptable            263     9 (fixed)
  7938                           ;	Chosen strategy is simple_byte
  7939  006E  0872               	movf	??_PS2Command,w
  7940  006F  3A42               	xorlw	66	; case 66
  7941  0070  1903               	skipnz
  7942  0071  2864               	goto	i1l2365
  7943  0072  3AB0               	xorlw	176	; case 242
  7944  0073  1903               	skipnz
  7945  0074  2951               	goto	i1l2473
  7946  0075  2951               	goto	i1l2473
  7947  0076                     i1l2373:	
  7948                           
  7949                           ;main.c: 229:                         if (analogMode) {
  7950  0076  0879               	movf	_analogMode,w
  7951  0077  1903               	btfsc	3,2
  7952  0078  287A               	goto	u154_21
  7953  0079  287B               	goto	u154_20
  7954  007A                     u154_21:	
  7955  007A  288F               	goto	i1l2381
  7956  007B                     u154_20:	
  7957  007B                     i1l2375:	
  7958                           
  7959                           ;main.c: 230:                             response[2] = 0xFF;
  7960  007B  30FF               	movlw	255
  7961  007C  00F2               	movwf	??_PS2Command
  7962  007D  0872               	movf	??_PS2Command,w
  7963  007E  0020               	movlb	0	; select bank0
  7964  007F  00DC               	movwf	_response+2
  7965                           
  7966                           ;main.c: 231:                             response[3] = 0xFF;
  7967  0080  30FF               	movlw	255
  7968  0081  00F2               	movwf	??_PS2Command
  7969  0082  0872               	movf	??_PS2Command,w
  7970  0083  00DD               	movwf	_response+3
  7971                           
  7972                           ;main.c: 232:                             response[4] = 0xC0;
  7973  0084  30C0               	movlw	192
  7974  0085  00F2               	movwf	??_PS2Command
  7975  0086  0872               	movf	??_PS2Command,w
  7976  0087  00DE               	movwf	_response+4
  7977  0088                     i1l2377:	
  7978                           
  7979                           ;main.c: 233:                             response[5] = 0x00;
  7980  0088  01DF               	clrf	_response+5
  7981  0089                     i1l2379:	
  7982                           
  7983                           ;main.c: 234:                             response[6] = 0x00;
  7984  0089  01E0               	clrf	_response+6
  7985                           
  7986                           ;main.c: 235:                             response[7] = 0x5A;
  7987  008A  305A               	movlw	90
  7988  008B  00F2               	movwf	??_PS2Command
  7989  008C  0872               	movf	??_PS2Command,w
  7990  008D  00E1               	movwf	_response+7
  7991                           
  7992                           ;main.c: 236:                         } else {
  7993  008E  2951               	goto	i1l2473
  7994  008F                     i1l2381:	
  7995                           
  7996                           ;main.c: 237:                             response[2] = 0x00;
  7997  008F  0020               	movlb	0	; select bank0
  7998  0090  01DC               	clrf	_response+2
  7999                           
  8000                           ;main.c: 238:                             response[3] = 0x00;
  8001  0091  01DD               	clrf	_response+3
  8002                           
  8003                           ;main.c: 239:                             response[4] = 0x00;
  8004  0092  01DE               	clrf	_response+4
  8005                           
  8006                           ;main.c: 240:                             response[5] = 0x00;
  8007  0093  01DF               	clrf	_response+5
  8008                           
  8009                           ;main.c: 241:                             response[6] = 0x00;
  8010  0094  01E0               	clrf	_response+6
  8011  0095                     i1l2383:	
  8012                           
  8013                           ;main.c: 242:                             response[7] = 0x5A;
  8014  0095  305A               	movlw	90
  8015  0096  00F2               	movwf	??_PS2Command
  8016  0097  0872               	movf	??_PS2Command,w
  8017  0098  00E1               	movwf	_response+7
  8018  0099  2951               	goto	i1l2473
  8019  009A                     i1l2385:	
  8020                           
  8021                           ;main.c: 253:                         if (analogMode) {
  8022  009A  0879               	movf	_analogMode,w
  8023  009B  1903               	btfsc	3,2
  8024  009C  289E               	goto	u155_21
  8025  009D  289F               	goto	u155_20
  8026  009E                     u155_21:	
  8027  009E  288F               	goto	i1l2381
  8028  009F                     u155_20:	
  8029  009F  287B               	goto	i1l2375
  8030  00A0                     i1l2397:	
  8031                           
  8032                           ;main.c: 278:                         pollController(response);
  8033  00A0  305A               	movlw	(low (_response| 0))& (0+255)
  8034  00A1  3186  2668  3180   	fcall	_pollController
  8035  00A4                     i1l2399:	
  8036                           
  8037                           ;main.c: 279:                         previousCmd = cmd;
  8038  00A4  0874               	movf	PS2Command@cmd,w
  8039  00A5  00F2               	movwf	??_PS2Command
  8040  00A6  0872               	movf	??_PS2Command,w
  8041  00A7  0020               	movlb	0	; select bank0
  8042  00A8  00EE               	movwf	_previousCmd
  8043                           
  8044                           ;main.c: 282:                         break;
  8045  00A9  2951               	goto	i1l2473
  8046  00AA                     i1l2401:	
  8047                           
  8048                           ;main.c: 290:                         pollController(response);
  8049  00AA  305A               	movlw	(low (_response| 0))& (0+255)
  8050  00AB  3186  2668  3180   	fcall	_pollController
  8051  00AE  28A4               	goto	i1l2399
  8052  00AF                     i1l2405:	
  8053                           
  8054                           ;main.c: 300:                         response[2] = 0x00;
  8055  00AF  0020               	movlb	0	; select bank0
  8056  00B0  01DC               	clrf	_response+2
  8057                           
  8058                           ;main.c: 301:                         response[3] = 0x00;
  8059  00B1  01DD               	clrf	_response+3
  8060                           
  8061                           ;main.c: 302:                         response[4] = 0x00;
  8062  00B2  01DE               	clrf	_response+4
  8063                           
  8064                           ;main.c: 303:                         response[5] = 0x00;
  8065  00B3  01DF               	clrf	_response+5
  8066                           
  8067                           ;main.c: 304:                         response[6] = 0x00;
  8068  00B4  01E0               	clrf	_response+6
  8069                           
  8070                           ;main.c: 305:                         response[7] = 0x00;
  8071  00B5  01E1               	clrf	_response+7
  8072  00B6  28A4               	goto	i1l2399
  8073  00B7                     i1l2409:	
  8074                           
  8075                           ;main.c: 319:                         response[2] = 0xC0;
  8076  00B7  30C0               	movlw	192
  8077  00B8  00F2               	movwf	??_PS2Command
  8078  00B9  0872               	movf	??_PS2Command,w
  8079  00BA  0020               	movlb	0	; select bank0
  8080  00BB  00DC               	movwf	_response+2
  8081                           
  8082                           ;main.c: 320:                         response[3] = 0x40;
  8083  00BC  3040               	movlw	64
  8084  00BD  00F2               	movwf	??_PS2Command
  8085  00BE  0872               	movf	??_PS2Command,w
  8086  00BF  00DD               	movwf	_response+3
  8087  00C0                     i1l2411:	
  8088                           
  8089                           ;main.c: 322:                         if (analogMode)
  8090  00C0  0879               	movf	_analogMode,w
  8091  00C1  1903               	btfsc	3,2
  8092  00C2  28C4               	goto	u156_21
  8093  00C3  28C5               	goto	u156_20
  8094  00C4                     u156_21:	
  8095  00C4  28CA               	goto	i1l2415
  8096  00C5                     u156_20:	
  8097  00C5                     i1l2413:	
  8098                           
  8099                           ;main.c: 323:                             response[4] = 0x80;
  8100  00C5  3080               	movlw	128
  8101  00C6  00F2               	movwf	??_PS2Command
  8102  00C7  0872               	movf	??_PS2Command,w
  8103  00C8  00DE               	movwf	_response+4
  8104  00C9  28CB               	goto	i1l2417
  8105  00CA                     i1l2415:	
  8106                           
  8107                           ;main.c: 325:                             response[4] = 0x00;
  8108  00CA  01DE               	clrf	_response+4
  8109  00CB                     i1l2417:	
  8110                           
  8111                           ;main.c: 327:                         response[5] = 0x40;
  8112  00CB  3040               	movlw	64
  8113  00CC  00F2               	movwf	??_PS2Command
  8114  00CD  0872               	movf	??_PS2Command,w
  8115  00CE  00DF               	movwf	_response+5
  8116  00CF                     i1l2419:	
  8117                           
  8118                           ;main.c: 328:                         response[6] = 0x80;
  8119  00CF  3080               	movlw	128
  8120  00D0  00F2               	movwf	??_PS2Command
  8121  00D1  0872               	movf	??_PS2Command,w
  8122  00D2  00E0               	movwf	_response+6
  8123                           
  8124                           ;main.c: 329:                         response[7] = 0x00;
  8125  00D3  01E1               	clrf	_response+7
  8126                           
  8127                           ;main.c: 332:                         break;
  8128  00D4  2951               	goto	i1l2473
  8129  00D5                     i1l2421:	
  8130                           
  8131                           ;main.c: 340:                         response[2] = 0x00;
  8132  00D5  0020               	movlb	0	; select bank0
  8133  00D6  01DC               	clrf	_response+2
  8134                           
  8135                           ;main.c: 341:                         response[3] = 0x00;
  8136  00D7  01DD               	clrf	_response+3
  8137  00D8                     i1l2423:	
  8138                           
  8139                           ;main.c: 342:                         response[4] = 0x80;
  8140  00D8  3080               	movlw	128
  8141  00D9  00F2               	movwf	??_PS2Command
  8142  00DA  0872               	movf	??_PS2Command,w
  8143  00DB  00DE               	movwf	_response+4
  8144  00DC                     i1l2425:	
  8145                           
  8146                           ;main.c: 343:                         response[5] = 0x80;
  8147  00DC  3080               	movlw	128
  8148  00DD  00F2               	movwf	??_PS2Command
  8149  00DE  0872               	movf	??_PS2Command,w
  8150  00DF  00DF               	movwf	_response+5
  8151  00E0                     i1l2427:	
  8152                           
  8153                           ;main.c: 344:                         response[6] = 0x80;
  8154  00E0  3080               	movlw	128
  8155  00E1  00F2               	movwf	??_PS2Command
  8156  00E2  0872               	movf	??_PS2Command,w
  8157  00E3  00E0               	movwf	_response+6
  8158  00E4                     i1l2429:	
  8159                           
  8160                           ;main.c: 345:                         response[7] = 0x50;
  8161  00E4  3050               	movlw	80
  8162  00E5  00F2               	movwf	??_PS2Command
  8163  00E6  0872               	movf	??_PS2Command,w
  8164  00E7  00E1               	movwf	_response+7
  8165                           
  8166                           ;main.c: 347:                         break;
  8167  00E8  2951               	goto	i1l2473
  8168  00E9                     i1l2431:	
  8169                           
  8170                           ;main.c: 356:                         response[2] = 0x00;
  8171  00E9  0020               	movlb	0	; select bank0
  8172  00EA  01DC               	clrf	_response+2
  8173                           
  8174                           ;main.c: 357:                         response[3] = 0x00;
  8175  00EB  01DD               	clrf	_response+3
  8176  00EC                     i1l2433:	
  8177                           
  8178                           ;main.c: 358:                         response[4] = 0x40;
  8179  00EC  3040               	movlw	64
  8180  00ED  00F2               	movwf	??_PS2Command
  8181  00EE  0872               	movf	??_PS2Command,w
  8182  00EF  00DE               	movwf	_response+4
  8183  00F0                     i1l2435:	
  8184                           
  8185                           ;main.c: 359:                         response[5] = 0x00;
  8186  00F0  01DF               	clrf	_response+5
  8187                           
  8188                           ;main.c: 360:                         response[6] = 0x80;
  8189  00F1  3080               	movlw	128
  8190  00F2  00F2               	movwf	??_PS2Command
  8191  00F3  0872               	movf	??_PS2Command,w
  8192  00F4  00E0               	movwf	_response+6
  8193  00F5  2840               	goto	i1l2351
  8194  00F6                     i1l2439:	
  8195                           
  8196                           ;main.c: 373:                         response[2] = 0x00;
  8197  00F6  0020               	movlb	0	; select bank0
  8198  00F7  01DC               	clrf	_response+2
  8199                           
  8200                           ;main.c: 374:                         response[3] = 0x00;
  8201  00F8  01DD               	clrf	_response+3
  8202                           
  8203                           ;main.c: 375:                         response[4] = 0x00;
  8204  00F9  01DE               	clrf	_response+4
  8205  00FA                     i1l2441:	
  8206                           
  8207                           ;main.c: 376:                         response[5] = 0x20;
  8208  00FA  3020               	movlw	32
  8209  00FB  00F2               	movwf	??_PS2Command
  8210  00FC  0872               	movf	??_PS2Command,w
  8211  00FD  00DF               	movwf	_response+5
  8212  00FE                     i1l2443:	
  8213                           
  8214                           ;main.c: 377:                         response[6] = 0x00;
  8215  00FE  01E0               	clrf	_response+6
  8216  00FF                     i1l2445:	
  8217                           
  8218                           ;main.c: 378:                         response[7] = 0x00;
  8219  00FF  01E1               	clrf	_response+7
  8220  0100  28A4               	goto	i1l2399
  8221  0101                     i1l2449:	
  8222                           
  8223                           ;main.c: 392:                         response[2] = 0x00;
  8224  0101  0020               	movlb	0	; select bank0
  8225  0102  01DC               	clrf	_response+2
  8226  0103                     i1l2451:	
  8227                           
  8228                           ;main.c: 393:                         response[3] = 0x01;
  8229  0103  01DD               	clrf	_response+3
  8230  0104  0ADD               	incf	_response+3,f
  8231  0105                     i1l2453:	
  8232                           
  8233                           ;main.c: 394:                         response[4] = 0xFF;
  8234  0105  30FF               	movlw	255
  8235  0106  00F2               	movwf	??_PS2Command
  8236  0107  0872               	movf	??_PS2Command,w
  8237  0108  00DE               	movwf	_response+4
  8238  0109                     i1l2455:	
  8239                           
  8240                           ;main.c: 395:                         response[5] = 0xFF;
  8241  0109  30FF               	movlw	255
  8242  010A  00F2               	movwf	??_PS2Command
  8243  010B  0872               	movf	??_PS2Command,w
  8244  010C  00DF               	movwf	_response+5
  8245  010D                     i1l2457:	
  8246                           
  8247                           ;main.c: 396:                         response[6] = 0xFF;
  8248  010D  30FF               	movlw	255
  8249  010E  00F2               	movwf	??_PS2Command
  8250  010F  0872               	movf	??_PS2Command,w
  8251  0110  00E0               	movwf	_response+6
  8252  0111                     i1l2459:	
  8253                           
  8254                           ;main.c: 397:                         response[7] = 0xFF;
  8255  0111  30FF               	movlw	255
  8256  0112  00F2               	movwf	??_PS2Command
  8257  0113  0872               	movf	??_PS2Command,w
  8258  0114  00E1               	movwf	_response+7
  8259                           
  8260                           ;main.c: 399:                         break;
  8261  0115  2951               	goto	i1l2473
  8262  0116                     i1l2467:	
  8263  0116  0874               	movf	PS2Command@cmd,w
  8264  0117  00F2               	movwf	??_PS2Command
  8265  0118  01F3               	clrf	??_PS2Command+1
  8266                           
  8267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8268                           ; Switch size 1, requested type "simple"
  8269                           ; Number of cases is 1, Range of values is 0 to 0
  8270                           ; switch strategies available:
  8271                           ; Name         Instructions Cycles
  8272                           ; simple_byte            4     3 (average)
  8273                           ; direct_byte            8     6 (fixed)
  8274                           ; jumptable            260     6 (fixed)
  8275                           ;	Chosen strategy is simple_byte
  8276  0119  0873               	movf	??_PS2Command+1,w
  8277  011A  3A00               	xorlw	0	; case 0
  8278  011B  1903               	skipnz
  8279  011C  291E               	goto	i1l3267
  8280  011D  2951               	goto	i1l2473
  8281  011E                     i1l3267:	
  8282                           
  8283                           ; Switch size 1, requested type "simple"
  8284                           ; Number of cases is 11, Range of values is 2 to 242
  8285                           ; switch strategies available:
  8286                           ; Name         Instructions Cycles
  8287                           ; simple_byte           34    18 (average)
  8288                           ; jumptable            263     9 (fixed)
  8289                           ;	Chosen strategy is simple_byte
  8290  011E  0872               	movf	??_PS2Command,w
  8291  011F  3A02               	xorlw	2	; case 2
  8292  0120  1903               	skipnz
  8293  0121  2876               	goto	i1l2373
  8294  0122  3A10               	xorlw	16	; case 18
  8295  0123  1903               	skipnz
  8296  0124  289A               	goto	i1l2385
  8297  0125  3A30               	xorlw	48	; case 34
  8298  0126  1903               	skipnz
  8299  0127  28AF               	goto	i1l2405
  8300  0128  3A10               	xorlw	16	; case 50
  8301  0129  1903               	skipnz
  8302  012A  28F6               	goto	i1l2439
  8303  012B  3A70               	xorlw	112	; case 66
  8304  012C  1903               	skipnz
  8305  012D  28A0               	goto	i1l2397
  8306  012E  3A20               	xorlw	32	; case 98
  8307  012F  1903               	skipnz
  8308  0130  28D5               	goto	i1l2421
  8309  0131  3AC0               	xorlw	192	; case 162
  8310  0132  1903               	skipnz
  8311  0133  28B7               	goto	i1l2409
  8312  0134  3A10               	xorlw	16	; case 178
  8313  0135  1903               	skipnz
  8314  0136  2901               	goto	i1l2449
  8315  0137  3A70               	xorlw	112	; case 194
  8316  0138  1903               	skipnz
  8317  0139  28AA               	goto	i1l2401
  8318  013A  3A20               	xorlw	32	; case 226
  8319  013B  1903               	skipnz
  8320  013C  28E9               	goto	i1l2431
  8321  013D  3A10               	xorlw	16	; case 242
  8322  013E  1903               	skipnz
  8323  013F  288F               	goto	i1l2381
  8324  0140  2951               	goto	i1l2473
  8325  0141                     i1l2471:	
  8326  0141  0877               	movf	_cmdCounter,w
  8327  0142  00F2               	movwf	??_PS2Command
  8328  0143  01F3               	clrf	??_PS2Command+1
  8329                           
  8330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8331                           ; Switch size 1, requested type "simple"
  8332                           ; Number of cases is 1, Range of values is 0 to 0
  8333                           ; switch strategies available:
  8334                           ; Name         Instructions Cycles
  8335                           ; simple_byte            4     3 (average)
  8336                           ; direct_byte            8     6 (fixed)
  8337                           ; jumptable            260     6 (fixed)
  8338                           ;	Chosen strategy is simple_byte
  8339  0144  0873               	movf	??_PS2Command+1,w
  8340  0145  3A00               	xorlw	0	; case 0
  8341  0146  1903               	skipnz
  8342  0147  2949               	goto	i1l3269
  8343  0148  2916               	goto	i1l2467
  8344  0149                     i1l3269:	
  8345                           
  8346                           ; Switch size 1, requested type "simple"
  8347                           ; Number of cases is 2, Range of values is 3 to 4
  8348                           ; switch strategies available:
  8349                           ; Name         Instructions Cycles
  8350                           ; simple_byte            7     4 (average)
  8351                           ; direct_byte           13     9 (fixed)
  8352                           ; jumptable            263     9 (fixed)
  8353                           ;	Chosen strategy is simple_byte
  8354  0149  0872               	movf	??_PS2Command,w
  8355  014A  3A03               	xorlw	3	; case 3
  8356  014B  1903               	skipnz
  8357  014C  284A               	goto	i1l2363
  8358  014D  3A07               	xorlw	7	; case 4
  8359  014E  1903               	skipnz
  8360  014F  2865               	goto	i1l2371
  8361  0150  2916               	goto	i1l2467
  8362  0151                     i1l2473:	
  8363                           
  8364                           ;main.c: 424:         if (escapeMode) {
  8365  0151  0020               	movlb	0	; select bank0
  8366  0152  086F               	movf	_escapeMode,w
  8367  0153  1903               	btfsc	3,2
  8368  0154  2956               	goto	u157_21
  8369  0155  2957               	goto	u157_20
  8370  0156                     u157_21:	
  8371  0156  295C               	goto	i1l2477
  8372  0157                     u157_20:	
  8373  0157                     i1l2475:	
  8374                           
  8375                           ;main.c: 425:             response[0] = 0xCF;
  8376  0157  30CF               	movlw	207
  8377  0158  00F2               	movwf	??_PS2Command
  8378  0159  0872               	movf	??_PS2Command,w
  8379  015A  00DA               	movwf	_response
  8380                           
  8381                           ;main.c: 426:         } else {
  8382  015B  296A               	goto	i1l2483
  8383  015C                     i1l2477:	
  8384                           
  8385                           ;main.c: 428:             if (analogMode)
  8386  015C  0879               	movf	_analogMode,w
  8387  015D  1903               	btfsc	3,2
  8388  015E  2960               	goto	u158_21
  8389  015F  2961               	goto	u158_20
  8390  0160                     u158_21:	
  8391  0160  2966               	goto	i1l2481
  8392  0161                     u158_20:	
  8393  0161                     i1l2479:	
  8394                           
  8395                           ;main.c: 429:                 response[0] = 0x9E;
  8396  0161  309E               	movlw	158
  8397  0162  00F2               	movwf	??_PS2Command
  8398  0163  0872               	movf	??_PS2Command,w
  8399  0164  00DA               	movwf	_response
  8400  0165  296A               	goto	i1l2483
  8401  0166                     i1l2481:	
  8402                           
  8403                           ;main.c: 431:                 response[0] = 0x82;
  8404  0166  3082               	movlw	130
  8405  0167  00F2               	movwf	??_PS2Command
  8406  0168  0872               	movf	??_PS2Command,w
  8407  0169  00DA               	movwf	_response
  8408  016A                     i1l2483:	
  8409                           
  8410                           ;main.c: 437:         spiWrite(response[cmdCounter]);
  8411  016A  0877               	movf	_cmdCounter,w
  8412  016B  3E5A               	addlw	(low (_response| 0))& (0+255)
  8413  016C  0086               	movwf	6
  8414  016D  0187               	clrf	7
  8415  016E  0801               	movf	1,w
  8416  016F  318D  25A6  3180   	fcall	_spiWrite
  8417  0172                     i1l2485:	
  8418                           
  8419                           ;main.c: 440:         if (cmdCounter < responseLength) {
  8420  0172  0020               	movlb	0	; select bank0
  8421  0173  0852               	movf	_responseLength,w
  8422  0174  0277               	subwf	_cmdCounter,w
  8423  0175  1803               	skipnc
  8424  0176  2978               	goto	u159_21
  8425  0177  2979               	goto	u159_20
  8426  0178                     u159_21:	
  8427  0178  297D               	goto	i1l2489
  8428  0179                     u159_20:	
  8429  0179                     i1l2487:	
  8430                           
  8431                           ;main.c: 441:             cmdCounter++;
  8432  0179  3001               	movlw	1
  8433  017A  00F2               	movwf	??_PS2Command
  8434  017B  0872               	movf	??_PS2Command,w
  8435  017C  07F7               	addwf	_cmdCounter,f
  8436  017D                     i1l2489:	
  8437                           
  8438                           ;main.c: 445:         RA4 = 0;
  8439  017D  120C               	bcf	12,4	;volatile
  8440  017E                     i1l2491:	
  8441                           
  8442                           ;main.c: 446:         _delay((unsigned long)((1)*(32000000/4000000.0)));
  8443  017E  3200               	nop2	;2 cycle nop
  8444  017F  3200               	nop2	;2 cycle nop
  8445  0180  3200               	nop2	;2 cycle nop
  8446  0181  3200               	nop2	;2 cycle nop
  8447  0182                     i1l2493:	
  8448                           
  8449                           ;main.c: 447:         RA4 = 1;
  8450  0182  0020               	movlb	0	; select bank0
  8451  0183  160C               	bsf	12,4	;volatile
  8452  0184                     i1l2495:	
  8453                           
  8454                           ;main.c: 449:         SSP1IF = 0;
  8455  0184  002E               	movlb	14	; select bank14
  8456  0185  100F               	bcf	15,0	;volatile
  8457                           
  8458                           ;main.c: 451:     }
  8459  0186  299C               	goto	i1l176
  8460  0187                     i1l121:	
  8461                           ;main.c: 452:     else if(TMR6IF)
  8462                           
  8463  0187  1E90               	btfss	16,5	;volatile
  8464  0188  298A               	goto	u160_21
  8465  0189  298B               	goto	u160_20
  8466  018A                     u160_21:	
  8467  018A  299C               	goto	i1l176
  8468  018B                     u160_20:	
  8469  018B                     i1l2497:	
  8470                           
  8471                           ;main.c: 453:     {;main.c: 456:         if( PORTDbits.RD5 == 1)
  8472  018B  0020               	movlb	0	; select bank0
  8473  018C  1E8F               	btfss	15,5	;volatile
  8474  018D  298F               	goto	u161_21
  8475  018E  2990               	goto	u161_20
  8476  018F                     u161_21:	
  8477  018F  2996               	goto	i1l174
  8478  0190                     u161_20:	
  8479  0190                     i1l2499:	
  8480                           
  8481                           ;main.c: 457:         {;main.c: 458:             PORTDbits.RD5 = 0;
  8482  0190  128F               	bcf	15,5	;volatile
  8483  0191                     i1l2501:	
  8484                           
  8485                           ;main.c: 459:             T6TMR = PWMPeriod - PWMOn;
  8486  0191  0875               	movf	_PWMOn,w
  8487  0192  0250               	subwf	_PWMPeriod,w
  8488  0193  0025               	movlb	5	; select bank5
  8489  0194  0098               	movwf	24	;volatile
  8490                           
  8491                           ;main.c: 460:         }
  8492  0195  299A               	goto	i1l2505
  8493  0196                     i1l174:	
  8494                           ;main.c: 461:         else
  8495                           
  8496                           
  8497                           ;main.c: 462:         {;main.c: 463:             PORTDbits.RD5 = 1;
  8498  0196  168F               	bsf	15,5	;volatile
  8499  0197                     i1l2503:	
  8500                           
  8501                           ;main.c: 464:             T6TMR = PWMOn;
  8502  0197  0875               	movf	_PWMOn,w
  8503  0198  0025               	movlb	5	; select bank5
  8504  0199  0098               	movwf	24	;volatile
  8505  019A                     i1l2505:	
  8506                           
  8507                           ;main.c: 466:         TMR6IF = 0;
  8508  019A  002E               	movlb	14	; select bank14
  8509  019B  1290               	bcf	16,5	;volatile
  8510  019C                     i1l176:	
  8511  019C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8512  019D  0009               	retfie
  8513  019E                     __end_of_PS2Command:	
  8514                           
  8515                           	psect	text22
  8516  0DA6                     __ptext22:	
  8517 ;; *************** function _spiWrite *****************
  8518 ;; Defined at:
  8519 ;;		line 32 in file "Spi.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  dat             1    wreg     unsigned char 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  dat             1    0[COMMON] unsigned char 
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      void 
  8526 ;; Registers used:
  8527 ;;		wreg
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8537 ;;Total ram usage:        1 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_PS2Command
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _spiWrite
  8548  0DA6                     _spiWrite:	
  8549                           
  8550                           ;incstack = 0
  8551                           ; Regs used in _spiWrite: [wreg]
  8552                           ;spiWrite@dat stored from wreg
  8553  0DA6  00F0               	movwf	spiWrite@dat
  8554  0DA7                     i1l2161:	
  8555                           
  8556                           ;Spi.c: 32: void spiWrite(char dat);Spi.c: 33: {;Spi.c: 34:     SSP1BUF = dat;
  8557  0DA7  0870               	movf	spiWrite@dat,w
  8558  0DA8  0023               	movlb	3	; select bank3
  8559  0DA9  008C               	movwf	12	;volatile
  8560  0DAA                     i1l439:	
  8561  0DAA  0008               	return
  8562  0DAB                     __end_of_spiWrite:	
  8563                           
  8564                           	psect	text23
  8565  0DB1                     __ptext23:	
  8566 ;; *************** function _spiRead *****************
  8567 ;; Defined at:
  8568 ;;		line 37 in file "Spi.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      unsigned char 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0, pclath, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8586 ;;Total ram usage:        0 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    1
  8589 ;; This function calls:
  8590 ;;		_spiReceiveWait
  8591 ;; This function is called by:
  8592 ;;		_PS2Command
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           
  8597                           ;psect for function _spiRead
  8598  0DB1                     _spiRead:	
  8599  0DB1                     i1l2155:	
  8600                           ;incstack = 0
  8601                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8602                           
  8603                           
  8604                           ;Spi.c: 39:     spiReceiveWait();
  8605  0DB1  318D  25AB  318D   	fcall	_spiReceiveWait
  8606  0DB4                     i1l2157:	
  8607                           
  8608                           ;Spi.c: 40:     return(SSP1BUF);
  8609  0DB4  0023               	movlb	3	; select bank3
  8610  0DB5  080C               	movf	12,w	;volatile
  8611  0DB6                     i1l442:	
  8612  0DB6  0008               	return
  8613  0DB7                     __end_of_spiRead:	
  8614                           
  8615                           	psect	text24
  8616  0DAB                     __ptext24:	
  8617 ;; *************** function _spiReceiveWait *****************
  8618 ;; Defined at:
  8619 ;;		line 27 in file "Spi.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		None
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_spiRead
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           
  8647                           ;psect for function _spiReceiveWait
  8648  0DAB                     _spiReceiveWait:	
  8649  0DAB                     i1l2103:	
  8650                           ;incstack = 0
  8651                           ; Regs used in _spiReceiveWait: []
  8652                           
  8653  0DAB                     i1l433:	
  8654                           ;Spi.c: 29:     while ( !SSP1STATbits.BF );
  8655                           
  8656  0DAB  0023               	movlb	3	; select bank3
  8657  0DAC  1C0F               	btfss	15,0	;volatile
  8658  0DAD  2DAF               	goto	u126_21
  8659  0DAE  2DB0               	goto	u126_20
  8660  0DAF                     u126_21:	
  8661  0DAF  2DAB               	goto	i1l433
  8662  0DB0                     u126_20:	
  8663  0DB0                     i1l436:	
  8664  0DB0  0008               	return
  8665  0DB1                     __end_of_spiReceiveWait:	
  8666                           
  8667                           	psect	text25
  8668  0668                     __ptext25:	
  8669 ;; *************** function _pollController *****************
  8670 ;; Defined at:
  8671 ;;		line 98 in file "main.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  response        1    wreg     PTR unsigned char 
  8674 ;;		 -> response(20), 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  response        1    1[COMMON] PTR unsigned char 
  8677 ;;		 -> response(20), 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_PS2Command
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           
  8701                           ;psect for function _pollController
  8702  0668                     _pollController:	
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  8706                           ;pollController@response stored from wreg
  8707  0668  00F1               	movwf	pollController@response
  8708  0669                     i1l2113:	
  8709                           
  8710                           ;main.c: 100:     responseLength = 5;
  8711  0669  3005               	movlw	5
  8712  066A  00F0               	movwf	??_pollController
  8713  066B  0870               	movf	??_pollController,w
  8714  066C  0020               	movlb	0	; select bank0
  8715  066D  00D2               	movwf	_responseLength
  8716  066E                     i1l2115:	
  8717                           
  8718                           ;main.c: 102:     response[2] = digitalStateFirst;
  8719  066E  0859               	movf	_digitalStateFirst,w
  8720  066F  00F0               	movwf	??_pollController
  8721  0670  0871               	movf	pollController@response,w
  8722  0671  3E02               	addlw	2
  8723  0672  0086               	movwf	6
  8724  0673  0187               	clrf	7
  8725  0674  0870               	movf	??_pollController,w
  8726  0675  0081               	movwf	1
  8727  0676                     i1l2117:	
  8728                           
  8729                           ;main.c: 103:     response[3] = digitalStateSecond;
  8730  0676  0858               	movf	_digitalStateSecond,w
  8731  0677  00F0               	movwf	??_pollController
  8732  0678  0871               	movf	pollController@response,w
  8733  0679  3E03               	addlw	3
  8734  067A  0086               	movwf	6
  8735  067B  0187               	clrf	7
  8736  067C  0870               	movf	??_pollController,w
  8737  067D  0081               	movwf	1
  8738  067E                     i1l2119:	
  8739                           
  8740                           ;main.c: 105:     response[4] = rxData;
  8741  067E  0857               	movf	_rxData,w
  8742  067F  00F0               	movwf	??_pollController
  8743  0680  0871               	movf	pollController@response,w
  8744  0681  3E04               	addlw	4
  8745  0682  0086               	movwf	6
  8746  0683  0187               	clrf	7
  8747  0684  0870               	movf	??_pollController,w
  8748  0685  0081               	movwf	1
  8749  0686                     i1l2121:	
  8750                           
  8751                           ;main.c: 106:     response[5] = ryData;
  8752  0686  0856               	movf	_ryData,w
  8753  0687  00F0               	movwf	??_pollController
  8754  0688  0871               	movf	pollController@response,w
  8755  0689  3E05               	addlw	5
  8756  068A  0086               	movwf	6
  8757  068B  0187               	clrf	7
  8758  068C  0870               	movf	??_pollController,w
  8759  068D  0081               	movwf	1
  8760  068E                     i1l2123:	
  8761                           
  8762                           ;main.c: 107:     response[6] = lxData;
  8763  068E  0855               	movf	_lxData,w
  8764  068F  00F0               	movwf	??_pollController
  8765  0690  0871               	movf	pollController@response,w
  8766  0691  3E06               	addlw	6
  8767  0692  0086               	movwf	6
  8768  0693  0187               	clrf	7
  8769  0694  0870               	movf	??_pollController,w
  8770  0695  0081               	movwf	1
  8771  0696                     i1l2125:	
  8772                           
  8773                           ;main.c: 108:     response[7] = lyData;
  8774  0696  0854               	movf	_lyData,w
  8775  0697  00F0               	movwf	??_pollController
  8776  0698  0871               	movf	pollController@response,w
  8777  0699  3E07               	addlw	7
  8778  069A  0086               	movwf	6
  8779  069B  0187               	clrf	7
  8780  069C  0870               	movf	??_pollController,w
  8781  069D  0081               	movwf	1
  8782  069E                     i1l2127:	
  8783                           
  8784                           ;main.c: 110:     if (analogMode) {
  8785  069E  0879               	movf	_analogMode,w
  8786  069F  1903               	btfsc	3,2
  8787  06A0  2EA2               	goto	u127_21
  8788  06A1  2EA3               	goto	u127_20
  8789  06A2                     u127_21:	
  8790  06A2  2F08               	goto	i1l116
  8791  06A3                     u127_20:	
  8792  06A3                     i1l2129:	
  8793                           
  8794                           ;main.c: 112:         responseLength = 20;
  8795  06A3  3014               	movlw	20
  8796  06A4  00F0               	movwf	??_pollController
  8797  06A5  0870               	movf	??_pollController,w
  8798  06A6  00D2               	movwf	_responseLength
  8799  06A7                     i1l2131:	
  8800                           
  8801                           ;main.c: 114:         response[8] = analogStateFirst[2];
  8802  06A7  0021               	movlb	1	; select bank1
  8803  06A8  085A               	movf	(_analogStateFirst^(0+128)+2),w
  8804  06A9  00F0               	movwf	??_pollController
  8805  06AA  0871               	movf	pollController@response,w
  8806  06AB  3E08               	addlw	8
  8807  06AC  0086               	movwf	6
  8808  06AD  0187               	clrf	7
  8809  06AE  0870               	movf	??_pollController,w
  8810  06AF  0081               	movwf	1
  8811  06B0                     i1l2133:	
  8812                           
  8813                           ;main.c: 115:         response[9] = analogStateFirst[0];
  8814  06B0  0858               	movf	_analogStateFirst^(0+128),w
  8815  06B1  00F0               	movwf	??_pollController
  8816  06B2  0871               	movf	pollController@response,w
  8817  06B3  3E09               	addlw	9
  8818  06B4  0086               	movwf	6
  8819  06B5  0187               	clrf	7
  8820  06B6  0870               	movf	??_pollController,w
  8821  06B7  0081               	movwf	1
  8822  06B8                     i1l2135:	
  8823                           
  8824                           ;main.c: 116:         response[10] = analogStateFirst[3];
  8825  06B8  085B               	movf	(_analogStateFirst^(0+128)+3),w
  8826  06B9  00F0               	movwf	??_pollController
  8827  06BA  0871               	movf	pollController@response,w
  8828  06BB  3E0A               	addlw	10
  8829  06BC  0086               	movwf	6
  8830  06BD  0187               	clrf	7
  8831  06BE  0870               	movf	??_pollController,w
  8832  06BF  0081               	movwf	1
  8833  06C0                     i1l2137:	
  8834                           
  8835                           ;main.c: 117:         response[11] = analogStateFirst[1];
  8836  06C0  0859               	movf	(_analogStateFirst^(0+128)+1),w
  8837  06C1  00F0               	movwf	??_pollController
  8838  06C2  0871               	movf	pollController@response,w
  8839  06C3  3E0B               	addlw	11
  8840  06C4  0086               	movwf	6
  8841  06C5  0187               	clrf	7
  8842  06C6  0870               	movf	??_pollController,w
  8843  06C7  0081               	movwf	1
  8844  06C8                     i1l2139:	
  8845                           
  8846                           ;main.c: 118:         response[12] = analogStateSecond[3];
  8847  06C8  0853               	movf	(_analogStateSecond^(0+128)+3),w
  8848  06C9  00F0               	movwf	??_pollController
  8849  06CA  0871               	movf	pollController@response,w
  8850  06CB  3E0C               	addlw	12
  8851  06CC  0086               	movwf	6
  8852  06CD  0187               	clrf	7
  8853  06CE  0870               	movf	??_pollController,w
  8854  06CF  0081               	movwf	1
  8855  06D0                     i1l2141:	
  8856                           
  8857                           ;main.c: 119:         response[13] = analogStateSecond[2];
  8858  06D0  0852               	movf	(_analogStateSecond^(0+128)+2),w
  8859  06D1  00F0               	movwf	??_pollController
  8860  06D2  0871               	movf	pollController@response,w
  8861  06D3  3E0D               	addlw	13
  8862  06D4  0086               	movwf	6
  8863  06D5  0187               	clrf	7
  8864  06D6  0870               	movf	??_pollController,w
  8865  06D7  0081               	movwf	1
  8866  06D8                     i1l2143:	
  8867                           
  8868                           ;main.c: 120:         response[14] = analogStateSecond[1];
  8869  06D8  0851               	movf	(_analogStateSecond^(0+128)+1),w
  8870  06D9  00F0               	movwf	??_pollController
  8871  06DA  0871               	movf	pollController@response,w
  8872  06DB  3E0E               	addlw	14
  8873  06DC  0086               	movwf	6
  8874  06DD  0187               	clrf	7
  8875  06DE  0870               	movf	??_pollController,w
  8876  06DF  0081               	movwf	1
  8877  06E0                     i1l2145:	
  8878                           
  8879                           ;main.c: 121:         response[15] = analogStateSecond[0];
  8880  06E0  0850               	movf	_analogStateSecond^(0+128),w
  8881  06E1  00F0               	movwf	??_pollController
  8882  06E2  0871               	movf	pollController@response,w
  8883  06E3  3E0F               	addlw	15
  8884  06E4  0086               	movwf	6
  8885  06E5  0187               	clrf	7
  8886  06E6  0870               	movf	??_pollController,w
  8887  06E7  0081               	movwf	1
  8888  06E8                     i1l2147:	
  8889                           
  8890                           ;main.c: 122:         response[16] = analogStateSecond[5];
  8891  06E8  0855               	movf	(_analogStateSecond^(0+128)+5),w
  8892  06E9  00F0               	movwf	??_pollController
  8893  06EA  0871               	movf	pollController@response,w
  8894  06EB  3E10               	addlw	16
  8895  06EC  0086               	movwf	6
  8896  06ED  0187               	clrf	7
  8897  06EE  0870               	movf	??_pollController,w
  8898  06EF  0081               	movwf	1
  8899  06F0                     i1l2149:	
  8900                           
  8901                           ;main.c: 123:         response[17] = analogStateSecond[4];
  8902  06F0  0854               	movf	(_analogStateSecond^(0+128)+4),w
  8903  06F1  00F0               	movwf	??_pollController
  8904  06F2  0871               	movf	pollController@response,w
  8905  06F3  3E11               	addlw	17
  8906  06F4  0086               	movwf	6
  8907  06F5  0187               	clrf	7
  8908  06F6  0870               	movf	??_pollController,w
  8909  06F7  0081               	movwf	1
  8910  06F8                     i1l2151:	
  8911                           
  8912                           ;main.c: 124:         response[18] = analogStateSecond[7];
  8913  06F8  0857               	movf	(_analogStateSecond^(0+128)+7),w
  8914  06F9  00F0               	movwf	??_pollController
  8915  06FA  0871               	movf	pollController@response,w
  8916  06FB  3E12               	addlw	18
  8917  06FC  0086               	movwf	6
  8918  06FD  0187               	clrf	7
  8919  06FE  0870               	movf	??_pollController,w
  8920  06FF  0081               	movwf	1
  8921  0700                     i1l2153:	
  8922                           
  8923                           ;main.c: 125:         response[19] = analogStateSecond[6];
  8924  0700  0856               	movf	(_analogStateSecond^(0+128)+6),w
  8925  0701  00F0               	movwf	??_pollController
  8926  0702  0871               	movf	pollController@response,w
  8927  0703  3E13               	addlw	19
  8928  0704  0086               	movwf	6
  8929  0705  0187               	clrf	7
  8930  0706  0870               	movf	??_pollController,w
  8931  0707  0081               	movwf	1
  8932  0708                     i1l116:	
  8933  0708  0008               	return
  8934  0709                     __end_of_pollController:	
  8935  007E                     btemp	set	126	;btemp
  8936  007E                     int$flags	set	126
  8937  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        31
    BSS         70
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     48      80
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->_pollController

Critical Paths under _main in BANK0

    _main->_lutInit
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _configureController->_readADC
    _PWMTestFunc->_PWMButton

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10451
                                             44 BANK0      4     4      0
                        _PWMTestFunc
                            _PwmInit
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _ppsLock
                          _ppsUnlock
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4182
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2785
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    3487
                                              9 BANK0     13    13      0
                        _eepromWrite
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PwmInit                                              3     1      2     121
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _PWMTestFunc                                          2     2      0     211
                                              4 BANK0      2     2      0
                          _PWMButton
 ---------------------------------------------------------------------------------
 (2) _PWMButton                                            4     2      2     211
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _PS2Command                                           3     3      0     705
                                              2 COMMON     3     3      0
                     _pollController
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWMTestFunc
     _PWMButton
   _PwmInit
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _ppsLock
     _ppsUnlock
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      9A      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      9A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 22 09:32:06 2020

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
                  __CFG_LVP$ON 0000                            l110 0F9A                            l112 0FA0  
                          l105 0E2E                            l108 0F76                            l322 07DB  
                          l411 0DCC                            l331 0772                            l340 04A7  
                          l325 07FD                            l341 04B1                            l414 0DD6  
                          l342 04BB                            l430 0E14                            l343 04C5  
                          l319 03C2                            l344 04CF                            l408 0DC4  
                          l328 0EEA                            l417 0F5D                            l338 0493  
                          l186 0FDB                            l179 0F22                            l291 0626  
                          l347 0523                            l339 049D                            l461 0EAB  
                          l293 064A                            l285 059E                            l621 0E58  
                          l429 0E0F                            l463 0EB3                            l295 0667  
                          l623 0E6C                            l289 0602                            l298 0E8E  
                          l466 0E00                            l459 0EA6                            l469 0DBD  
                          l774 07D2                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                   __CFG_CPD$OFF 0000  
                          u900 0795                            u901 0794                            u920 07A5  
                          u921 07A4                            u915 0799                            u940 07B4  
                          u941 07B3                            u935 07A6                            u960 07C4  
                          u880 0779                            u961 07C3                            u945 07B0  
                          u881 0778                            u970 07C9                            u890 0784  
                          u971 07C8                            u955 07BA                            u891 0783  
                          _Map 0E6D                   __CFG_BORV$LO 0000                            wreg 0009  
                  _PWMTestFunc 0EEB                 eepromRead@data 0022                   __CFG_ZCD$OFF 0000  
                         ?_Map 002F                           l3001 03B5                           l3011 0431  
                         l3003 03C3                           l3021 0442                           l3013 0437  
                         l3005 03C5                           l3101 0FFA                           l3031 0459  
                         l3023 0447                           l3015 0438                           l3007 0426  
                         l3041 04AD                           l3033 0489                           l3017 043C  
                         l3025 044C                           l3009 042A                           l3043 04B7  
                         l3035 048F                           l3027 0452                           l3051 04DA  
                         l3019 0441                           l3053 0521                           l3045 04C1  
                         l3037 0499                           l3061 0FA7                           l3055 0522  
                         l3047 04CB                           l3039 04A3                           l3071 0FB9  
                         l3063 0FAA                           l3049 04D5                           l3057 0709  
                         l3081 0FCD                           l3073 0FBA                           l3065 0FB2  
                         l3091 0FE6                           l3083 0FD2                           l3075 0FBD  
                         l3067 0FB7                           l3059 0FA1                           l3093 0FEC  
                         l3085 0FD7                           l3077 0FC4                           l3069 0FB8  
                         l3095 0FED                           l3087 0FE1                           l3079 0FCA  
                         l2801 05BE                           l3097 0FF1                           l3089 0FE2  
                         l2811 05E7                           l2803 05C3                           l1931 0775  
                         l3099 0FF6                           l2901 0EF8                           l2821 061E  
                         l2813 05EC                           l2805 05CF                           l1941 0789  
                         l1933 0779                           l2903 0F00                           l2743 0DB7  
                         l2823 0630                           l2815 05F8                           l2807 05D4  
                         l1951 079D                           l1943 078D                           l1935 077E  
                         l2751 0E54                           l2911 0F30                           l2761 0F5E  
                         l2905 0F15                           l2745 0DBC                           l2841 07D3  
                         l2825 0642                           l2817 05FD                           l2809 05D9  
                         l1961 07B9                           l1953 07A1                           l1945 078F  
                         l1937 0780                           l1929 0773                           l2753 0E5D  
                         l2833 0DF1                           l2921 0F4C                           l2913 0F33  
                         l2771 0F77                           l2763 0F69                           l2843 07D7  
                         l2827 0663                           l2819 060C                           l1963 07BE  
                         l1955 07A5                           l1947 0795                           l1939 0784  
                         l2755 0E62                           l2747 0E4D                           l2835 0DF3  
                         l2931 0F58                           l2923 0F4E                           l2915 0F34  
                         l2907 0F23                           l2781 0F95                           l2773 0F7A  
                         l2765 0F6B                           l2941 0DD0                           l2861 0E95  
                         l2845 07D8                           l1957 07B4                           l1949 0798  
                         l1965 07C4                           l2757 0E68                           l2749 0E50  
                         l2829 0E6D                           l2837 0DF9                           l2933 0F59  
                         l2925 0F4F                           l2917 0F3D                           l2909 0F2E  
                         l2853 0EB6                           l2783 0F9B                           l2775 0F8D  
                         l2767 0F70                           l2943 0DD1                           l2871 0E9F  
                         l2863 0E96                           l2847 07DA                           l2791 058B  
                         l1967 07C9                           l1959 07B8                           l2951 01D2  
                         l2935 0F5A                           l2927 0F52                           l2919 0F3E  
                         l2855 0EE9                           l2785 0F9E                           l2777 0F8F  
                         l2769 0F71                           l2945 0DD2                           l2873 0EA3  
                         l2865 0E98                           l2849 07DF                           l2793 058C  
                         l1969 07CE                           l2961 0222                           l2953 0212  
                         l2881 0DC3                           l2937 0F5C                           l2929 0F55  
                         l2779 0F94                           l2891 0E15                           l2947 0DD3  
                         l2939 0DCD                           l2875 0EAC                           l2867 0E99  
                         l2859 0E91                           l2795 0595                           l2787 0526  
                         l2971 0289                           l2963 022F                           l2883 0DC5  
                         l2893 0E17                           l2949 0DD5                           l2877 0EB2  
                         l2869 0E9B                           l2797 05A7                           l2789 0585  
                         l2981 02F0                           l2973 0296                           l2965 023B  
                         l2885 0E03                           l2895 0E2B                           l2799 05B0  
                         l2991 0357                           l2983 02FD                           l2975 02A2  
                         l2967 024D                           l2959 0214                           l2879 0DBE  
                         l2887 0E07                           l2897 0E2D                           l2993 0364  
                         l2985 0309                           l2977 02B4                           l2969 027C  
                         l2889 0E0B                           l2899 0EEB                           l2995 0370  
                         l2987 031B                           l2979 02E3                           l2997 0382  
                         l2989 034A                           l2999 03B1                           u2000 023B  
                         u2001 023A                           u2010 0289                           u2011 0288  
                         u2100 0452                           u2020 02A2                           u2101 0451  
                         u2021 02A1                           u2005 0237                           u2110 0458  
                         u2030 02F0                           u2111 0457                           u2031 02EF  
                         u2015 0285                           u2120 048F                           u2040 0309  
                         u2200 0FC4                           u2121 048E                           u2041 0308  
                         u2025 029E                           u2201 0FC3                           u2130 0499  
                         u2050 0357                           u2210 0FCA                           u2131 0498  
                         u2051 0356                           u2035 02EC                           u2211 0FC9  
                         u2140 04A3                           u2060 0370                           u2220 0FD7  
                         u2141 04A2                           u2061 036F                           u2045 0305  
                         u2221 0FD6                           u2150 04AD                           u2070 03C2  
                         u2230 0FE1                           u2151 04AC                           u2071 03C1  
                         u2055 0353                           u2231 0FE0                           u2160 04B7  
                         u2080 0431                           u2240 0FEC                           u2161 04B6  
                         u2081 0430                           u2065 036C                           u2241 0FEB  
                         u2170 04C1                           u2090 0437                           u2171 04C0  
                         u2091 0436                           u2075 03BE                           u2180 04CB  
                         u1700 0E68                           u2181 04CA                           u1701 0E67  
                         u1710 0F70                           u2190 04D5                           u1711 0F6F  
                         u2191 04D4                           u1720 0F94                           u1721 0F93  
                         u2257 0EF1                           u1810 05FD                           u1730 058B  
                         u2267 0F06                           u1811 05FC                           u1731 058A  
                         u1820 060C                           u1804 05F2                           u1740 0595  
                         u2277 0F1B                           u1821 060B                           u1805 05F1  
                         u1741 0594                           u1750 05A7                           u1670 0E54  
                         u2287 0F82                           u1751 05A6                           u1671 0E53  
                         u1840 061E                           u1760 05BE                           u1905 07EF  
                         u1841 061D                           u1761 05BD                           u1850 0630  
                         u1834 0612                           u1851 062F                           u1835 0611  
                         u1915 0EBA                           u1780 05D4                           u1781 05D3  
                         u1685 0E59                           u1925 0EC0                           u1870 0642  
                         u1790 05E7                           u1774 05C9                           u1871 0641  
                         u1791 05E6                           u1775 05C8                           u1695 0E5E  
                         u1935 0ECD                           u1960 0EAB                           u1880 07DF  
                         u1864 0636                           u1961 0EAA                           u1881 07DE  
                         u1865 0635                           u1945 0ED3                           u1970 0EB2  
                         u1971 0EB1                           u1955 0EE0                           u1980 0E07  
                         u1981 0E06                           u1990 0222                           u1895 07E3  
                         u1991 0221                           u1995 021E                           Map@x 002F  
                         _WPUA 0F39                           _WPUB 0F44                           _WPUC 0F4F  
                         _WPUD 0F5A                           _WPUE 0F65                   __CFG_WRT$OFF 0000  
                __CFG_FCMEN$ON 0000                           _main 0FA1                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 019E                    ?_PS2Command 0070  
                __CFG_CSWEN$ON 0000                lutInit@position 004A                          ??_Map 0039  
     configureController@lxMax 002B       configureController@lxMin 002A       configureController@lyMax 002D  
     configureController@lyMin 002C       configureController@rxMax 002F       configureController@rxMin 002E  
     configureController@ryMax 0031       configureController@ryMin 0030                __end_of_PwmInit 0E2F  
                        _ADACQ 009D                          ?_main 0070                          _ADCLK 0098  
                        _ADPCH 009E                __end_of_adcInit 0DD7                          _ADREF 009A  
              __end_of___awdiv 07D3                          _ADPRE 009C                  __CFG_WDTE$OFF 0000  
              ___awdiv@divisor 0026                          _T6CON 029A       main@slaveSelectStatePrev 004D  
                        _T6HLT 029B                          i1l121 0187                          i1l116 0708  
                        i1l126 001A                          i1l174 0196                          i1l176 019C  
                        i1l433 0DAB                          i1l442 0DB6                          i1l436 0DB0  
                        i1l439 0DAA                          _T6TMR 0298                          _T6RST 029D  
              ___awdiv@counter 002B                          _TRISA 0011                          _TRISB 0012  
                        _TRISC 0013                          _TRISD 0014                          _TRISE 0015  
                        _PWMOn 0075    __end_of_configureController 0524                __end_of_readADC 07FE  
              __end_of_picInit 0F5E                          _index 0078  __size_of_readControllerAnalog 006A  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 03C3                __end_of_ppsLock 0DCD  
              __end_of_spiInit 0E15                __end_of_spiRead 0DB7                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0074             __size_of_PWMButton 0043  
               __CFG_MCLRE$OFF 0000                __initialization 01A0                   __end_of_main 1000  
                       ??_main 004C            __size_of_PS2Command 019A                         _ADCON0 0093  
                       _ADCON1 0094                         _ADCON2 0095                         _ADRESH 008D  
                       _ADRESL 008C               ___awdiv@dividend 0028                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B8           _PreviousDigitalByte2 00B0  
                       i1l2103 0DAB                         i1l2121 0686                         i1l2113 0669  
                       i1l2131 06A7                         i1l2123 068E                         i1l2115 066E  
                       _RC5PPS 0F25                         i1l2141 06D0                         i1l2133 06B0  
                       i1l2125 0696                         i1l2117 0676                         i1l2151 06F8  
                       i1l2143 06D8                         i1l2135 06B8                         i1l2127 069E  
                       i1l2119 067E                         i1l2153 0700                         i1l2145 06E0  
                       i1l2137 06C0                         i1l2129 06A3                         i1l2161 0DA7  
                       i1l2401 00AA                         i1l2147 06E8                         i1l2139 06C8  
                       i1l2155 0DB1                         i1l2411 00C0                         i1l2331 001C  
                       i1l2323 0006                         i1l2149 06F0                         i1l2157 0DB4  
                       i1l2501 0191                         i1l2421 00D5                         i1l2413 00C5  
                       i1l2405 00AF                         i1l2341 0030                         i1l2333 0022  
                       i1l2325 000B                         i1l2503 0197                         i1l2431 00E9  
                       i1l2423 00D8                         i1l2415 00CA                         i1l2351 0040  
                       i1l2343 0032                         i1l2335 0025                         i1l2327 0012  
                       i1l2505 019A                         i1l2441 00FA                         i1l2433 00EC  
                       i1l2425 00DC                         i1l2417 00CB                         i1l2409 00B7  
                       i1l2345 0038                         i1l2353 0042                         i1l2337 0027  
                       i1l2329 0018                         i1l2451 0103                         i1l2443 00FE  
                       i1l2435 00F0                         i1l2427 00E0                         i1l2419 00CF  
                       i1l2371 0065                         i1l2363 004A                         i1l2355 0045  
                       i1l2347 003B                         i1l2339 002D                         i1l2453 0105  
                       i1l2445 00FF                         i1l2429 00E4                         i1l2381 008F  
                       i1l2373 0076                         i1l2365 0064                         i1l2349 003F  
                       i1l2455 0109                         i1l2439 00F6                         i1l2383 0095  
                       i1l2375 007B                         i1l3263 0053                         i1l2471 0141  
                       i1l2481 0166                         i1l2457 010D                         i1l2449 0101  
                       i1l2385 009A                         i1l2377 0088                         i1l3265 006E  
                       i1l2473 0151                         i1l2491 017E                         i1l2483 016A  
                       i1l2475 0157                         i1l3267 011E                         i1l2467 0116  
                       i1l2459 0111                         i1l2379 0089                         i1l2493 0182  
                       i1l2485 0172                         i1l2477 015C                         i1l3269 0149  
                       i1l2397 00A0                         i1l2495 0184                         i1l2487 0179  
                       i1l2479 0161                         i1l2399 00A4                         i1l2497 018B  
                       i1l2489 017D                         i1l2499 0190                 __CFG_WDTCCS$SC 0000  
                       u126_20 0DB0                         u150_20 0018                         u126_21 0DAF  
                       u150_21 0017                         u127_20 06A3                         u151_20 0022  
                       u127_21 06A2                         u151_21 0021                         u160_20 018B  
                       u152_20 002D                         u160_21 018A                         u152_21 002C  
                       u161_20 0190                         u153_20 0038                         u161_21 018F  
                       u153_21 0037                         u154_20 007B                         u154_21 007A  
                       u155_20 009F                         u155_21 009E                         u156_20 00C5  
                       u156_21 00C4                         u157_20 0157                         u149_20 000B  
                       u157_21 0156                         u149_21 000A                         u158_20 0161  
                       u158_21 0160                         u159_20 0179                         u159_21 0178  
                       _TMR6IE 38D5                         _TMR6IF 3885                         _SSP1IE 38C8  
                       _SSP1IF 3878                 __CFG_PWRTE$OFF 0000           __size_of_eepromWrite 0025  
                    ??_PwmInit 0022                         ___wmul 0E4D                      ??_adcInit 0020  
                    ??___awdiv 002A                 __CFG_STVREN$ON 0000        __size_of_pollController 00A1  
                       _lxData 0055                         _lyData 0054                eepromWrite@data 0020  
                       _rxData 0057               ___awdiv@quotient 002D                         _ryData 0056  
                 ?_reversebyte 0070                      ??_readADC 0022              __end_of_PWMButton 0FA1  
                    ??_picInit 0024                   __pdataCOMMON 0079                      ??_lutInit 0039  
             __end_of_spiWrite 0DAB                      ??_ppsLock 0020                      ??_spiInit 0023  
                    ??_spiRead 0070              _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0  
      __end_of__initialization 01CE                 __pcstackCOMMON 0070                   __pidataBANK0 0E2F  
       _DigitalControllerByte1 00C8         _DigitalControllerByte2 00C0              eepromRead@address 0021  
      __size_of_readController 0144                   ?_PWMTestFunc 0070                     _cmdCounter 0077  
                   __pbssBANK0 006E                     __pbssBANK1 00A0                     _analogMode 0079  
                 ??_PS2Command 0072                     __pmaintext 0FA1                        ?___wmul 0020  
                   __pintentry 0004        __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000  
           __size_of_nvmUnlock 0007             __size_of_ppsUnlock 0007                     _eepromRead 0DEF  
   eepromWrite@interruptStatus 0022                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 019E  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 006F  
     readController@analogMode 0022                        _PwmInit 0E15   __end_of_readControllerAnalog 0773  
                  PwmInit@idle 0020           __CFG_SCANE$available 0000                      ?_spiWrite 0070  
                      _adcInit 0DCD                        ___awdiv 0773                 _pollController 0668  
              __size_of___wmul 0020                        __ptext1 0709                        __ptext2 0EB4  
                      __ptext3 0F23                        __ptext4 0E01                        __ptext5 0DBE  
                      __ptext6 0DC5                        __ptext7 01D2                        __ptext8 0DEF  
                      __ptext9 0E6D                        _readADC 07D3                   __size_of_Map 0022  
                      _picInit 0F23           __size_of_reversebyte 0037                        _lutInit 01D2  
                      _ppsLock 0DC5                        _spiInit 0E01                        _spiRead 0DB1  
                      clrloop0 0DD8           end_of_initialization 01CE                        init_ram 0DE3  
 __size_of_configureController 0161                        initloop 0DE4              __end_of_nvmUnlock 0DBE  
            __end_of_ppsUnlock 0DC5         __end_of_pollController 0709                     ??_spiWrite 0070  
              reversebyte@byte 0023          __CFG_WDTCPS$WDTCPS_31 0000                      Map@outMax 0037  
                    Map@outMin 0035                      _PORTDbits 000F                    ?_eepromRead 0070  
               _readController 0524                      _TRISAbits 0011                      _TRISCbits 0013  
                    _TRISDbits 0014                      _PWMButton 0F5E                      _PWMPeriod 0050  
         __size_of_PWMTestFunc 0038                    spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000  
           _digitalStateSecond 0058                  ??_eepromWrite 0021                ?_pollController 0070  
               _spiReceiveWait 0DAB                 __end_of___wmul 0E6D                  __pidataCOMMON 07FE  
       __end_of_readController 0668            start_initialization 01A0                    __end_of_Map 0E8F  
                   ?_PWMButton 0020           _readControllerAnalog 0709                  _debounceLoops 0053  
          __size_of_eepromRead 0012               __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0DB1  
          __end_of_eepromWrite 0EB4                       ??___wmul 0024                    __pdataBANK0 0050  
              ?_readController 0070                    __pbssBIGRAM 23F0                    __pbssCOMMON 0075  
                    ___latbits 0003                  __pcstackBANK0 0020          configureController@lx 0032  
        configureController@ly 0033          configureController@rx 0034          configureController@ry 0035  
        ?_readControllerAnalog 0070                 _responseLength 0052              _analogStateSecond 00D0  
                     ?_PwmInit 0020                ?_spiReceiveWait 0070                       ?_adcInit 0070  
                     ?___awdiv 0026               __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005  
          _configureController 03C3                       ?_readADC 0020                       ?_picInit 0070  
                     ?_lutInit 0070                       ?_ppsLock 0070                       ?_spiInit 0020  
                     ?_spiRead 0070                    ??_PWMButton 0022                       _T6CLKCON 029C  
           eepromWrite@address 0021           spiInit@sTransmitEdge 0022           ?_configureController 0070  
               ___wmul@product 0024                    _eepromWrite 0E8F                      clear_ram0 0DD7  
           spiInit@sDataSample 0020                      _nvmUnlock 0DB7                       Map@inMax 0033  
                     Map@inMin 0031                      _ppsUnlock 0DBE                       _SSP1CON1 0190  
                     _SSP1STAT 018F                  ??_reversebyte 0020                     _ADCON0bits 0093  
            ___wmul@multiplier 0020                   lutInit@lxMax 0043                   lutInit@lxMin 0042  
                 lutInit@lyMax 0045                   lutInit@lyMin 0044              _digitalStateFirst 0059  
                 lutInit@rxMax 0047                   lutInit@rxMin 0046                   lutInit@ryMax 0049  
                 lutInit@ryMin 0048                   ??_eepromRead 0020                      main@count 004E  
       ??_readControllerAnalog 0029          ??_configureController 0029               ??_pollController 0070  
               PWMButton@value 0020             __end_of_eepromRead 0E01                     ?_nvmUnlock 0070  
                   ?_ppsUnlock 0070               __size_of_PwmInit 001A               __size_of_adcInit 000A  
             __size_of___awdiv 0060                 readADC@channel 0020               _analogStateFirst 00D8  
             __size_of_readADC 002B               __size_of_picInit 003B                  ??_PWMTestFunc 0024  
          __end_of_reversebyte 0EEB               __size_of_lutInit 01F1                       __ptext10 0E4D  
                     __ptext11 0773                       __ptext20 0F5E                       __ptext12 03C3  
                     __ptext13 0524                       __ptext22 0DA6                       __ptext14 07D3  
                     __ptext23 0DB1                       __ptext15 0E8F                       __ptext24 0DAB  
                     __ptext16 0DB7                       __ptext25 0668                       __ptext17 0DCD  
                     __ptext18 0E15                       __ptext19 0EEB               __size_of_ppsLock 0008  
             __size_of_spiInit 0014               __size_of_spiRead 0006                  __size_of_main 005F  
         __CFG_WDTCWS$WDTCWS_7 0000                       _response 005A               ??_readController 0020  
                     _spiWrite 0DA6                       int$flags 007E                   spiInit@sType 0023  
              main@slaveSelect 004F                   _SSP1STATbits 018F              spiInit@sClockIdle 0021  
                   _INTCONbits 000B                    _NVMCON1bits 081E         pollController@response 0071  
                     intlevel1 0000            __end_of_PWMTestFunc 0F23               ??_spiReceiveWait 0070  
            __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004                    ??_nvmUnlock 0020  
                  ??_ppsUnlock 0020                    _reversebyte 0EB4                    _previousCmd 006E  
                 ?_eepromWrite 0020  
