

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 20 13:13:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0xCA0,32
    41                           	dabs	1,0xC20,80
    42                           	dabs	1,0xBA0,80
    43                           	dabs	1,0xB30,64
    44                           	dabs	1,0xB20,16
    45                           	dabs	1,0xAA0,80
    46                           	dabs	1,0xA20,80
    47                           	dabs	1,0x9A0,80
    48                           	dabs	1,0x920,80
    49                           	dabs	1,0x8A0,80
    50                           	dabs	1,0x820,80
    51                           	dabs	1,0x7E0,16
    52                           	dabs	1,0x7A0,64
    53                           	dabs	1,0x720,80
    54                           	dabs	1,0x6A0,80
    55                           	dabs	1,0x650,32
    56                           	dabs	1,0x23F0,0,_lutRY
    57                           	dabs	1,0x24F0,0,_lutRX
    58                           	dabs	1,0x25F0,0,_lutLY
    59                           	dabs	1,0x26F0,0,_lutLX
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.10
    63                           ; Generated 31/07/2019 GMT
    64                           ; 
    65                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F18876 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001C                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0110                     	;# 
   156  0110                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  018F                     	;# 
   196  0190                     	;# 
   197  0191                     	;# 
   198  0192                     	;# 
   199  0196                     	;# 
   200  0197                     	;# 
   201  0198                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019C                     	;# 
   206  020C                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  020F                     	;# 
   211  020F                     	;# 
   212  0210                     	;# 
   213  0210                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  0218                     	;# 
   227  0218                     	;# 
   228  0219                     	;# 
   229  021A                     	;# 
   230  021B                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021D                     	;# 
   236  021E                     	;# 
   237  021F                     	;# 
   238  028C                     	;# 
   239  028C                     	;# 
   240  028D                     	;# 
   241  028D                     	;# 
   242  028E                     	;# 
   243  028F                     	;# 
   244  0290                     	;# 
   245  0290                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0296                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0298                     	;# 
   258  0299                     	;# 
   259  0299                     	;# 
   260  029A                     	;# 
   261  029B                     	;# 
   262  029C                     	;# 
   263  029C                     	;# 
   264  029D                     	;# 
   265  030C                     	;# 
   266  030C                     	;# 
   267  030D                     	;# 
   268  030E                     	;# 
   269  030F                     	;# 
   270  0310                     	;# 
   271  0310                     	;# 
   272  0311                     	;# 
   273  0312                     	;# 
   274  0313                     	;# 
   275  0314                     	;# 
   276  0314                     	;# 
   277  0315                     	;# 
   278  0316                     	;# 
   279  0317                     	;# 
   280  0318                     	;# 
   281  0318                     	;# 
   282  0319                     	;# 
   283  031A                     	;# 
   284  031B                     	;# 
   285  031C                     	;# 
   286  031C                     	;# 
   287  031D                     	;# 
   288  031E                     	;# 
   289  031F                     	;# 
   290  038C                     	;# 
   291  038C                     	;# 
   292  038D                     	;# 
   293  038E                     	;# 
   294  0390                     	;# 
   295  0390                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  040C                     	;# 
   299  040D                     	;# 
   300  040E                     	;# 
   301  040F                     	;# 
   302  0410                     	;# 
   303  0411                     	;# 
   304  0416                     	;# 
   305  0416                     	;# 
   306  0417                     	;# 
   307  0418                     	;# 
   308  0418                     	;# 
   309  0419                     	;# 
   310  041A                     	;# 
   311  041A                     	;# 
   312  041B                     	;# 
   313  041C                     	;# 
   314  041C                     	;# 
   315  041D                     	;# 
   316  041E                     	;# 
   317  041F                     	;# 
   318  048C                     	;# 
   319  048C                     	;# 
   320  048D                     	;# 
   321  048E                     	;# 
   322  048F                     	;# 
   323  048F                     	;# 
   324  0490                     	;# 
   325  0491                     	;# 
   326  0492                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0494                     	;# 
   330  0495                     	;# 
   331  0495                     	;# 
   332  0496                     	;# 
   333  0497                     	;# 
   334  0498                     	;# 
   335  0499                     	;# 
   336  049A                     	;# 
   337  049B                     	;# 
   338  049C                     	;# 
   339  049D                     	;# 
   340  050C                     	;# 
   341  050C                     	;# 
   342  050D                     	;# 
   343  050E                     	;# 
   344  050F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0512                     	;# 
   350  0513                     	;# 
   351  0514                     	;# 
   352  0515                     	;# 
   353  0515                     	;# 
   354  0516                     	;# 
   355  0517                     	;# 
   356  0518                     	;# 
   357  0519                     	;# 
   358  051A                     	;# 
   359  051B                     	;# 
   360  051C                     	;# 
   361  051D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  060C                     	;# 
   373  060D                     	;# 
   374  060E                     	;# 
   375  060F                     	;# 
   376  0610                     	;# 
   377  0611                     	;# 
   378  0612                     	;# 
   379  0613                     	;# 
   380  0614                     	;# 
   381  0616                     	;# 
   382  0617                     	;# 
   383  0618                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061D                     	;# 
   389  061E                     	;# 
   390  068C                     	;# 
   391  068D                     	;# 
   392  068E                     	;# 
   393  068F                     	;# 
   394  0690                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  070C                     	;# 
   400  070D                     	;# 
   401  070E                     	;# 
   402  070F                     	;# 
   403  0710                     	;# 
   404  0711                     	;# 
   405  0712                     	;# 
   406  0713                     	;# 
   407  0714                     	;# 
   408  0716                     	;# 
   409  0717                     	;# 
   410  0718                     	;# 
   411  0719                     	;# 
   412  071A                     	;# 
   413  071B                     	;# 
   414  071C                     	;# 
   415  071D                     	;# 
   416  071E                     	;# 
   417  0796                     	;# 
   418  0797                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  079A                     	;# 
   422  079B                     	;# 
   423  080C                     	;# 
   424  080D                     	;# 
   425  080E                     	;# 
   426  080F                     	;# 
   427  0810                     	;# 
   428  0811                     	;# 
   429  0812                     	;# 
   430  0813                     	;# 
   431  0814                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081D                     	;# 
   436  081E                     	;# 
   437  081F                     	;# 
   438  088C                     	;# 
   439  088D                     	;# 
   440  088E                     	;# 
   441  088F                     	;# 
   442  0890                     	;# 
   443  0891                     	;# 
   444  0892                     	;# 
   445  0893                     	;# 
   446  0895                     	;# 
   447  0896                     	;# 
   448  0897                     	;# 
   449  0898                     	;# 
   450  0899                     	;# 
   451  089A                     	;# 
   452  089B                     	;# 
   453  090C                     	;# 
   454  090E                     	;# 
   455  090F                     	;# 
   456  091F                     	;# 
   457  098F                     	;# 
   458  098F                     	;# 
   459  0990                     	;# 
   460  0991                     	;# 
   461  0992                     	;# 
   462  0993                     	;# 
   463  0994                     	;# 
   464  0995                     	;# 
   465  0996                     	;# 
   466  0997                     	;# 
   467  0E0F                     	;# 
   468  0E10                     	;# 
   469  0E11                     	;# 
   470  0E12                     	;# 
   471  0E13                     	;# 
   472  0E14                     	;# 
   473  0E15                     	;# 
   474  0E16                     	;# 
   475  0E17                     	;# 
   476  0E18                     	;# 
   477  0E19                     	;# 
   478  0E1A                     	;# 
   479  0E1B                     	;# 
   480  0E1C                     	;# 
   481  0E1D                     	;# 
   482  0E1E                     	;# 
   483  0E1F                     	;# 
   484  0E20                     	;# 
   485  0E21                     	;# 
   486  0E22                     	;# 
   487  0E23                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E26                     	;# 
   491  0E27                     	;# 
   492  0E28                     	;# 
   493  0E29                     	;# 
   494  0E2A                     	;# 
   495  0E2B                     	;# 
   496  0E2C                     	;# 
   497  0E2D                     	;# 
   498  0E2E                     	;# 
   499  0E2F                     	;# 
   500  0E30                     	;# 
   501  0E31                     	;# 
   502  0E32                     	;# 
   503  0E33                     	;# 
   504  0E34                     	;# 
   505  0E35                     	;# 
   506  0E36                     	;# 
   507  0E37                     	;# 
   508  0E8F                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E93                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E9C                     	;# 
   518  0E9D                     	;# 
   519  0E9E                     	;# 
   520  0EA1                     	;# 
   521  0EA2                     	;# 
   522  0EA3                     	;# 
   523  0EA4                     	;# 
   524  0EA5                     	;# 
   525  0EA9                     	;# 
   526  0EAA                     	;# 
   527  0EAB                     	;# 
   528  0EAC                     	;# 
   529  0EB1                     	;# 
   530  0EB2                     	;# 
   531  0EB3                     	;# 
   532  0EB8                     	;# 
   533  0EB9                     	;# 
   534  0EBA                     	;# 
   535  0EBB                     	;# 
   536  0EBC                     	;# 
   537  0EBD                     	;# 
   538  0EBE                     	;# 
   539  0EC3                     	;# 
   540  0EC5                     	;# 
   541  0EC6                     	;# 
   542  0EC7                     	;# 
   543  0EC8                     	;# 
   544  0EC9                     	;# 
   545  0ECA                     	;# 
   546  0ECB                     	;# 
   547  0ECC                     	;# 
   548  0F10                     	;# 
   549  0F11                     	;# 
   550  0F12                     	;# 
   551  0F13                     	;# 
   552  0F14                     	;# 
   553  0F15                     	;# 
   554  0F16                     	;# 
   555  0F17                     	;# 
   556  0F18                     	;# 
   557  0F19                     	;# 
   558  0F1A                     	;# 
   559  0F1B                     	;# 
   560  0F1C                     	;# 
   561  0F1D                     	;# 
   562  0F1E                     	;# 
   563  0F1F                     	;# 
   564  0F20                     	;# 
   565  0F21                     	;# 
   566  0F22                     	;# 
   567  0F23                     	;# 
   568  0F24                     	;# 
   569  0F25                     	;# 
   570  0F26                     	;# 
   571  0F27                     	;# 
   572  0F28                     	;# 
   573  0F29                     	;# 
   574  0F2A                     	;# 
   575  0F2B                     	;# 
   576  0F2C                     	;# 
   577  0F2D                     	;# 
   578  0F2E                     	;# 
   579  0F2F                     	;# 
   580  0F30                     	;# 
   581  0F31                     	;# 
   582  0F32                     	;# 
   583  0F38                     	;# 
   584  0F39                     	;# 
   585  0F3A                     	;# 
   586  0F3B                     	;# 
   587  0F3C                     	;# 
   588  0F3D                     	;# 
   589  0F3E                     	;# 
   590  0F3F                     	;# 
   591  0F40                     	;# 
   592  0F41                     	;# 
   593  0F43                     	;# 
   594  0F44                     	;# 
   595  0F45                     	;# 
   596  0F46                     	;# 
   597  0F47                     	;# 
   598  0F48                     	;# 
   599  0F49                     	;# 
   600  0F4A                     	;# 
   601  0F4B                     	;# 
   602  0F4C                     	;# 
   603  0F4E                     	;# 
   604  0F4F                     	;# 
   605  0F50                     	;# 
   606  0F51                     	;# 
   607  0F52                     	;# 
   608  0F53                     	;# 
   609  0F54                     	;# 
   610  0F55                     	;# 
   611  0F56                     	;# 
   612  0F57                     	;# 
   613  0F59                     	;# 
   614  0F5A                     	;# 
   615  0F5B                     	;# 
   616  0F5C                     	;# 
   617  0F5D                     	;# 
   618  0F61                     	;# 
   619  0F62                     	;# 
   620  0F64                     	;# 
   621  0F65                     	;# 
   622  0F66                     	;# 
   623  0F67                     	;# 
   624  0F68                     	;# 
   625  0F69                     	;# 
   626  0F6A                     	;# 
   627  0F6B                     	;# 
   628  0F6C                     	;# 
   629  0F6D                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0008                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  000F                     	;# 
   657  0010                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0013                     	;# 
   661  0014                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0017                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001C                     	;# 
   669  001C                     	;# 
   670  001D                     	;# 
   671  001D                     	;# 
   672  001E                     	;# 
   673  001F                     	;# 
   674  008C                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  008E                     	;# 
   679  008F                     	;# 
   680  0090                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010E                     	;# 
   699  010F                     	;# 
   700  0110                     	;# 
   701  0110                     	;# 
   702  0111                     	;# 
   703  0112                     	;# 
   704  0112                     	;# 
   705  0113                     	;# 
   706  0114                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0116                     	;# 
   711  0117                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  018F                     	;# 
   741  0190                     	;# 
   742  0191                     	;# 
   743  0192                     	;# 
   744  0196                     	;# 
   745  0197                     	;# 
   746  0198                     	;# 
   747  0199                     	;# 
   748  019A                     	;# 
   749  019B                     	;# 
   750  019C                     	;# 
   751  020C                     	;# 
   752  020C                     	;# 
   753  020D                     	;# 
   754  020E                     	;# 
   755  020F                     	;# 
   756  020F                     	;# 
   757  0210                     	;# 
   758  0210                     	;# 
   759  0211                     	;# 
   760  0211                     	;# 
   761  0212                     	;# 
   762  0212                     	;# 
   763  0213                     	;# 
   764  0214                     	;# 
   765  0215                     	;# 
   766  0215                     	;# 
   767  0216                     	;# 
   768  0216                     	;# 
   769  0217                     	;# 
   770  0217                     	;# 
   771  0218                     	;# 
   772  0218                     	;# 
   773  0219                     	;# 
   774  021A                     	;# 
   775  021B                     	;# 
   776  021B                     	;# 
   777  021C                     	;# 
   778  021C                     	;# 
   779  021D                     	;# 
   780  021D                     	;# 
   781  021E                     	;# 
   782  021F                     	;# 
   783  028C                     	;# 
   784  028C                     	;# 
   785  028D                     	;# 
   786  028D                     	;# 
   787  028E                     	;# 
   788  028F                     	;# 
   789  0290                     	;# 
   790  0290                     	;# 
   791  0291                     	;# 
   792  0292                     	;# 
   793  0292                     	;# 
   794  0293                     	;# 
   795  0293                     	;# 
   796  0294                     	;# 
   797  0295                     	;# 
   798  0296                     	;# 
   799  0296                     	;# 
   800  0297                     	;# 
   801  0298                     	;# 
   802  0298                     	;# 
   803  0299                     	;# 
   804  0299                     	;# 
   805  029A                     	;# 
   806  029B                     	;# 
   807  029C                     	;# 
   808  029C                     	;# 
   809  029D                     	;# 
   810  030C                     	;# 
   811  030C                     	;# 
   812  030D                     	;# 
   813  030E                     	;# 
   814  030F                     	;# 
   815  0310                     	;# 
   816  0310                     	;# 
   817  0311                     	;# 
   818  0312                     	;# 
   819  0313                     	;# 
   820  0314                     	;# 
   821  0314                     	;# 
   822  0315                     	;# 
   823  0316                     	;# 
   824  0317                     	;# 
   825  0318                     	;# 
   826  0318                     	;# 
   827  0319                     	;# 
   828  031A                     	;# 
   829  031B                     	;# 
   830  031C                     	;# 
   831  031C                     	;# 
   832  031D                     	;# 
   833  031E                     	;# 
   834  031F                     	;# 
   835  038C                     	;# 
   836  038C                     	;# 
   837  038D                     	;# 
   838  038E                     	;# 
   839  0390                     	;# 
   840  0390                     	;# 
   841  0391                     	;# 
   842  0392                     	;# 
   843  040C                     	;# 
   844  040D                     	;# 
   845  040E                     	;# 
   846  040F                     	;# 
   847  0410                     	;# 
   848  0411                     	;# 
   849  0416                     	;# 
   850  0416                     	;# 
   851  0417                     	;# 
   852  0418                     	;# 
   853  0418                     	;# 
   854  0419                     	;# 
   855  041A                     	;# 
   856  041A                     	;# 
   857  041B                     	;# 
   858  041C                     	;# 
   859  041C                     	;# 
   860  041D                     	;# 
   861  041E                     	;# 
   862  041F                     	;# 
   863  048C                     	;# 
   864  048C                     	;# 
   865  048D                     	;# 
   866  048E                     	;# 
   867  048F                     	;# 
   868  048F                     	;# 
   869  0490                     	;# 
   870  0491                     	;# 
   871  0492                     	;# 
   872  0492                     	;# 
   873  0493                     	;# 
   874  0494                     	;# 
   875  0495                     	;# 
   876  0495                     	;# 
   877  0496                     	;# 
   878  0497                     	;# 
   879  0498                     	;# 
   880  0499                     	;# 
   881  049A                     	;# 
   882  049B                     	;# 
   883  049C                     	;# 
   884  049D                     	;# 
   885  050C                     	;# 
   886  050C                     	;# 
   887  050D                     	;# 
   888  050E                     	;# 
   889  050F                     	;# 
   890  050F                     	;# 
   891  0510                     	;# 
   892  0511                     	;# 
   893  0512                     	;# 
   894  0512                     	;# 
   895  0513                     	;# 
   896  0514                     	;# 
   897  0515                     	;# 
   898  0515                     	;# 
   899  0516                     	;# 
   900  0517                     	;# 
   901  0518                     	;# 
   902  0519                     	;# 
   903  051A                     	;# 
   904  051B                     	;# 
   905  051C                     	;# 
   906  051D                     	;# 
   907  058C                     	;# 
   908  058C                     	;# 
   909  058D                     	;# 
   910  058E                     	;# 
   911  058F                     	;# 
   912  058F                     	;# 
   913  0590                     	;# 
   914  0591                     	;# 
   915  0592                     	;# 
   916  0593                     	;# 
   917  060C                     	;# 
   918  060D                     	;# 
   919  060E                     	;# 
   920  060F                     	;# 
   921  0610                     	;# 
   922  0611                     	;# 
   923  0612                     	;# 
   924  0613                     	;# 
   925  0614                     	;# 
   926  0616                     	;# 
   927  0617                     	;# 
   928  0618                     	;# 
   929  0619                     	;# 
   930  061A                     	;# 
   931  061B                     	;# 
   932  061C                     	;# 
   933  061D                     	;# 
   934  061E                     	;# 
   935  068C                     	;# 
   936  068D                     	;# 
   937  068E                     	;# 
   938  068F                     	;# 
   939  0690                     	;# 
   940  0691                     	;# 
   941  0692                     	;# 
   942  0693                     	;# 
   943  0694                     	;# 
   944  070C                     	;# 
   945  070D                     	;# 
   946  070E                     	;# 
   947  070F                     	;# 
   948  0710                     	;# 
   949  0711                     	;# 
   950  0712                     	;# 
   951  0713                     	;# 
   952  0714                     	;# 
   953  0716                     	;# 
   954  0717                     	;# 
   955  0718                     	;# 
   956  0719                     	;# 
   957  071A                     	;# 
   958  071B                     	;# 
   959  071C                     	;# 
   960  071D                     	;# 
   961  071E                     	;# 
   962  0796                     	;# 
   963  0797                     	;# 
   964  0798                     	;# 
   965  0799                     	;# 
   966  079A                     	;# 
   967  079B                     	;# 
   968  080C                     	;# 
   969  080D                     	;# 
   970  080E                     	;# 
   971  080F                     	;# 
   972  0810                     	;# 
   973  0811                     	;# 
   974  0812                     	;# 
   975  0813                     	;# 
   976  0814                     	;# 
   977  081A                     	;# 
   978  081B                     	;# 
   979  081C                     	;# 
   980  081D                     	;# 
   981  081E                     	;# 
   982  081F                     	;# 
   983  088C                     	;# 
   984  088D                     	;# 
   985  088E                     	;# 
   986  088F                     	;# 
   987  0890                     	;# 
   988  0891                     	;# 
   989  0892                     	;# 
   990  0893                     	;# 
   991  0895                     	;# 
   992  0896                     	;# 
   993  0897                     	;# 
   994  0898                     	;# 
   995  0899                     	;# 
   996  089A                     	;# 
   997  089B                     	;# 
   998  090C                     	;# 
   999  090E                     	;# 
  1000  090F                     	;# 
  1001  091F                     	;# 
  1002  098F                     	;# 
  1003  098F                     	;# 
  1004  0990                     	;# 
  1005  0991                     	;# 
  1006  0992                     	;# 
  1007  0993                     	;# 
  1008  0994                     	;# 
  1009  0995                     	;# 
  1010  0996                     	;# 
  1011  0997                     	;# 
  1012  0E0F                     	;# 
  1013  0E10                     	;# 
  1014  0E11                     	;# 
  1015  0E12                     	;# 
  1016  0E13                     	;# 
  1017  0E14                     	;# 
  1018  0E15                     	;# 
  1019  0E16                     	;# 
  1020  0E17                     	;# 
  1021  0E18                     	;# 
  1022  0E19                     	;# 
  1023  0E1A                     	;# 
  1024  0E1B                     	;# 
  1025  0E1C                     	;# 
  1026  0E1D                     	;# 
  1027  0E1E                     	;# 
  1028  0E1F                     	;# 
  1029  0E20                     	;# 
  1030  0E21                     	;# 
  1031  0E22                     	;# 
  1032  0E23                     	;# 
  1033  0E24                     	;# 
  1034  0E25                     	;# 
  1035  0E26                     	;# 
  1036  0E27                     	;# 
  1037  0E28                     	;# 
  1038  0E29                     	;# 
  1039  0E2A                     	;# 
  1040  0E2B                     	;# 
  1041  0E2C                     	;# 
  1042  0E2D                     	;# 
  1043  0E2E                     	;# 
  1044  0E2F                     	;# 
  1045  0E30                     	;# 
  1046  0E31                     	;# 
  1047  0E32                     	;# 
  1048  0E33                     	;# 
  1049  0E34                     	;# 
  1050  0E35                     	;# 
  1051  0E36                     	;# 
  1052  0E37                     	;# 
  1053  0E8F                     	;# 
  1054  0E90                     	;# 
  1055  0E91                     	;# 
  1056  0E92                     	;# 
  1057  0E93                     	;# 
  1058  0E94                     	;# 
  1059  0E95                     	;# 
  1060  0E96                     	;# 
  1061  0E97                     	;# 
  1062  0E9C                     	;# 
  1063  0E9D                     	;# 
  1064  0E9E                     	;# 
  1065  0EA1                     	;# 
  1066  0EA2                     	;# 
  1067  0EA3                     	;# 
  1068  0EA4                     	;# 
  1069  0EA5                     	;# 
  1070  0EA9                     	;# 
  1071  0EAA                     	;# 
  1072  0EAB                     	;# 
  1073  0EAC                     	;# 
  1074  0EB1                     	;# 
  1075  0EB2                     	;# 
  1076  0EB3                     	;# 
  1077  0EB8                     	;# 
  1078  0EB9                     	;# 
  1079  0EBA                     	;# 
  1080  0EBB                     	;# 
  1081  0EBC                     	;# 
  1082  0EBD                     	;# 
  1083  0EBE                     	;# 
  1084  0EC3                     	;# 
  1085  0EC5                     	;# 
  1086  0EC6                     	;# 
  1087  0EC7                     	;# 
  1088  0EC8                     	;# 
  1089  0EC9                     	;# 
  1090  0ECA                     	;# 
  1091  0ECB                     	;# 
  1092  0ECC                     	;# 
  1093  0F10                     	;# 
  1094  0F11                     	;# 
  1095  0F12                     	;# 
  1096  0F13                     	;# 
  1097  0F14                     	;# 
  1098  0F15                     	;# 
  1099  0F16                     	;# 
  1100  0F17                     	;# 
  1101  0F18                     	;# 
  1102  0F19                     	;# 
  1103  0F1A                     	;# 
  1104  0F1B                     	;# 
  1105  0F1C                     	;# 
  1106  0F1D                     	;# 
  1107  0F1E                     	;# 
  1108  0F1F                     	;# 
  1109  0F20                     	;# 
  1110  0F21                     	;# 
  1111  0F22                     	;# 
  1112  0F23                     	;# 
  1113  0F24                     	;# 
  1114  0F25                     	;# 
  1115  0F26                     	;# 
  1116  0F27                     	;# 
  1117  0F28                     	;# 
  1118  0F29                     	;# 
  1119  0F2A                     	;# 
  1120  0F2B                     	;# 
  1121  0F2C                     	;# 
  1122  0F2D                     	;# 
  1123  0F2E                     	;# 
  1124  0F2F                     	;# 
  1125  0F30                     	;# 
  1126  0F31                     	;# 
  1127  0F32                     	;# 
  1128  0F38                     	;# 
  1129  0F39                     	;# 
  1130  0F3A                     	;# 
  1131  0F3B                     	;# 
  1132  0F3C                     	;# 
  1133  0F3D                     	;# 
  1134  0F3E                     	;# 
  1135  0F3F                     	;# 
  1136  0F40                     	;# 
  1137  0F41                     	;# 
  1138  0F43                     	;# 
  1139  0F44                     	;# 
  1140  0F45                     	;# 
  1141  0F46                     	;# 
  1142  0F47                     	;# 
  1143  0F48                     	;# 
  1144  0F49                     	;# 
  1145  0F4A                     	;# 
  1146  0F4B                     	;# 
  1147  0F4C                     	;# 
  1148  0F4E                     	;# 
  1149  0F4F                     	;# 
  1150  0F50                     	;# 
  1151  0F51                     	;# 
  1152  0F52                     	;# 
  1153  0F53                     	;# 
  1154  0F54                     	;# 
  1155  0F55                     	;# 
  1156  0F56                     	;# 
  1157  0F57                     	;# 
  1158  0F59                     	;# 
  1159  0F5A                     	;# 
  1160  0F5B                     	;# 
  1161  0F5C                     	;# 
  1162  0F5D                     	;# 
  1163  0F61                     	;# 
  1164  0F62                     	;# 
  1165  0F64                     	;# 
  1166  0F65                     	;# 
  1167  0F66                     	;# 
  1168  0F67                     	;# 
  1169  0F68                     	;# 
  1170  0F69                     	;# 
  1171  0F6A                     	;# 
  1172  0F6B                     	;# 
  1173  0F6C                     	;# 
  1174  0F6D                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  0000                     	;# 
  1187  0001                     	;# 
  1188  0002                     	;# 
  1189  0003                     	;# 
  1190  0004                     	;# 
  1191  0005                     	;# 
  1192  0006                     	;# 
  1193  0007                     	;# 
  1194  0008                     	;# 
  1195  0009                     	;# 
  1196  000A                     	;# 
  1197  000B                     	;# 
  1198  000C                     	;# 
  1199  000D                     	;# 
  1200  000E                     	;# 
  1201  000F                     	;# 
  1202  0010                     	;# 
  1203  0011                     	;# 
  1204  0012                     	;# 
  1205  0013                     	;# 
  1206  0014                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001C                     	;# 
  1214  001C                     	;# 
  1215  001D                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  008C                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  008E                     	;# 
  1224  008F                     	;# 
  1225  0090                     	;# 
  1226  0090                     	;# 
  1227  0091                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009A                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  010C                     	;# 
  1241  010D                     	;# 
  1242  010E                     	;# 
  1243  010E                     	;# 
  1244  010F                     	;# 
  1245  0110                     	;# 
  1246  0110                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0116                     	;# 
  1256  0117                     	;# 
  1257  0119                     	;# 
  1258  0119                     	;# 
  1259  0119                     	;# 
  1260  011A                     	;# 
  1261  011A                     	;# 
  1262  011A                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011B                     	;# 
  1268  011C                     	;# 
  1269  011C                     	;# 
  1270  011C                     	;# 
  1271  011D                     	;# 
  1272  011D                     	;# 
  1273  011D                     	;# 
  1274  011E                     	;# 
  1275  011E                     	;# 
  1276  011E                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  011F                     	;# 
  1282  018C                     	;# 
  1283  018D                     	;# 
  1284  018E                     	;# 
  1285  018F                     	;# 
  1286  0190                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0196                     	;# 
  1290  0197                     	;# 
  1291  0198                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  020C                     	;# 
  1297  020C                     	;# 
  1298  020D                     	;# 
  1299  020E                     	;# 
  1300  020F                     	;# 
  1301  020F                     	;# 
  1302  0210                     	;# 
  1303  0210                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0214                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0216                     	;# 
  1313  0216                     	;# 
  1314  0217                     	;# 
  1315  0217                     	;# 
  1316  0218                     	;# 
  1317  0218                     	;# 
  1318  0219                     	;# 
  1319  021A                     	;# 
  1320  021B                     	;# 
  1321  021B                     	;# 
  1322  021C                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021D                     	;# 
  1326  021E                     	;# 
  1327  021F                     	;# 
  1328  028C                     	;# 
  1329  028C                     	;# 
  1330  028D                     	;# 
  1331  028D                     	;# 
  1332  028E                     	;# 
  1333  028F                     	;# 
  1334  0290                     	;# 
  1335  0290                     	;# 
  1336  0291                     	;# 
  1337  0292                     	;# 
  1338  0292                     	;# 
  1339  0293                     	;# 
  1340  0293                     	;# 
  1341  0294                     	;# 
  1342  0295                     	;# 
  1343  0296                     	;# 
  1344  0296                     	;# 
  1345  0297                     	;# 
  1346  0298                     	;# 
  1347  0298                     	;# 
  1348  0299                     	;# 
  1349  0299                     	;# 
  1350  029A                     	;# 
  1351  029B                     	;# 
  1352  029C                     	;# 
  1353  029C                     	;# 
  1354  029D                     	;# 
  1355  030C                     	;# 
  1356  030C                     	;# 
  1357  030D                     	;# 
  1358  030E                     	;# 
  1359  030F                     	;# 
  1360  0310                     	;# 
  1361  0310                     	;# 
  1362  0311                     	;# 
  1363  0312                     	;# 
  1364  0313                     	;# 
  1365  0314                     	;# 
  1366  0314                     	;# 
  1367  0315                     	;# 
  1368  0316                     	;# 
  1369  0317                     	;# 
  1370  0318                     	;# 
  1371  0318                     	;# 
  1372  0319                     	;# 
  1373  031A                     	;# 
  1374  031B                     	;# 
  1375  031C                     	;# 
  1376  031C                     	;# 
  1377  031D                     	;# 
  1378  031E                     	;# 
  1379  031F                     	;# 
  1380  038C                     	;# 
  1381  038C                     	;# 
  1382  038D                     	;# 
  1383  038E                     	;# 
  1384  0390                     	;# 
  1385  0390                     	;# 
  1386  0391                     	;# 
  1387  0392                     	;# 
  1388  040C                     	;# 
  1389  040D                     	;# 
  1390  040E                     	;# 
  1391  040F                     	;# 
  1392  0410                     	;# 
  1393  0411                     	;# 
  1394  0416                     	;# 
  1395  0416                     	;# 
  1396  0417                     	;# 
  1397  0418                     	;# 
  1398  0418                     	;# 
  1399  0419                     	;# 
  1400  041A                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041C                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  048C                     	;# 
  1409  048C                     	;# 
  1410  048D                     	;# 
  1411  048E                     	;# 
  1412  048F                     	;# 
  1413  048F                     	;# 
  1414  0490                     	;# 
  1415  0491                     	;# 
  1416  0492                     	;# 
  1417  0492                     	;# 
  1418  0493                     	;# 
  1419  0494                     	;# 
  1420  0495                     	;# 
  1421  0495                     	;# 
  1422  0496                     	;# 
  1423  0497                     	;# 
  1424  0498                     	;# 
  1425  0499                     	;# 
  1426  049A                     	;# 
  1427  049B                     	;# 
  1428  049C                     	;# 
  1429  049D                     	;# 
  1430  050C                     	;# 
  1431  050C                     	;# 
  1432  050D                     	;# 
  1433  050E                     	;# 
  1434  050F                     	;# 
  1435  050F                     	;# 
  1436  0510                     	;# 
  1437  0511                     	;# 
  1438  0512                     	;# 
  1439  0512                     	;# 
  1440  0513                     	;# 
  1441  0514                     	;# 
  1442  0515                     	;# 
  1443  0515                     	;# 
  1444  0516                     	;# 
  1445  0517                     	;# 
  1446  0518                     	;# 
  1447  0519                     	;# 
  1448  051A                     	;# 
  1449  051B                     	;# 
  1450  051C                     	;# 
  1451  051D                     	;# 
  1452  058C                     	;# 
  1453  058C                     	;# 
  1454  058D                     	;# 
  1455  058E                     	;# 
  1456  058F                     	;# 
  1457  058F                     	;# 
  1458  0590                     	;# 
  1459  0591                     	;# 
  1460  0592                     	;# 
  1461  0593                     	;# 
  1462  060C                     	;# 
  1463  060D                     	;# 
  1464  060E                     	;# 
  1465  060F                     	;# 
  1466  0610                     	;# 
  1467  0611                     	;# 
  1468  0612                     	;# 
  1469  0613                     	;# 
  1470  0614                     	;# 
  1471  0616                     	;# 
  1472  0617                     	;# 
  1473  0618                     	;# 
  1474  0619                     	;# 
  1475  061A                     	;# 
  1476  061B                     	;# 
  1477  061C                     	;# 
  1478  061D                     	;# 
  1479  061E                     	;# 
  1480  068C                     	;# 
  1481  068D                     	;# 
  1482  068E                     	;# 
  1483  068F                     	;# 
  1484  0690                     	;# 
  1485  0691                     	;# 
  1486  0692                     	;# 
  1487  0693                     	;# 
  1488  0694                     	;# 
  1489  070C                     	;# 
  1490  070D                     	;# 
  1491  070E                     	;# 
  1492  070F                     	;# 
  1493  0710                     	;# 
  1494  0711                     	;# 
  1495  0712                     	;# 
  1496  0713                     	;# 
  1497  0714                     	;# 
  1498  0716                     	;# 
  1499  0717                     	;# 
  1500  0718                     	;# 
  1501  0719                     	;# 
  1502  071A                     	;# 
  1503  071B                     	;# 
  1504  071C                     	;# 
  1505  071D                     	;# 
  1506  071E                     	;# 
  1507  0796                     	;# 
  1508  0797                     	;# 
  1509  0798                     	;# 
  1510  0799                     	;# 
  1511  079A                     	;# 
  1512  079B                     	;# 
  1513  080C                     	;# 
  1514  080D                     	;# 
  1515  080E                     	;# 
  1516  080F                     	;# 
  1517  0810                     	;# 
  1518  0811                     	;# 
  1519  0812                     	;# 
  1520  0813                     	;# 
  1521  0814                     	;# 
  1522  081A                     	;# 
  1523  081B                     	;# 
  1524  081C                     	;# 
  1525  081D                     	;# 
  1526  081E                     	;# 
  1527  081F                     	;# 
  1528  088C                     	;# 
  1529  088D                     	;# 
  1530  088E                     	;# 
  1531  088F                     	;# 
  1532  0890                     	;# 
  1533  0891                     	;# 
  1534  0892                     	;# 
  1535  0893                     	;# 
  1536  0895                     	;# 
  1537  0896                     	;# 
  1538  0897                     	;# 
  1539  0898                     	;# 
  1540  0899                     	;# 
  1541  089A                     	;# 
  1542  089B                     	;# 
  1543  090C                     	;# 
  1544  090E                     	;# 
  1545  090F                     	;# 
  1546  091F                     	;# 
  1547  098F                     	;# 
  1548  098F                     	;# 
  1549  0990                     	;# 
  1550  0991                     	;# 
  1551  0992                     	;# 
  1552  0993                     	;# 
  1553  0994                     	;# 
  1554  0995                     	;# 
  1555  0996                     	;# 
  1556  0997                     	;# 
  1557  0E0F                     	;# 
  1558  0E10                     	;# 
  1559  0E11                     	;# 
  1560  0E12                     	;# 
  1561  0E13                     	;# 
  1562  0E14                     	;# 
  1563  0E15                     	;# 
  1564  0E16                     	;# 
  1565  0E17                     	;# 
  1566  0E18                     	;# 
  1567  0E19                     	;# 
  1568  0E1A                     	;# 
  1569  0E1B                     	;# 
  1570  0E1C                     	;# 
  1571  0E1D                     	;# 
  1572  0E1E                     	;# 
  1573  0E1F                     	;# 
  1574  0E20                     	;# 
  1575  0E21                     	;# 
  1576  0E22                     	;# 
  1577  0E23                     	;# 
  1578  0E24                     	;# 
  1579  0E25                     	;# 
  1580  0E26                     	;# 
  1581  0E27                     	;# 
  1582  0E28                     	;# 
  1583  0E29                     	;# 
  1584  0E2A                     	;# 
  1585  0E2B                     	;# 
  1586  0E2C                     	;# 
  1587  0E2D                     	;# 
  1588  0E2E                     	;# 
  1589  0E2F                     	;# 
  1590  0E30                     	;# 
  1591  0E31                     	;# 
  1592  0E32                     	;# 
  1593  0E33                     	;# 
  1594  0E34                     	;# 
  1595  0E35                     	;# 
  1596  0E36                     	;# 
  1597  0E37                     	;# 
  1598  0E8F                     	;# 
  1599  0E90                     	;# 
  1600  0E91                     	;# 
  1601  0E92                     	;# 
  1602  0E93                     	;# 
  1603  0E94                     	;# 
  1604  0E95                     	;# 
  1605  0E96                     	;# 
  1606  0E97                     	;# 
  1607  0E9C                     	;# 
  1608  0E9D                     	;# 
  1609  0E9E                     	;# 
  1610  0EA1                     	;# 
  1611  0EA2                     	;# 
  1612  0EA3                     	;# 
  1613  0EA4                     	;# 
  1614  0EA5                     	;# 
  1615  0EA9                     	;# 
  1616  0EAA                     	;# 
  1617  0EAB                     	;# 
  1618  0EAC                     	;# 
  1619  0EB1                     	;# 
  1620  0EB2                     	;# 
  1621  0EB3                     	;# 
  1622  0EB8                     	;# 
  1623  0EB9                     	;# 
  1624  0EBA                     	;# 
  1625  0EBB                     	;# 
  1626  0EBC                     	;# 
  1627  0EBD                     	;# 
  1628  0EBE                     	;# 
  1629  0EC3                     	;# 
  1630  0EC5                     	;# 
  1631  0EC6                     	;# 
  1632  0EC7                     	;# 
  1633  0EC8                     	;# 
  1634  0EC9                     	;# 
  1635  0ECA                     	;# 
  1636  0ECB                     	;# 
  1637  0ECC                     	;# 
  1638  0F10                     	;# 
  1639  0F11                     	;# 
  1640  0F12                     	;# 
  1641  0F13                     	;# 
  1642  0F14                     	;# 
  1643  0F15                     	;# 
  1644  0F16                     	;# 
  1645  0F17                     	;# 
  1646  0F18                     	;# 
  1647  0F19                     	;# 
  1648  0F1A                     	;# 
  1649  0F1B                     	;# 
  1650  0F1C                     	;# 
  1651  0F1D                     	;# 
  1652  0F1E                     	;# 
  1653  0F1F                     	;# 
  1654  0F20                     	;# 
  1655  0F21                     	;# 
  1656  0F22                     	;# 
  1657  0F23                     	;# 
  1658  0F24                     	;# 
  1659  0F25                     	;# 
  1660  0F26                     	;# 
  1661  0F27                     	;# 
  1662  0F28                     	;# 
  1663  0F29                     	;# 
  1664  0F2A                     	;# 
  1665  0F2B                     	;# 
  1666  0F2C                     	;# 
  1667  0F2D                     	;# 
  1668  0F2E                     	;# 
  1669  0F2F                     	;# 
  1670  0F30                     	;# 
  1671  0F31                     	;# 
  1672  0F32                     	;# 
  1673  0F38                     	;# 
  1674  0F39                     	;# 
  1675  0F3A                     	;# 
  1676  0F3B                     	;# 
  1677  0F3C                     	;# 
  1678  0F3D                     	;# 
  1679  0F3E                     	;# 
  1680  0F3F                     	;# 
  1681  0F40                     	;# 
  1682  0F41                     	;# 
  1683  0F43                     	;# 
  1684  0F44                     	;# 
  1685  0F45                     	;# 
  1686  0F46                     	;# 
  1687  0F47                     	;# 
  1688  0F48                     	;# 
  1689  0F49                     	;# 
  1690  0F4A                     	;# 
  1691  0F4B                     	;# 
  1692  0F4C                     	;# 
  1693  0F4E                     	;# 
  1694  0F4F                     	;# 
  1695  0F50                     	;# 
  1696  0F51                     	;# 
  1697  0F52                     	;# 
  1698  0F53                     	;# 
  1699  0F54                     	;# 
  1700  0F55                     	;# 
  1701  0F56                     	;# 
  1702  0F57                     	;# 
  1703  0F59                     	;# 
  1704  0F5A                     	;# 
  1705  0F5B                     	;# 
  1706  0F5C                     	;# 
  1707  0F5D                     	;# 
  1708  0F61                     	;# 
  1709  0F62                     	;# 
  1710  0F64                     	;# 
  1711  0F65                     	;# 
  1712  0F66                     	;# 
  1713  0F67                     	;# 
  1714  0F68                     	;# 
  1715  0F69                     	;# 
  1716  0F6A                     	;# 
  1717  0F6B                     	;# 
  1718  0F6C                     	;# 
  1719  0F6D                     	;# 
  1720  0FE4                     	;# 
  1721  0FE5                     	;# 
  1722  0FE6                     	;# 
  1723  0FE7                     	;# 
  1724  0FE8                     	;# 
  1725  0FE9                     	;# 
  1726  0FEA                     	;# 
  1727  0FEB                     	;# 
  1728  0FED                     	;# 
  1729  0FEE                     	;# 
  1730  0FEF                     	;# 
  1731  0000                     	;# 
  1732  0001                     	;# 
  1733  0002                     	;# 
  1734  0003                     	;# 
  1735  0004                     	;# 
  1736  0005                     	;# 
  1737  0006                     	;# 
  1738  0007                     	;# 
  1739  0008                     	;# 
  1740  0009                     	;# 
  1741  000A                     	;# 
  1742  000B                     	;# 
  1743  000C                     	;# 
  1744  000D                     	;# 
  1745  000E                     	;# 
  1746  000F                     	;# 
  1747  0010                     	;# 
  1748  0011                     	;# 
  1749  0012                     	;# 
  1750  0013                     	;# 
  1751  0014                     	;# 
  1752  0015                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001C                     	;# 
  1759  001C                     	;# 
  1760  001D                     	;# 
  1761  001D                     	;# 
  1762  001E                     	;# 
  1763  001F                     	;# 
  1764  008C                     	;# 
  1765  008C                     	;# 
  1766  008D                     	;# 
  1767  008E                     	;# 
  1768  008E                     	;# 
  1769  008F                     	;# 
  1770  0090                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0093                     	;# 
  1774  0094                     	;# 
  1775  0095                     	;# 
  1776  0096                     	;# 
  1777  0097                     	;# 
  1778  0098                     	;# 
  1779  0099                     	;# 
  1780  009A                     	;# 
  1781  009B                     	;# 
  1782  009C                     	;# 
  1783  009D                     	;# 
  1784  009E                     	;# 
  1785  010C                     	;# 
  1786  010D                     	;# 
  1787  010E                     	;# 
  1788  010E                     	;# 
  1789  010F                     	;# 
  1790  0110                     	;# 
  1791  0110                     	;# 
  1792  0111                     	;# 
  1793  0112                     	;# 
  1794  0112                     	;# 
  1795  0113                     	;# 
  1796  0114                     	;# 
  1797  0114                     	;# 
  1798  0115                     	;# 
  1799  0116                     	;# 
  1800  0116                     	;# 
  1801  0117                     	;# 
  1802  0119                     	;# 
  1803  0119                     	;# 
  1804  0119                     	;# 
  1805  011A                     	;# 
  1806  011A                     	;# 
  1807  011A                     	;# 
  1808  011B                     	;# 
  1809  011B                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011C                     	;# 
  1814  011C                     	;# 
  1815  011C                     	;# 
  1816  011D                     	;# 
  1817  011D                     	;# 
  1818  011D                     	;# 
  1819  011E                     	;# 
  1820  011E                     	;# 
  1821  011E                     	;# 
  1822  011F                     	;# 
  1823  011F                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  018C                     	;# 
  1828  018D                     	;# 
  1829  018E                     	;# 
  1830  018F                     	;# 
  1831  0190                     	;# 
  1832  0191                     	;# 
  1833  0192                     	;# 
  1834  0196                     	;# 
  1835  0197                     	;# 
  1836  0198                     	;# 
  1837  0199                     	;# 
  1838  019A                     	;# 
  1839  019B                     	;# 
  1840  019C                     	;# 
  1841  020C                     	;# 
  1842  020C                     	;# 
  1843  020D                     	;# 
  1844  020E                     	;# 
  1845  020F                     	;# 
  1846  020F                     	;# 
  1847  0210                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0214                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  0218                     	;# 
  1862  0218                     	;# 
  1863  0219                     	;# 
  1864  021A                     	;# 
  1865  021B                     	;# 
  1866  021B                     	;# 
  1867  021C                     	;# 
  1868  021C                     	;# 
  1869  021D                     	;# 
  1870  021D                     	;# 
  1871  021E                     	;# 
  1872  021F                     	;# 
  1873  028C                     	;# 
  1874  028C                     	;# 
  1875  028D                     	;# 
  1876  028D                     	;# 
  1877  028E                     	;# 
  1878  028F                     	;# 
  1879  0290                     	;# 
  1880  0290                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0292                     	;# 
  1884  0293                     	;# 
  1885  0293                     	;# 
  1886  0294                     	;# 
  1887  0295                     	;# 
  1888  0296                     	;# 
  1889  0296                     	;# 
  1890  0297                     	;# 
  1891  0298                     	;# 
  1892  0298                     	;# 
  1893  0299                     	;# 
  1894  0299                     	;# 
  1895  029A                     	;# 
  1896  029B                     	;# 
  1897  029C                     	;# 
  1898  029C                     	;# 
  1899  029D                     	;# 
  1900  030C                     	;# 
  1901  030C                     	;# 
  1902  030D                     	;# 
  1903  030E                     	;# 
  1904  030F                     	;# 
  1905  0310                     	;# 
  1906  0310                     	;# 
  1907  0311                     	;# 
  1908  0312                     	;# 
  1909  0313                     	;# 
  1910  0314                     	;# 
  1911  0314                     	;# 
  1912  0315                     	;# 
  1913  0316                     	;# 
  1914  0317                     	;# 
  1915  0318                     	;# 
  1916  0318                     	;# 
  1917  0319                     	;# 
  1918  031A                     	;# 
  1919  031B                     	;# 
  1920  031C                     	;# 
  1921  031C                     	;# 
  1922  031D                     	;# 
  1923  031E                     	;# 
  1924  031F                     	;# 
  1925  038C                     	;# 
  1926  038C                     	;# 
  1927  038D                     	;# 
  1928  038E                     	;# 
  1929  0390                     	;# 
  1930  0390                     	;# 
  1931  0391                     	;# 
  1932  0392                     	;# 
  1933  040C                     	;# 
  1934  040D                     	;# 
  1935  040E                     	;# 
  1936  040F                     	;# 
  1937  0410                     	;# 
  1938  0411                     	;# 
  1939  0416                     	;# 
  1940  0416                     	;# 
  1941  0417                     	;# 
  1942  0418                     	;# 
  1943  0418                     	;# 
  1944  0419                     	;# 
  1945  041A                     	;# 
  1946  041A                     	;# 
  1947  041B                     	;# 
  1948  041C                     	;# 
  1949  041C                     	;# 
  1950  041D                     	;# 
  1951  041E                     	;# 
  1952  041F                     	;# 
  1953  048C                     	;# 
  1954  048C                     	;# 
  1955  048D                     	;# 
  1956  048E                     	;# 
  1957  048F                     	;# 
  1958  048F                     	;# 
  1959  0490                     	;# 
  1960  0491                     	;# 
  1961  0492                     	;# 
  1962  0492                     	;# 
  1963  0493                     	;# 
  1964  0494                     	;# 
  1965  0495                     	;# 
  1966  0495                     	;# 
  1967  0496                     	;# 
  1968  0497                     	;# 
  1969  0498                     	;# 
  1970  0499                     	;# 
  1971  049A                     	;# 
  1972  049B                     	;# 
  1973  049C                     	;# 
  1974  049D                     	;# 
  1975  050C                     	;# 
  1976  050C                     	;# 
  1977  050D                     	;# 
  1978  050E                     	;# 
  1979  050F                     	;# 
  1980  050F                     	;# 
  1981  0510                     	;# 
  1982  0511                     	;# 
  1983  0512                     	;# 
  1984  0512                     	;# 
  1985  0513                     	;# 
  1986  0514                     	;# 
  1987  0515                     	;# 
  1988  0515                     	;# 
  1989  0516                     	;# 
  1990  0517                     	;# 
  1991  0518                     	;# 
  1992  0519                     	;# 
  1993  051A                     	;# 
  1994  051B                     	;# 
  1995  051C                     	;# 
  1996  051D                     	;# 
  1997  058C                     	;# 
  1998  058C                     	;# 
  1999  058D                     	;# 
  2000  058E                     	;# 
  2001  058F                     	;# 
  2002  058F                     	;# 
  2003  0590                     	;# 
  2004  0591                     	;# 
  2005  0592                     	;# 
  2006  0593                     	;# 
  2007  060C                     	;# 
  2008  060D                     	;# 
  2009  060E                     	;# 
  2010  060F                     	;# 
  2011  0610                     	;# 
  2012  0611                     	;# 
  2013  0612                     	;# 
  2014  0613                     	;# 
  2015  0614                     	;# 
  2016  0616                     	;# 
  2017  0617                     	;# 
  2018  0618                     	;# 
  2019  0619                     	;# 
  2020  061A                     	;# 
  2021  061B                     	;# 
  2022  061C                     	;# 
  2023  061D                     	;# 
  2024  061E                     	;# 
  2025  068C                     	;# 
  2026  068D                     	;# 
  2027  068E                     	;# 
  2028  068F                     	;# 
  2029  0690                     	;# 
  2030  0691                     	;# 
  2031  0692                     	;# 
  2032  0693                     	;# 
  2033  0694                     	;# 
  2034  070C                     	;# 
  2035  070D                     	;# 
  2036  070E                     	;# 
  2037  070F                     	;# 
  2038  0710                     	;# 
  2039  0711                     	;# 
  2040  0712                     	;# 
  2041  0713                     	;# 
  2042  0714                     	;# 
  2043  0716                     	;# 
  2044  0717                     	;# 
  2045  0718                     	;# 
  2046  0719                     	;# 
  2047  071A                     	;# 
  2048  071B                     	;# 
  2049  071C                     	;# 
  2050  071D                     	;# 
  2051  071E                     	;# 
  2052  0796                     	;# 
  2053  0797                     	;# 
  2054  0798                     	;# 
  2055  0799                     	;# 
  2056  079A                     	;# 
  2057  079B                     	;# 
  2058  080C                     	;# 
  2059  080D                     	;# 
  2060  080E                     	;# 
  2061  080F                     	;# 
  2062  0810                     	;# 
  2063  0811                     	;# 
  2064  0812                     	;# 
  2065  0813                     	;# 
  2066  0814                     	;# 
  2067  081A                     	;# 
  2068  081B                     	;# 
  2069  081C                     	;# 
  2070  081D                     	;# 
  2071  081E                     	;# 
  2072  081F                     	;# 
  2073  088C                     	;# 
  2074  088D                     	;# 
  2075  088E                     	;# 
  2076  088F                     	;# 
  2077  0890                     	;# 
  2078  0891                     	;# 
  2079  0892                     	;# 
  2080  0893                     	;# 
  2081  0895                     	;# 
  2082  0896                     	;# 
  2083  0897                     	;# 
  2084  0898                     	;# 
  2085  0899                     	;# 
  2086  089A                     	;# 
  2087  089B                     	;# 
  2088  090C                     	;# 
  2089  090E                     	;# 
  2090  090F                     	;# 
  2091  091F                     	;# 
  2092  098F                     	;# 
  2093  098F                     	;# 
  2094  0990                     	;# 
  2095  0991                     	;# 
  2096  0992                     	;# 
  2097  0993                     	;# 
  2098  0994                     	;# 
  2099  0995                     	;# 
  2100  0996                     	;# 
  2101  0997                     	;# 
  2102  0E0F                     	;# 
  2103  0E10                     	;# 
  2104  0E11                     	;# 
  2105  0E12                     	;# 
  2106  0E13                     	;# 
  2107  0E14                     	;# 
  2108  0E15                     	;# 
  2109  0E16                     	;# 
  2110  0E17                     	;# 
  2111  0E18                     	;# 
  2112  0E19                     	;# 
  2113  0E1A                     	;# 
  2114  0E1B                     	;# 
  2115  0E1C                     	;# 
  2116  0E1D                     	;# 
  2117  0E1E                     	;# 
  2118  0E1F                     	;# 
  2119  0E20                     	;# 
  2120  0E21                     	;# 
  2121  0E22                     	;# 
  2122  0E23                     	;# 
  2123  0E24                     	;# 
  2124  0E25                     	;# 
  2125  0E26                     	;# 
  2126  0E27                     	;# 
  2127  0E28                     	;# 
  2128  0E29                     	;# 
  2129  0E2A                     	;# 
  2130  0E2B                     	;# 
  2131  0E2C                     	;# 
  2132  0E2D                     	;# 
  2133  0E2E                     	;# 
  2134  0E2F                     	;# 
  2135  0E30                     	;# 
  2136  0E31                     	;# 
  2137  0E32                     	;# 
  2138  0E33                     	;# 
  2139  0E34                     	;# 
  2140  0E35                     	;# 
  2141  0E36                     	;# 
  2142  0E37                     	;# 
  2143  0E8F                     	;# 
  2144  0E90                     	;# 
  2145  0E91                     	;# 
  2146  0E92                     	;# 
  2147  0E93                     	;# 
  2148  0E94                     	;# 
  2149  0E95                     	;# 
  2150  0E96                     	;# 
  2151  0E97                     	;# 
  2152  0E9C                     	;# 
  2153  0E9D                     	;# 
  2154  0E9E                     	;# 
  2155  0EA1                     	;# 
  2156  0EA2                     	;# 
  2157  0EA3                     	;# 
  2158  0EA4                     	;# 
  2159  0EA5                     	;# 
  2160  0EA9                     	;# 
  2161  0EAA                     	;# 
  2162  0EAB                     	;# 
  2163  0EAC                     	;# 
  2164  0EB1                     	;# 
  2165  0EB2                     	;# 
  2166  0EB3                     	;# 
  2167  0EB8                     	;# 
  2168  0EB9                     	;# 
  2169  0EBA                     	;# 
  2170  0EBB                     	;# 
  2171  0EBC                     	;# 
  2172  0EBD                     	;# 
  2173  0EBE                     	;# 
  2174  0EC3                     	;# 
  2175  0EC5                     	;# 
  2176  0EC6                     	;# 
  2177  0EC7                     	;# 
  2178  0EC8                     	;# 
  2179  0EC9                     	;# 
  2180  0ECA                     	;# 
  2181  0ECB                     	;# 
  2182  0ECC                     	;# 
  2183  0F10                     	;# 
  2184  0F11                     	;# 
  2185  0F12                     	;# 
  2186  0F13                     	;# 
  2187  0F14                     	;# 
  2188  0F15                     	;# 
  2189  0F16                     	;# 
  2190  0F17                     	;# 
  2191  0F18                     	;# 
  2192  0F19                     	;# 
  2193  0F1A                     	;# 
  2194  0F1B                     	;# 
  2195  0F1C                     	;# 
  2196  0F1D                     	;# 
  2197  0F1E                     	;# 
  2198  0F1F                     	;# 
  2199  0F20                     	;# 
  2200  0F21                     	;# 
  2201  0F22                     	;# 
  2202  0F23                     	;# 
  2203  0F24                     	;# 
  2204  0F25                     	;# 
  2205  0F26                     	;# 
  2206  0F27                     	;# 
  2207  0F28                     	;# 
  2208  0F29                     	;# 
  2209  0F2A                     	;# 
  2210  0F2B                     	;# 
  2211  0F2C                     	;# 
  2212  0F2D                     	;# 
  2213  0F2E                     	;# 
  2214  0F2F                     	;# 
  2215  0F30                     	;# 
  2216  0F31                     	;# 
  2217  0F32                     	;# 
  2218  0F38                     	;# 
  2219  0F39                     	;# 
  2220  0F3A                     	;# 
  2221  0F3B                     	;# 
  2222  0F3C                     	;# 
  2223  0F3D                     	;# 
  2224  0F3E                     	;# 
  2225  0F3F                     	;# 
  2226  0F40                     	;# 
  2227  0F41                     	;# 
  2228  0F43                     	;# 
  2229  0F44                     	;# 
  2230  0F45                     	;# 
  2231  0F46                     	;# 
  2232  0F47                     	;# 
  2233  0F48                     	;# 
  2234  0F49                     	;# 
  2235  0F4A                     	;# 
  2236  0F4B                     	;# 
  2237  0F4C                     	;# 
  2238  0F4E                     	;# 
  2239  0F4F                     	;# 
  2240  0F50                     	;# 
  2241  0F51                     	;# 
  2242  0F52                     	;# 
  2243  0F53                     	;# 
  2244  0F54                     	;# 
  2245  0F55                     	;# 
  2246  0F56                     	;# 
  2247  0F57                     	;# 
  2248  0F59                     	;# 
  2249  0F5A                     	;# 
  2250  0F5B                     	;# 
  2251  0F5C                     	;# 
  2252  0F5D                     	;# 
  2253  0F61                     	;# 
  2254  0F62                     	;# 
  2255  0F64                     	;# 
  2256  0F65                     	;# 
  2257  0F66                     	;# 
  2258  0F67                     	;# 
  2259  0F68                     	;# 
  2260  0F69                     	;# 
  2261  0F6A                     	;# 
  2262  0F6B                     	;# 
  2263  0F6C                     	;# 
  2264  0F6D                     	;# 
  2265  0FE4                     	;# 
  2266  0FE5                     	;# 
  2267  0FE6                     	;# 
  2268  0FE7                     	;# 
  2269  0FE8                     	;# 
  2270  0FE9                     	;# 
  2271  0FEA                     	;# 
  2272  0FEB                     	;# 
  2273  0FED                     	;# 
  2274  0FEE                     	;# 
  2275  0FEF                     	;# 
  2276  0000                     	;# 
  2277  0001                     	;# 
  2278  0002                     	;# 
  2279  0003                     	;# 
  2280  0004                     	;# 
  2281  0005                     	;# 
  2282  0006                     	;# 
  2283  0007                     	;# 
  2284  0008                     	;# 
  2285  0009                     	;# 
  2286  000A                     	;# 
  2287  000B                     	;# 
  2288  000C                     	;# 
  2289  000D                     	;# 
  2290  000E                     	;# 
  2291  000F                     	;# 
  2292  0010                     	;# 
  2293  0011                     	;# 
  2294  0012                     	;# 
  2295  0013                     	;# 
  2296  0014                     	;# 
  2297  0015                     	;# 
  2298  0016                     	;# 
  2299  0017                     	;# 
  2300  0018                     	;# 
  2301  0019                     	;# 
  2302  001A                     	;# 
  2303  001C                     	;# 
  2304  001C                     	;# 
  2305  001D                     	;# 
  2306  001D                     	;# 
  2307  001E                     	;# 
  2308  001F                     	;# 
  2309  008C                     	;# 
  2310  008C                     	;# 
  2311  008D                     	;# 
  2312  008E                     	;# 
  2313  008E                     	;# 
  2314  008F                     	;# 
  2315  0090                     	;# 
  2316  0090                     	;# 
  2317  0091                     	;# 
  2318  0093                     	;# 
  2319  0094                     	;# 
  2320  0095                     	;# 
  2321  0096                     	;# 
  2322  0097                     	;# 
  2323  0098                     	;# 
  2324  0099                     	;# 
  2325  009A                     	;# 
  2326  009B                     	;# 
  2327  009C                     	;# 
  2328  009D                     	;# 
  2329  009E                     	;# 
  2330  010C                     	;# 
  2331  010D                     	;# 
  2332  010E                     	;# 
  2333  010E                     	;# 
  2334  010F                     	;# 
  2335  0110                     	;# 
  2336  0110                     	;# 
  2337  0111                     	;# 
  2338  0112                     	;# 
  2339  0112                     	;# 
  2340  0113                     	;# 
  2341  0114                     	;# 
  2342  0114                     	;# 
  2343  0115                     	;# 
  2344  0116                     	;# 
  2345  0116                     	;# 
  2346  0117                     	;# 
  2347  0119                     	;# 
  2348  0119                     	;# 
  2349  0119                     	;# 
  2350  011A                     	;# 
  2351  011A                     	;# 
  2352  011A                     	;# 
  2353  011B                     	;# 
  2354  011B                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011C                     	;# 
  2359  011C                     	;# 
  2360  011C                     	;# 
  2361  011D                     	;# 
  2362  011D                     	;# 
  2363  011D                     	;# 
  2364  011E                     	;# 
  2365  011E                     	;# 
  2366  011E                     	;# 
  2367  011F                     	;# 
  2368  011F                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  018C                     	;# 
  2373  018D                     	;# 
  2374  018E                     	;# 
  2375  018F                     	;# 
  2376  0190                     	;# 
  2377  0191                     	;# 
  2378  0192                     	;# 
  2379  0196                     	;# 
  2380  0197                     	;# 
  2381  0198                     	;# 
  2382  0199                     	;# 
  2383  019A                     	;# 
  2384  019B                     	;# 
  2385  019C                     	;# 
  2386  020C                     	;# 
  2387  020C                     	;# 
  2388  020D                     	;# 
  2389  020E                     	;# 
  2390  020F                     	;# 
  2391  020F                     	;# 
  2392  0210                     	;# 
  2393  0210                     	;# 
  2394  0211                     	;# 
  2395  0211                     	;# 
  2396  0212                     	;# 
  2397  0212                     	;# 
  2398  0213                     	;# 
  2399  0214                     	;# 
  2400  0215                     	;# 
  2401  0215                     	;# 
  2402  0216                     	;# 
  2403  0216                     	;# 
  2404  0217                     	;# 
  2405  0217                     	;# 
  2406  0218                     	;# 
  2407  0218                     	;# 
  2408  0219                     	;# 
  2409  021A                     	;# 
  2410  021B                     	;# 
  2411  021B                     	;# 
  2412  021C                     	;# 
  2413  021C                     	;# 
  2414  021D                     	;# 
  2415  021D                     	;# 
  2416  021E                     	;# 
  2417  021F                     	;# 
  2418  028C                     	;# 
  2419  028C                     	;# 
  2420  028D                     	;# 
  2421  028D                     	;# 
  2422  028E                     	;# 
  2423  028F                     	;# 
  2424  0290                     	;# 
  2425  0290                     	;# 
  2426  0291                     	;# 
  2427  0292                     	;# 
  2428  0292                     	;# 
  2429  0293                     	;# 
  2430  0293                     	;# 
  2431  0294                     	;# 
  2432  0295                     	;# 
  2433  0296                     	;# 
  2434  0296                     	;# 
  2435  0297                     	;# 
  2436  0298                     	;# 
  2437  0298                     	;# 
  2438  0299                     	;# 
  2439  0299                     	;# 
  2440  029A                     	;# 
  2441  029B                     	;# 
  2442  029C                     	;# 
  2443  029C                     	;# 
  2444  029D                     	;# 
  2445  030C                     	;# 
  2446  030C                     	;# 
  2447  030D                     	;# 
  2448  030E                     	;# 
  2449  030F                     	;# 
  2450  0310                     	;# 
  2451  0310                     	;# 
  2452  0311                     	;# 
  2453  0312                     	;# 
  2454  0313                     	;# 
  2455  0314                     	;# 
  2456  0314                     	;# 
  2457  0315                     	;# 
  2458  0316                     	;# 
  2459  0317                     	;# 
  2460  0318                     	;# 
  2461  0318                     	;# 
  2462  0319                     	;# 
  2463  031A                     	;# 
  2464  031B                     	;# 
  2465  031C                     	;# 
  2466  031C                     	;# 
  2467  031D                     	;# 
  2468  031E                     	;# 
  2469  031F                     	;# 
  2470  038C                     	;# 
  2471  038C                     	;# 
  2472  038D                     	;# 
  2473  038E                     	;# 
  2474  0390                     	;# 
  2475  0390                     	;# 
  2476  0391                     	;# 
  2477  0392                     	;# 
  2478  040C                     	;# 
  2479  040D                     	;# 
  2480  040E                     	;# 
  2481  040F                     	;# 
  2482  0410                     	;# 
  2483  0411                     	;# 
  2484  0416                     	;# 
  2485  0416                     	;# 
  2486  0417                     	;# 
  2487  0418                     	;# 
  2488  0418                     	;# 
  2489  0419                     	;# 
  2490  041A                     	;# 
  2491  041A                     	;# 
  2492  041B                     	;# 
  2493  041C                     	;# 
  2494  041C                     	;# 
  2495  041D                     	;# 
  2496  041E                     	;# 
  2497  041F                     	;# 
  2498  048C                     	;# 
  2499  048C                     	;# 
  2500  048D                     	;# 
  2501  048E                     	;# 
  2502  048F                     	;# 
  2503  048F                     	;# 
  2504  0490                     	;# 
  2505  0491                     	;# 
  2506  0492                     	;# 
  2507  0492                     	;# 
  2508  0493                     	;# 
  2509  0494                     	;# 
  2510  0495                     	;# 
  2511  0495                     	;# 
  2512  0496                     	;# 
  2513  0497                     	;# 
  2514  0498                     	;# 
  2515  0499                     	;# 
  2516  049A                     	;# 
  2517  049B                     	;# 
  2518  049C                     	;# 
  2519  049D                     	;# 
  2520  050C                     	;# 
  2521  050C                     	;# 
  2522  050D                     	;# 
  2523  050E                     	;# 
  2524  050F                     	;# 
  2525  050F                     	;# 
  2526  0510                     	;# 
  2527  0511                     	;# 
  2528  0512                     	;# 
  2529  0512                     	;# 
  2530  0513                     	;# 
  2531  0514                     	;# 
  2532  0515                     	;# 
  2533  0515                     	;# 
  2534  0516                     	;# 
  2535  0517                     	;# 
  2536  0518                     	;# 
  2537  0519                     	;# 
  2538  051A                     	;# 
  2539  051B                     	;# 
  2540  051C                     	;# 
  2541  051D                     	;# 
  2542  058C                     	;# 
  2543  058C                     	;# 
  2544  058D                     	;# 
  2545  058E                     	;# 
  2546  058F                     	;# 
  2547  058F                     	;# 
  2548  0590                     	;# 
  2549  0591                     	;# 
  2550  0592                     	;# 
  2551  0593                     	;# 
  2552  060C                     	;# 
  2553  060D                     	;# 
  2554  060E                     	;# 
  2555  060F                     	;# 
  2556  0610                     	;# 
  2557  0611                     	;# 
  2558  0612                     	;# 
  2559  0613                     	;# 
  2560  0614                     	;# 
  2561  0616                     	;# 
  2562  0617                     	;# 
  2563  0618                     	;# 
  2564  0619                     	;# 
  2565  061A                     	;# 
  2566  061B                     	;# 
  2567  061C                     	;# 
  2568  061D                     	;# 
  2569  061E                     	;# 
  2570  068C                     	;# 
  2571  068D                     	;# 
  2572  068E                     	;# 
  2573  068F                     	;# 
  2574  0690                     	;# 
  2575  0691                     	;# 
  2576  0692                     	;# 
  2577  0693                     	;# 
  2578  0694                     	;# 
  2579  070C                     	;# 
  2580  070D                     	;# 
  2581  070E                     	;# 
  2582  070F                     	;# 
  2583  0710                     	;# 
  2584  0711                     	;# 
  2585  0712                     	;# 
  2586  0713                     	;# 
  2587  0714                     	;# 
  2588  0716                     	;# 
  2589  0717                     	;# 
  2590  0718                     	;# 
  2591  0719                     	;# 
  2592  071A                     	;# 
  2593  071B                     	;# 
  2594  071C                     	;# 
  2595  071D                     	;# 
  2596  071E                     	;# 
  2597  0796                     	;# 
  2598  0797                     	;# 
  2599  0798                     	;# 
  2600  0799                     	;# 
  2601  079A                     	;# 
  2602  079B                     	;# 
  2603  080C                     	;# 
  2604  080D                     	;# 
  2605  080E                     	;# 
  2606  080F                     	;# 
  2607  0810                     	;# 
  2608  0811                     	;# 
  2609  0812                     	;# 
  2610  0813                     	;# 
  2611  0814                     	;# 
  2612  081A                     	;# 
  2613  081B                     	;# 
  2614  081C                     	;# 
  2615  081D                     	;# 
  2616  081E                     	;# 
  2617  081F                     	;# 
  2618  088C                     	;# 
  2619  088D                     	;# 
  2620  088E                     	;# 
  2621  088F                     	;# 
  2622  0890                     	;# 
  2623  0891                     	;# 
  2624  0892                     	;# 
  2625  0893                     	;# 
  2626  0895                     	;# 
  2627  0896                     	;# 
  2628  0897                     	;# 
  2629  0898                     	;# 
  2630  0899                     	;# 
  2631  089A                     	;# 
  2632  089B                     	;# 
  2633  090C                     	;# 
  2634  090E                     	;# 
  2635  090F                     	;# 
  2636  091F                     	;# 
  2637  098F                     	;# 
  2638  098F                     	;# 
  2639  0990                     	;# 
  2640  0991                     	;# 
  2641  0992                     	;# 
  2642  0993                     	;# 
  2643  0994                     	;# 
  2644  0995                     	;# 
  2645  0996                     	;# 
  2646  0997                     	;# 
  2647  0E0F                     	;# 
  2648  0E10                     	;# 
  2649  0E11                     	;# 
  2650  0E12                     	;# 
  2651  0E13                     	;# 
  2652  0E14                     	;# 
  2653  0E15                     	;# 
  2654  0E16                     	;# 
  2655  0E17                     	;# 
  2656  0E18                     	;# 
  2657  0E19                     	;# 
  2658  0E1A                     	;# 
  2659  0E1B                     	;# 
  2660  0E1C                     	;# 
  2661  0E1D                     	;# 
  2662  0E1E                     	;# 
  2663  0E1F                     	;# 
  2664  0E20                     	;# 
  2665  0E21                     	;# 
  2666  0E22                     	;# 
  2667  0E23                     	;# 
  2668  0E24                     	;# 
  2669  0E25                     	;# 
  2670  0E26                     	;# 
  2671  0E27                     	;# 
  2672  0E28                     	;# 
  2673  0E29                     	;# 
  2674  0E2A                     	;# 
  2675  0E2B                     	;# 
  2676  0E2C                     	;# 
  2677  0E2D                     	;# 
  2678  0E2E                     	;# 
  2679  0E2F                     	;# 
  2680  0E30                     	;# 
  2681  0E31                     	;# 
  2682  0E32                     	;# 
  2683  0E33                     	;# 
  2684  0E34                     	;# 
  2685  0E35                     	;# 
  2686  0E36                     	;# 
  2687  0E37                     	;# 
  2688  0E8F                     	;# 
  2689  0E90                     	;# 
  2690  0E91                     	;# 
  2691  0E92                     	;# 
  2692  0E93                     	;# 
  2693  0E94                     	;# 
  2694  0E95                     	;# 
  2695  0E96                     	;# 
  2696  0E97                     	;# 
  2697  0E9C                     	;# 
  2698  0E9D                     	;# 
  2699  0E9E                     	;# 
  2700  0EA1                     	;# 
  2701  0EA2                     	;# 
  2702  0EA3                     	;# 
  2703  0EA4                     	;# 
  2704  0EA5                     	;# 
  2705  0EA9                     	;# 
  2706  0EAA                     	;# 
  2707  0EAB                     	;# 
  2708  0EAC                     	;# 
  2709  0EB1                     	;# 
  2710  0EB2                     	;# 
  2711  0EB3                     	;# 
  2712  0EB8                     	;# 
  2713  0EB9                     	;# 
  2714  0EBA                     	;# 
  2715  0EBB                     	;# 
  2716  0EBC                     	;# 
  2717  0EBD                     	;# 
  2718  0EBE                     	;# 
  2719  0EC3                     	;# 
  2720  0EC5                     	;# 
  2721  0EC6                     	;# 
  2722  0EC7                     	;# 
  2723  0EC8                     	;# 
  2724  0EC9                     	;# 
  2725  0ECA                     	;# 
  2726  0ECB                     	;# 
  2727  0ECC                     	;# 
  2728  0F10                     	;# 
  2729  0F11                     	;# 
  2730  0F12                     	;# 
  2731  0F13                     	;# 
  2732  0F14                     	;# 
  2733  0F15                     	;# 
  2734  0F16                     	;# 
  2735  0F17                     	;# 
  2736  0F18                     	;# 
  2737  0F19                     	;# 
  2738  0F1A                     	;# 
  2739  0F1B                     	;# 
  2740  0F1C                     	;# 
  2741  0F1D                     	;# 
  2742  0F1E                     	;# 
  2743  0F1F                     	;# 
  2744  0F20                     	;# 
  2745  0F21                     	;# 
  2746  0F22                     	;# 
  2747  0F23                     	;# 
  2748  0F24                     	;# 
  2749  0F25                     	;# 
  2750  0F26                     	;# 
  2751  0F27                     	;# 
  2752  0F28                     	;# 
  2753  0F29                     	;# 
  2754  0F2A                     	;# 
  2755  0F2B                     	;# 
  2756  0F2C                     	;# 
  2757  0F2D                     	;# 
  2758  0F2E                     	;# 
  2759  0F2F                     	;# 
  2760  0F30                     	;# 
  2761  0F31                     	;# 
  2762  0F32                     	;# 
  2763  0F38                     	;# 
  2764  0F39                     	;# 
  2765  0F3A                     	;# 
  2766  0F3B                     	;# 
  2767  0F3C                     	;# 
  2768  0F3D                     	;# 
  2769  0F3E                     	;# 
  2770  0F3F                     	;# 
  2771  0F40                     	;# 
  2772  0F41                     	;# 
  2773  0F43                     	;# 
  2774  0F44                     	;# 
  2775  0F45                     	;# 
  2776  0F46                     	;# 
  2777  0F47                     	;# 
  2778  0F48                     	;# 
  2779  0F49                     	;# 
  2780  0F4A                     	;# 
  2781  0F4B                     	;# 
  2782  0F4C                     	;# 
  2783  0F4E                     	;# 
  2784  0F4F                     	;# 
  2785  0F50                     	;# 
  2786  0F51                     	;# 
  2787  0F52                     	;# 
  2788  0F53                     	;# 
  2789  0F54                     	;# 
  2790  0F55                     	;# 
  2791  0F56                     	;# 
  2792  0F57                     	;# 
  2793  0F59                     	;# 
  2794  0F5A                     	;# 
  2795  0F5B                     	;# 
  2796  0F5C                     	;# 
  2797  0F5D                     	;# 
  2798  0F61                     	;# 
  2799  0F62                     	;# 
  2800  0F64                     	;# 
  2801  0F65                     	;# 
  2802  0F66                     	;# 
  2803  0F67                     	;# 
  2804  0F68                     	;# 
  2805  0F69                     	;# 
  2806  0F6A                     	;# 
  2807  0F6B                     	;# 
  2808  0F6C                     	;# 
  2809  0F6D                     	;# 
  2810  0FE4                     	;# 
  2811  0FE5                     	;# 
  2812  0FE6                     	;# 
  2813  0FE7                     	;# 
  2814  0FE8                     	;# 
  2815  0FE9                     	;# 
  2816  0FEA                     	;# 
  2817  0FEB                     	;# 
  2818  0FED                     	;# 
  2819  0FEE                     	;# 
  2820  0FEF                     	;# 
  2821  0000                     	;# 
  2822  0001                     	;# 
  2823  0002                     	;# 
  2824  0003                     	;# 
  2825  0004                     	;# 
  2826  0005                     	;# 
  2827  0006                     	;# 
  2828  0007                     	;# 
  2829  0008                     	;# 
  2830  0009                     	;# 
  2831  000A                     	;# 
  2832  000B                     	;# 
  2833  000C                     	;# 
  2834  000D                     	;# 
  2835  000E                     	;# 
  2836  000F                     	;# 
  2837  0010                     	;# 
  2838  0011                     	;# 
  2839  0012                     	;# 
  2840  0013                     	;# 
  2841  0014                     	;# 
  2842  0015                     	;# 
  2843  0016                     	;# 
  2844  0017                     	;# 
  2845  0018                     	;# 
  2846  0019                     	;# 
  2847  001A                     	;# 
  2848  001C                     	;# 
  2849  001C                     	;# 
  2850  001D                     	;# 
  2851  001D                     	;# 
  2852  001E                     	;# 
  2853  001F                     	;# 
  2854  008C                     	;# 
  2855  008C                     	;# 
  2856  008D                     	;# 
  2857  008E                     	;# 
  2858  008E                     	;# 
  2859  008F                     	;# 
  2860  0090                     	;# 
  2861  0090                     	;# 
  2862  0091                     	;# 
  2863  0093                     	;# 
  2864  0094                     	;# 
  2865  0095                     	;# 
  2866  0096                     	;# 
  2867  0097                     	;# 
  2868  0098                     	;# 
  2869  0099                     	;# 
  2870  009A                     	;# 
  2871  009B                     	;# 
  2872  009C                     	;# 
  2873  009D                     	;# 
  2874  009E                     	;# 
  2875  010C                     	;# 
  2876  010D                     	;# 
  2877  010E                     	;# 
  2878  010E                     	;# 
  2879  010F                     	;# 
  2880  0110                     	;# 
  2881  0110                     	;# 
  2882  0111                     	;# 
  2883  0112                     	;# 
  2884  0112                     	;# 
  2885  0113                     	;# 
  2886  0114                     	;# 
  2887  0114                     	;# 
  2888  0115                     	;# 
  2889  0116                     	;# 
  2890  0116                     	;# 
  2891  0117                     	;# 
  2892  0119                     	;# 
  2893  0119                     	;# 
  2894  0119                     	;# 
  2895  011A                     	;# 
  2896  011A                     	;# 
  2897  011A                     	;# 
  2898  011B                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011C                     	;# 
  2904  011C                     	;# 
  2905  011C                     	;# 
  2906  011D                     	;# 
  2907  011D                     	;# 
  2908  011D                     	;# 
  2909  011E                     	;# 
  2910  011E                     	;# 
  2911  011E                     	;# 
  2912  011F                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  018C                     	;# 
  2918  018D                     	;# 
  2919  018E                     	;# 
  2920  018F                     	;# 
  2921  0190                     	;# 
  2922  0191                     	;# 
  2923  0192                     	;# 
  2924  0196                     	;# 
  2925  0197                     	;# 
  2926  0198                     	;# 
  2927  0199                     	;# 
  2928  019A                     	;# 
  2929  019B                     	;# 
  2930  019C                     	;# 
  2931  020C                     	;# 
  2932  020C                     	;# 
  2933  020D                     	;# 
  2934  020E                     	;# 
  2935  020F                     	;# 
  2936  020F                     	;# 
  2937  0210                     	;# 
  2938  0210                     	;# 
  2939  0211                     	;# 
  2940  0211                     	;# 
  2941  0212                     	;# 
  2942  0212                     	;# 
  2943  0213                     	;# 
  2944  0214                     	;# 
  2945  0215                     	;# 
  2946  0215                     	;# 
  2947  0216                     	;# 
  2948  0216                     	;# 
  2949  0217                     	;# 
  2950  0217                     	;# 
  2951  0218                     	;# 
  2952  0218                     	;# 
  2953  0219                     	;# 
  2954  021A                     	;# 
  2955  021B                     	;# 
  2956  021B                     	;# 
  2957  021C                     	;# 
  2958  021C                     	;# 
  2959  021D                     	;# 
  2960  021D                     	;# 
  2961  021E                     	;# 
  2962  021F                     	;# 
  2963  028C                     	;# 
  2964  028C                     	;# 
  2965  028D                     	;# 
  2966  028D                     	;# 
  2967  028E                     	;# 
  2968  028F                     	;# 
  2969  0290                     	;# 
  2970  0290                     	;# 
  2971  0291                     	;# 
  2972  0292                     	;# 
  2973  0292                     	;# 
  2974  0293                     	;# 
  2975  0293                     	;# 
  2976  0294                     	;# 
  2977  0295                     	;# 
  2978  0296                     	;# 
  2979  0296                     	;# 
  2980  0297                     	;# 
  2981  0298                     	;# 
  2982  0298                     	;# 
  2983  0299                     	;# 
  2984  0299                     	;# 
  2985  029A                     	;# 
  2986  029B                     	;# 
  2987  029C                     	;# 
  2988  029C                     	;# 
  2989  029D                     	;# 
  2990  030C                     	;# 
  2991  030C                     	;# 
  2992  030D                     	;# 
  2993  030E                     	;# 
  2994  030F                     	;# 
  2995  0310                     	;# 
  2996  0310                     	;# 
  2997  0311                     	;# 
  2998  0312                     	;# 
  2999  0313                     	;# 
  3000  0314                     	;# 
  3001  0314                     	;# 
  3002  0315                     	;# 
  3003  0316                     	;# 
  3004  0317                     	;# 
  3005  0318                     	;# 
  3006  0318                     	;# 
  3007  0319                     	;# 
  3008  031A                     	;# 
  3009  031B                     	;# 
  3010  031C                     	;# 
  3011  031C                     	;# 
  3012  031D                     	;# 
  3013  031E                     	;# 
  3014  031F                     	;# 
  3015  038C                     	;# 
  3016  038C                     	;# 
  3017  038D                     	;# 
  3018  038E                     	;# 
  3019  0390                     	;# 
  3020  0390                     	;# 
  3021  0391                     	;# 
  3022  0392                     	;# 
  3023  040C                     	;# 
  3024  040D                     	;# 
  3025  040E                     	;# 
  3026  040F                     	;# 
  3027  0410                     	;# 
  3028  0411                     	;# 
  3029  0416                     	;# 
  3030  0416                     	;# 
  3031  0417                     	;# 
  3032  0418                     	;# 
  3033  0418                     	;# 
  3034  0419                     	;# 
  3035  041A                     	;# 
  3036  041A                     	;# 
  3037  041B                     	;# 
  3038  041C                     	;# 
  3039  041C                     	;# 
  3040  041D                     	;# 
  3041  041E                     	;# 
  3042  041F                     	;# 
  3043  048C                     	;# 
  3044  048C                     	;# 
  3045  048D                     	;# 
  3046  048E                     	;# 
  3047  048F                     	;# 
  3048  048F                     	;# 
  3049  0490                     	;# 
  3050  0491                     	;# 
  3051  0492                     	;# 
  3052  0492                     	;# 
  3053  0493                     	;# 
  3054  0494                     	;# 
  3055  0495                     	;# 
  3056  0495                     	;# 
  3057  0496                     	;# 
  3058  0497                     	;# 
  3059  0498                     	;# 
  3060  0499                     	;# 
  3061  049A                     	;# 
  3062  049B                     	;# 
  3063  049C                     	;# 
  3064  049D                     	;# 
  3065  050C                     	;# 
  3066  050C                     	;# 
  3067  050D                     	;# 
  3068  050E                     	;# 
  3069  050F                     	;# 
  3070  050F                     	;# 
  3071  0510                     	;# 
  3072  0511                     	;# 
  3073  0512                     	;# 
  3074  0512                     	;# 
  3075  0513                     	;# 
  3076  0514                     	;# 
  3077  0515                     	;# 
  3078  0515                     	;# 
  3079  0516                     	;# 
  3080  0517                     	;# 
  3081  0518                     	;# 
  3082  0519                     	;# 
  3083  051A                     	;# 
  3084  051B                     	;# 
  3085  051C                     	;# 
  3086  051D                     	;# 
  3087  058C                     	;# 
  3088  058C                     	;# 
  3089  058D                     	;# 
  3090  058E                     	;# 
  3091  058F                     	;# 
  3092  058F                     	;# 
  3093  0590                     	;# 
  3094  0591                     	;# 
  3095  0592                     	;# 
  3096  0593                     	;# 
  3097  060C                     	;# 
  3098  060D                     	;# 
  3099  060E                     	;# 
  3100  060F                     	;# 
  3101  0610                     	;# 
  3102  0611                     	;# 
  3103  0612                     	;# 
  3104  0613                     	;# 
  3105  0614                     	;# 
  3106  0616                     	;# 
  3107  0617                     	;# 
  3108  0618                     	;# 
  3109  0619                     	;# 
  3110  061A                     	;# 
  3111  061B                     	;# 
  3112  061C                     	;# 
  3113  061D                     	;# 
  3114  061E                     	;# 
  3115  068C                     	;# 
  3116  068D                     	;# 
  3117  068E                     	;# 
  3118  068F                     	;# 
  3119  0690                     	;# 
  3120  0691                     	;# 
  3121  0692                     	;# 
  3122  0693                     	;# 
  3123  0694                     	;# 
  3124  070C                     	;# 
  3125  070D                     	;# 
  3126  070E                     	;# 
  3127  070F                     	;# 
  3128  0710                     	;# 
  3129  0711                     	;# 
  3130  0712                     	;# 
  3131  0713                     	;# 
  3132  0714                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  071E                     	;# 
  3142  0796                     	;# 
  3143  0797                     	;# 
  3144  0798                     	;# 
  3145  0799                     	;# 
  3146  079A                     	;# 
  3147  079B                     	;# 
  3148  080C                     	;# 
  3149  080D                     	;# 
  3150  080E                     	;# 
  3151  080F                     	;# 
  3152  0810                     	;# 
  3153  0811                     	;# 
  3154  0812                     	;# 
  3155  0813                     	;# 
  3156  0814                     	;# 
  3157  081A                     	;# 
  3158  081B                     	;# 
  3159  081C                     	;# 
  3160  081D                     	;# 
  3161  081E                     	;# 
  3162  081F                     	;# 
  3163  088C                     	;# 
  3164  088D                     	;# 
  3165  088E                     	;# 
  3166  088F                     	;# 
  3167  0890                     	;# 
  3168  0891                     	;# 
  3169  0892                     	;# 
  3170  0893                     	;# 
  3171  0895                     	;# 
  3172  0896                     	;# 
  3173  0897                     	;# 
  3174  0898                     	;# 
  3175  0899                     	;# 
  3176  089A                     	;# 
  3177  089B                     	;# 
  3178  090C                     	;# 
  3179  090E                     	;# 
  3180  090F                     	;# 
  3181  091F                     	;# 
  3182  098F                     	;# 
  3183  098F                     	;# 
  3184  0990                     	;# 
  3185  0991                     	;# 
  3186  0992                     	;# 
  3187  0993                     	;# 
  3188  0994                     	;# 
  3189  0995                     	;# 
  3190  0996                     	;# 
  3191  0997                     	;# 
  3192  0E0F                     	;# 
  3193  0E10                     	;# 
  3194  0E11                     	;# 
  3195  0E12                     	;# 
  3196  0E13                     	;# 
  3197  0E14                     	;# 
  3198  0E15                     	;# 
  3199  0E16                     	;# 
  3200  0E17                     	;# 
  3201  0E18                     	;# 
  3202  0E19                     	;# 
  3203  0E1A                     	;# 
  3204  0E1B                     	;# 
  3205  0E1C                     	;# 
  3206  0E1D                     	;# 
  3207  0E1E                     	;# 
  3208  0E1F                     	;# 
  3209  0E20                     	;# 
  3210  0E21                     	;# 
  3211  0E22                     	;# 
  3212  0E23                     	;# 
  3213  0E24                     	;# 
  3214  0E25                     	;# 
  3215  0E26                     	;# 
  3216  0E27                     	;# 
  3217  0E28                     	;# 
  3218  0E29                     	;# 
  3219  0E2A                     	;# 
  3220  0E2B                     	;# 
  3221  0E2C                     	;# 
  3222  0E2D                     	;# 
  3223  0E2E                     	;# 
  3224  0E2F                     	;# 
  3225  0E30                     	;# 
  3226  0E31                     	;# 
  3227  0E32                     	;# 
  3228  0E33                     	;# 
  3229  0E34                     	;# 
  3230  0E35                     	;# 
  3231  0E36                     	;# 
  3232  0E37                     	;# 
  3233  0E8F                     	;# 
  3234  0E90                     	;# 
  3235  0E91                     	;# 
  3236  0E92                     	;# 
  3237  0E93                     	;# 
  3238  0E94                     	;# 
  3239  0E95                     	;# 
  3240  0E96                     	;# 
  3241  0E97                     	;# 
  3242  0E9C                     	;# 
  3243  0E9D                     	;# 
  3244  0E9E                     	;# 
  3245  0EA1                     	;# 
  3246  0EA2                     	;# 
  3247  0EA3                     	;# 
  3248  0EA4                     	;# 
  3249  0EA5                     	;# 
  3250  0EA9                     	;# 
  3251  0EAA                     	;# 
  3252  0EAB                     	;# 
  3253  0EAC                     	;# 
  3254  0EB1                     	;# 
  3255  0EB2                     	;# 
  3256  0EB3                     	;# 
  3257  0EB8                     	;# 
  3258  0EB9                     	;# 
  3259  0EBA                     	;# 
  3260  0EBB                     	;# 
  3261  0EBC                     	;# 
  3262  0EBD                     	;# 
  3263  0EBE                     	;# 
  3264  0EC3                     	;# 
  3265  0EC5                     	;# 
  3266  0EC6                     	;# 
  3267  0EC7                     	;# 
  3268  0EC8                     	;# 
  3269  0EC9                     	;# 
  3270  0ECA                     	;# 
  3271  0ECB                     	;# 
  3272  0ECC                     	;# 
  3273  0F10                     	;# 
  3274  0F11                     	;# 
  3275  0F12                     	;# 
  3276  0F13                     	;# 
  3277  0F14                     	;# 
  3278  0F15                     	;# 
  3279  0F16                     	;# 
  3280  0F17                     	;# 
  3281  0F18                     	;# 
  3282  0F19                     	;# 
  3283  0F1A                     	;# 
  3284  0F1B                     	;# 
  3285  0F1C                     	;# 
  3286  0F1D                     	;# 
  3287  0F1E                     	;# 
  3288  0F1F                     	;# 
  3289  0F20                     	;# 
  3290  0F21                     	;# 
  3291  0F22                     	;# 
  3292  0F23                     	;# 
  3293  0F24                     	;# 
  3294  0F25                     	;# 
  3295  0F26                     	;# 
  3296  0F27                     	;# 
  3297  0F28                     	;# 
  3298  0F29                     	;# 
  3299  0F2A                     	;# 
  3300  0F2B                     	;# 
  3301  0F2C                     	;# 
  3302  0F2D                     	;# 
  3303  0F2E                     	;# 
  3304  0F2F                     	;# 
  3305  0F30                     	;# 
  3306  0F31                     	;# 
  3307  0F32                     	;# 
  3308  0F38                     	;# 
  3309  0F39                     	;# 
  3310  0F3A                     	;# 
  3311  0F3B                     	;# 
  3312  0F3C                     	;# 
  3313  0F3D                     	;# 
  3314  0F3E                     	;# 
  3315  0F3F                     	;# 
  3316  0F40                     	;# 
  3317  0F41                     	;# 
  3318  0F43                     	;# 
  3319  0F44                     	;# 
  3320  0F45                     	;# 
  3321  0F46                     	;# 
  3322  0F47                     	;# 
  3323  0F48                     	;# 
  3324  0F49                     	;# 
  3325  0F4A                     	;# 
  3326  0F4B                     	;# 
  3327  0F4C                     	;# 
  3328  0F4E                     	;# 
  3329  0F4F                     	;# 
  3330  0F50                     	;# 
  3331  0F51                     	;# 
  3332  0F52                     	;# 
  3333  0F53                     	;# 
  3334  0F54                     	;# 
  3335  0F55                     	;# 
  3336  0F56                     	;# 
  3337  0F57                     	;# 
  3338  0F59                     	;# 
  3339  0F5A                     	;# 
  3340  0F5B                     	;# 
  3341  0F5C                     	;# 
  3342  0F5D                     	;# 
  3343  0F61                     	;# 
  3344  0F62                     	;# 
  3345  0F64                     	;# 
  3346  0F65                     	;# 
  3347  0F66                     	;# 
  3348  0F67                     	;# 
  3349  0F68                     	;# 
  3350  0F69                     	;# 
  3351  0F6A                     	;# 
  3352  0F6B                     	;# 
  3353  0F6C                     	;# 
  3354  0F6D                     	;# 
  3355  0FE4                     	;# 
  3356  0FE5                     	;# 
  3357  0FE6                     	;# 
  3358  0FE7                     	;# 
  3359  0FE8                     	;# 
  3360  0FE9                     	;# 
  3361  0FEA                     	;# 
  3362  0FEB                     	;# 
  3363  0FED                     	;# 
  3364  0FEE                     	;# 
  3365  0FEF                     	;_lutRY
  3366                           
  3367                           	psect	idataCOMMON
  3368  0002                     __pidataCOMMON:	
  3369                           
  3370                           ;initializer for _analogMode
  3371  0002  3401               	retlw	1
  3372                           
  3373                           ;initializer for _rxData
  3374  0003  34F7               	retlw	247
  3375                           
  3376                           	psect	idataBANK0
  3377  0EAB                     __pidataBANK0:	
  3378                           
  3379                           ;initializer for _responseLength
  3380  0EAB  3409               	retlw	9
  3381                           
  3382                           ;initializer for _debounceLoops
  3383  0EAC  3403               	retlw	3
  3384                           
  3385                           ;initializer for _lyData
  3386  0EAD  34F7               	retlw	247
  3387                           
  3388                           ;initializer for _lxData
  3389  0EAE  34F7               	retlw	247
  3390                           
  3391                           ;initializer for _ryData
  3392  0EAF  34F7               	retlw	247
  3393                           
  3394                           ;initializer for _digitalStateSecond
  3395  0EB0  34FF               	retlw	255
  3396                           
  3397                           ;initializer for _digitalStateFirst
  3398  0EB1  34FF               	retlw	255
  3399                           
  3400                           ;initializer for _response
  3401  0EB2  349E               	retlw	158
  3402  0EB3  345A               	retlw	90
  3403  0EB4  3400               	retlw	0
  3404  0EB5  3400               	retlw	0
  3405  0EB6  3400               	retlw	0
  3406  0EB7  3400               	retlw	0
  3407  0EB8  3400               	retlw	0
  3408  0EB9  3400               	retlw	0
  3409  0EBA  3400               	retlw	0
  3410  0EBB  3400               	retlw	0
  3411  0EBC  3400               	retlw	0
  3412  0EBD  3400               	retlw	0
  3413  0EBE  3400               	retlw	0
  3414  0EBF  3400               	retlw	0
  3415  0EC0  3400               	retlw	0
  3416  0EC1  3400               	retlw	0
  3417  0EC2  3400               	retlw	0
  3418  0EC3  3400               	retlw	0
  3419  0EC4  3400               	retlw	0
  3420  0EC5  3400               	retlw	0
  3421  0011                     _TRISAbits	set	17
  3422  0013                     _TRISCbits	set	19
  3423  0015                     _TRISE	set	21
  3424  0014                     _TRISD	set	20
  3425  0013                     _TRISC	set	19
  3426  0012                     _TRISB	set	18
  3427  0011                     _TRISA	set	17
  3428  000B                     _INTCONbits	set	11
  3429  000F                     _PORTDbits	set	15
  3430  001C                     _TMR0	set	28
  3431  0014                     _TRISDbits	set	20
  3432  006B                     _RB3	set	107
  3433  006A                     _RB2	set	106
  3434  006D                     _RB5	set	109
  3435  006C                     _RB4	set	108
  3436  0061                     _RA1	set	97
  3437  0062                     _RA2	set	98
  3438  0063                     _RA3	set	99
  3439  0060                     _RA0	set	96
  3440  006F                     _RB7	set	111
  3441  006E                     _RB6	set	110
  3442  0072                     _RC2	set	114
  3443  0078                     _RD0	set	120
  3444  0069                     _RB1	set	105
  3445  0068                     _RB0	set	104
  3446  0066                     _RA6	set	102
  3447  0067                     _RA7	set	103
  3448  0065                     _RA5	set	101
  3449  0064                     _RA4	set	100
  3450  007C                     _RD4	set	124
  3451  0098                     _ADCLK	set	152
  3452  009A                     _ADREF	set	154
  3453  0095                     _ADCON2	set	149
  3454  0094                     _ADCON1	set	148
  3455  0093                     _ADCON0	set	147
  3456  008C                     _ADRESL	set	140
  3457  008D                     _ADRESH	set	141
  3458  0093                     _ADCON0bits	set	147
  3459  009D                     _ADACQ	set	157
  3460  009C                     _ADPRE	set	156
  3461  009E                     _ADPCH	set	158
  3462  018F                     _SSP1STATbits	set	399
  3463  0190                     _SSP1CON1	set	400
  3464  018F                     _SSP1STAT	set	399
  3465  018C                     _SSP1BUF	set	396
  3466  38C8                     _SSP1IE	set	14536
  3467  3865                     _TMR0IF	set	14437
  3468  3878                     _SSP1IF	set	14456
  3469  081F                     _NVMCON2	set	2079
  3470  081C                     _NVMDATL	set	2076
  3471  081A                     _NVMADRL	set	2074
  3472  081B                     _NVMADRH	set	2075
  3473  081E                     _NVMCON1bits	set	2078
  3474  0E8F                     _PPSLOCK	set	3727
  3475  0F25                     _RC5PPS	set	3877
  3476  0F65                     _WPUE	set	3941
  3477  0F5A                     _WPUD	set	3930
  3478  0F4F                     _WPUC	set	3919
  3479  0F44                     _WPUB	set	3908
  3480  0F39                     _WPUA	set	3897
  3481  0F64                     _ANSELE	set	3940
  3482  0F59                     _ANSELD	set	3929
  3483  0F4E                     _ANSELC	set	3918
  3484  0F43                     _ANSELB	set	3907
  3485  0F38                     _ANSELA	set	3896
  3486                           
  3487                           ; #config settings
  3488  0000                     
  3489                           	psect	cinit
  3490  01A1                     start_initialization:	
  3491  01A1                     __initialization:		;BIGRAM
  3492                           
  3493                           ; Initialize objects allocated to COMMON
  3494  01A1  3180  2002  3181   	fcall	__pidataCOMMON	;fetch initializer
  3495  01A4  00F8               	movwf	__pdataCOMMON& (0+127)
  3496  01A5  3180  2003  3181   	fcall	__pidataCOMMON+1	;fetch initializer
  3497  01A8  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  3498                           
  3499                           ; Initialize objects allocated to BANK0
  3500  01A9  30AB               	movlw	low __pidataBANK0
  3501  01AA  0084               	movwf	4
  3502  01AB  308E               	movlw	(high __pidataBANK0)| (0+128)
  3503  01AC  0085               	movwf	5
  3504  01AD  3050               	movlw	low __pdataBANK0
  3505  01AE  0086               	movwf	6
  3506  01AF  3000               	movlw	high __pdataBANK0
  3507  01B0  0087               	movwf	7
  3508  01B1  3000               	movlw	0
  3509  01B2  00FF               	movwf	btemp+1
  3510  01B3  301B               	movlw	27
  3511  01B4  318E  2679  3181   	fcall	init_ram
  3512                           
  3513                           ; Clear objects allocated to BIGRAM
  3514  01B7  30F0               	movlw	low (0+9200)
  3515  01B8  0084               	movwf	4
  3516  01B9  3023               	movlw	high (0+9200)
  3517  01BA  0085               	movwf	5
  3518  01BB  3000               	movlw	0
  3519  01BC  00FE               	movwf	btemp
  3520  01BD  3004               	movlw	4
  3521  01BE  00FF               	movwf	btemp+1
  3522  01BF  318E  266D  3181   	fcall	clear_ram0
  3523                           
  3524                           ; Clear objects allocated to COMMON
  3525  01C2  01F5               	clrf	__pbssCOMMON& (0+127)
  3526  01C3  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  3527  01C4  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  3528                           
  3529                           ; Clear objects allocated to BANK0
  3530  01C5  01EB               	clrf	__pbssBANK0& (0+127)
  3531  01C6  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  3532  01C7  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  3533  01C8  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  3534  01C9  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  3535                           
  3536                           ; Clear objects allocated to BANK1
  3537  01CA  30A0               	movlw	low __pbssBANK1
  3538  01CB  0084               	movwf	4
  3539  01CC  3000               	movlw	high __pbssBANK1
  3540  01CD  0085               	movwf	5
  3541  01CE  3040               	movlw	64
  3542  01CF  00FE               	movwf	btemp
  3543  01D0  3000               	movlw	0
  3544  01D1  00FF               	movwf	btemp+1
  3545  01D2  318E  266D  3181   	fcall	clear_ram0
  3546  01D5                     end_of_initialization:	
  3547                           ;End of C runtime variable initialization code
  3548                           
  3549  01D5                     __end_of__initialization:	
  3550  01D5  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3551  01D6  0020               	movlb	0
  3552  01D7  318F  2FA5         	ljmp	_main	;jump to C main() function
  3553                           
  3554                           	psect	bssCOMMON
  3555  0075                     __pbssCOMMON:	
  3556  0075                     _previousCmd:	
  3557  0075                     	ds	1
  3558  0076                     _cmdCounter:	
  3559  0076                     	ds	1
  3560  0077                     _index:	
  3561  0077                     	ds	1
  3562                           
  3563                           	psect	dataCOMMON
  3564  0078                     __pdataCOMMON:	
  3565  0078                     _analogMode:	
  3566  0078                     	ds	1
  3567  0079                     _rxData:	
  3568  0079                     	ds	1
  3569                           
  3570                           	psect	bssBANK0
  3571  006B                     __pbssBANK0:	
  3572  006B                     _PWMOn:	
  3573  006B                     	ds	2
  3574  006D                     _PWMPeriod:	
  3575  006D                     	ds	2
  3576  006F                     _escapeMode:	
  3577  006F                     	ds	1
  3578                           
  3579                           	psect	dataBANK0
  3580  0050                     __pdataBANK0:	
  3581  0050                     _responseLength:	
  3582  0050                     	ds	1
  3583  0051                     _debounceLoops:	
  3584  0051                     	ds	1
  3585  0052                     _lyData:	
  3586  0052                     	ds	1
  3587  0053                     _lxData:	
  3588  0053                     	ds	1
  3589  0054                     _ryData:	
  3590  0054                     	ds	1
  3591  0055                     _digitalStateSecond:	
  3592  0055                     	ds	1
  3593  0056                     _digitalStateFirst:	
  3594  0056                     	ds	1
  3595  0057                     _response:	
  3596  0057                     	ds	20
  3597                           
  3598                           	psect	bssBANK1
  3599  00A0                     __pbssBANK1:	
  3600  00A0                     _IndexDigitalByte2:	
  3601  00A0                     	ds	8
  3602  00A8                     _IndexDigitalByte1:	
  3603  00A8                     	ds	8
  3604  00B0                     _PreviousDigitalByte2:	
  3605  00B0                     	ds	8
  3606  00B8                     _PreviousDigitalByte1:	
  3607  00B8                     	ds	8
  3608  00C0                     _DigitalControllerByte2:	
  3609  00C0                     	ds	8
  3610  00C8                     _DigitalControllerByte1:	
  3611  00C8                     	ds	8
  3612  00D0                     _analogStateSecond:	
  3613  00D0                     	ds	8
  3614  00D8                     _analogStateFirst:	
  3615  00D8                     	ds	8
  3616                           
  3617                           	psect	inittext
  3618  0E79                     init_ram:	
  3619  0E79  00FE               	movwf	btemp
  3620  0E7A                     initloop:	
  3621  0E7A  0012               	moviw fsr0++
  3622  0E7B  001E               	movwi fsr1++
  3623  0E7C  3001               	movlw	1
  3624  0E7D  02FE               	subwf	btemp,f
  3625  0E7E  3000               	movlw	0
  3626  0E7F  3BFF               	subwfb	btemp+1,f
  3627  0E80  087F               	movf	btemp+1,w
  3628  0E81  047E               	iorwf	btemp,w
  3629  0E82  1D03               	skipz
  3630  0E83  2E7A               	goto	initloop
  3631  0E84  3400               	retlw	0
  3632                           
  3633                           	psect	clrtext
  3634  0E6D                     clear_ram0:	
  3635                           ;	Called with FSR0 containing the base address, and
  3636                           ;	btemp/btemp+1 has the size to clear
  3637                           
  3638  0E6D  0064               	clrwdt	;clear the watchdog before getting into this loop
  3639  0E6E                     clrloop0:	
  3640  0E6E  0180               	clrf	0	;clear RAM location pointed to by FSR
  3641  0E6F  3101               	addfsr 0,1
  3642  0E70  3001               	movlw	1
  3643  0E71  02FE               	subwf	btemp,f
  3644  0E72  3000               	movlw	0
  3645  0E73  3BFF               	subwfb	btemp+1,f
  3646  0E74  087F               	movf	btemp+1,w
  3647  0E75  047E               	iorwf	btemp,w
  3648  0E76  1D03               	skipz
  3649  0E77  2E6E               	goto	clrloop0	;have we reached the end yet?
  3650  0E78  3400               	retlw	0	;all done for this memory range, return
  3651                           
  3652                           	psect	cstackCOMMON
  3653  0070                     __pcstackCOMMON:	
  3654  0070                     ?_spiRead:	
  3655  0070                     ??_spiRead:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658  0070                     ?_spiWrite:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661  0070                     ??_spiWrite:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0070                     ?_picInit:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0070                     ?_adcInit:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670  0070                     ?_lutInit:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673  0070                     ?_configureController:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676  0070                     ?_readController:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679  0070                     ?_readControllerAnalog:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682  0070                     ?_eepromRead:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685  0070                     ?_nvmUnlock:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     ?_pollController:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ??_pollController:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_PS2Command:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_main:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?_reversebyte:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?_ppsUnlock:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_ppsLock:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_spiReceiveWait:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ??_spiReceiveWait:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     spiWrite@dat:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718                           
  3719                           ; 1 bytes @ 0x0
  3720  0070                     	ds	1
  3721  0071                     pollController@response:	
  3722                           
  3723                           ; 1 bytes @ 0x1
  3724  0071                     	ds	1
  3725  0072                     ??_PS2Command:	
  3726                           
  3727                           ; 1 bytes @ 0x2
  3728  0072                     	ds	2
  3729  0074                     PS2Command@cmd:	
  3730                           
  3731                           ; 1 bytes @ 0x4
  3732  0074                     	ds	1
  3733                           
  3734                           	psect	cstackBANK0
  3735  0020                     __pcstackBANK0:	
  3736  0020                     ??_adcInit:	
  3737  0020                     ??_readController:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0020                     ??_eepromRead:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0020                     ?_eepromWrite:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0020                     ?_spiInit:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0020                     ??_nvmUnlock:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0020                     ?_PwmInit:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755  0020                     ??_reversebyte:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758  0020                     ??_ppsUnlock:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761  0020                     ??_ppsLock:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764  0020                     ?_readADC:	
  3765                           ; 1 bytes @ 0x0
  3766                           
  3767  0020                     ?___wmul:	
  3768                           ; 2 bytes @ 0x0
  3769                           
  3770  0020                     spiInit@sDataSample:	
  3771                           ; 2 bytes @ 0x0
  3772                           
  3773  0020                     eepromWrite@data:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776  0020                     PwmInit@idle:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779  0020                     readADC@channel:	
  3780                           ; 2 bytes @ 0x0
  3781                           
  3782  0020                     ___wmul@multiplier:	
  3783                           ; 2 bytes @ 0x0
  3784                           
  3785                           
  3786                           ; 2 bytes @ 0x0
  3787  0020                     	ds	1
  3788  0021                     ??_eepromWrite:	
  3789  0021                     spiInit@sClockIdle:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792  0021                     eepromWrite@address:	
  3793                           ; 1 bytes @ 0x1
  3794                           
  3795  0021                     eepromRead@address:	
  3796                           ; 1 bytes @ 0x1
  3797                           
  3798                           
  3799                           ; 1 bytes @ 0x1
  3800  0021                     	ds	1
  3801  0022                     ??_PwmInit:	
  3802  0022                     ??_readADC:	
  3803                           ; 1 bytes @ 0x2
  3804                           
  3805  0022                     readController@analogMode:	
  3806                           ; 1 bytes @ 0x2
  3807                           
  3808  0022                     spiInit@sTransmitEdge:	
  3809                           ; 1 bytes @ 0x2
  3810                           
  3811  0022                     eepromWrite@interruptStatus:	
  3812                           ; 1 bytes @ 0x2
  3813                           
  3814  0022                     eepromRead@data:	
  3815                           ; 1 bytes @ 0x2
  3816                           
  3817  0022                     ___wmul@multiplicand:	
  3818                           ; 1 bytes @ 0x2
  3819                           
  3820                           
  3821                           ; 2 bytes @ 0x2
  3822  0022                     	ds	1
  3823  0023                     ??_spiInit:	
  3824  0023                     reversebyte@byte:	
  3825                           ; 1 bytes @ 0x3
  3826                           
  3827  0023                     spiInit@sType:	
  3828                           ; 1 bytes @ 0x3
  3829                           
  3830                           
  3831                           ; 1 bytes @ 0x3
  3832  0023                     	ds	1
  3833  0024                     ??_picInit:	
  3834  0024                     ??___wmul:	
  3835                           ; 1 bytes @ 0x4
  3836                           
  3837  0024                     ___wmul@product:	
  3838                           ; 1 bytes @ 0x4
  3839                           
  3840                           
  3841                           ; 2 bytes @ 0x4
  3842  0024                     	ds	2
  3843  0026                     ?___awdiv:	
  3844  0026                     ___awdiv@divisor:	
  3845                           ; 2 bytes @ 0x6
  3846                           
  3847                           
  3848                           ; 2 bytes @ 0x6
  3849  0026                     	ds	2
  3850  0028                     ___awdiv@dividend:	
  3851                           
  3852                           ; 2 bytes @ 0x8
  3853  0028                     	ds	1
  3854  0029                     ??_configureController:	
  3855  0029                     ??_readControllerAnalog:	
  3856                           ; 1 bytes @ 0x9
  3857                           
  3858                           
  3859                           ; 1 bytes @ 0x9
  3860  0029                     	ds	1
  3861  002A                     ??___awdiv:	
  3862  002A                     configureController@lxMin:	
  3863                           ; 1 bytes @ 0xA
  3864                           
  3865                           
  3866                           ; 1 bytes @ 0xA
  3867  002A                     	ds	1
  3868  002B                     configureController@lxMax:	
  3869  002B                     ___awdiv@counter:	
  3870                           ; 1 bytes @ 0xB
  3871                           
  3872                           
  3873                           ; 1 bytes @ 0xB
  3874  002B                     	ds	1
  3875  002C                     configureController@lyMin:	
  3876  002C                     ___awdiv@sign:	
  3877                           ; 1 bytes @ 0xC
  3878                           
  3879                           
  3880                           ; 1 bytes @ 0xC
  3881  002C                     	ds	1
  3882  002D                     configureController@lyMax:	
  3883  002D                     ___awdiv@quotient:	
  3884                           ; 1 bytes @ 0xD
  3885                           
  3886                           
  3887                           ; 2 bytes @ 0xD
  3888  002D                     	ds	1
  3889  002E                     configureController@rxMin:	
  3890                           
  3891                           ; 1 bytes @ 0xE
  3892  002E                     	ds	1
  3893  002F                     ?_Map:	
  3894  002F                     configureController@rxMax:	
  3895                           ; 1 bytes @ 0xF
  3896                           
  3897  002F                     Map@x:	
  3898                           ; 1 bytes @ 0xF
  3899                           
  3900                           
  3901                           ; 2 bytes @ 0xF
  3902  002F                     	ds	1
  3903  0030                     configureController@ryMin:	
  3904                           
  3905                           ; 1 bytes @ 0x10
  3906  0030                     	ds	1
  3907  0031                     configureController@ryMax:	
  3908  0031                     Map@inMin:	
  3909                           ; 1 bytes @ 0x11
  3910                           
  3911                           
  3912                           ; 2 bytes @ 0x11
  3913  0031                     	ds	1
  3914  0032                     configureController@lx:	
  3915                           
  3916                           ; 1 bytes @ 0x12
  3917  0032                     	ds	1
  3918  0033                     configureController@ly:	
  3919  0033                     Map@inMax:	
  3920                           ; 1 bytes @ 0x13
  3921                           
  3922                           
  3923                           ; 2 bytes @ 0x13
  3924  0033                     	ds	1
  3925  0034                     configureController@rx:	
  3926                           
  3927                           ; 1 bytes @ 0x14
  3928  0034                     	ds	1
  3929  0035                     configureController@ry:	
  3930  0035                     Map@outMin:	
  3931                           ; 1 bytes @ 0x15
  3932                           
  3933                           
  3934                           ; 2 bytes @ 0x15
  3935  0035                     	ds	2
  3936  0037                     Map@outMax:	
  3937                           
  3938                           ; 2 bytes @ 0x17
  3939  0037                     	ds	2
  3940  0039                     ??_lutInit:	
  3941  0039                     ??_Map:	
  3942                           ; 1 bytes @ 0x19
  3943                           
  3944                           
  3945                           ; 1 bytes @ 0x19
  3946  0039                     	ds	9
  3947  0042                     lutInit@lxMin:	
  3948                           
  3949                           ; 1 bytes @ 0x22
  3950  0042                     	ds	1
  3951  0043                     lutInit@lxMax:	
  3952                           
  3953                           ; 1 bytes @ 0x23
  3954  0043                     	ds	1
  3955  0044                     lutInit@lyMin:	
  3956                           
  3957                           ; 1 bytes @ 0x24
  3958  0044                     	ds	1
  3959  0045                     lutInit@lyMax:	
  3960                           
  3961                           ; 1 bytes @ 0x25
  3962  0045                     	ds	1
  3963  0046                     lutInit@rxMin:	
  3964                           
  3965                           ; 1 bytes @ 0x26
  3966  0046                     	ds	1
  3967  0047                     lutInit@rxMax:	
  3968                           
  3969                           ; 1 bytes @ 0x27
  3970  0047                     	ds	1
  3971  0048                     lutInit@ryMin:	
  3972                           
  3973                           ; 1 bytes @ 0x28
  3974  0048                     	ds	1
  3975  0049                     lutInit@ryMax:	
  3976                           
  3977                           ; 1 bytes @ 0x29
  3978  0049                     	ds	1
  3979  004A                     lutInit@position:	
  3980                           
  3981                           ; 2 bytes @ 0x2A
  3982  004A                     	ds	2
  3983  004C                     ??_main:	
  3984                           
  3985                           ; 1 bytes @ 0x2C
  3986  004C                     	ds	1
  3987  004D                     main@slaveSelectStatePrev:	
  3988                           
  3989                           ; 1 bytes @ 0x2D
  3990  004D                     	ds	1
  3991  004E                     main@count:	
  3992                           
  3993                           ; 1 bytes @ 0x2E
  3994  004E                     	ds	1
  3995  004F                     main@slaveSelect:	
  3996                           
  3997                           ; 1 bytes @ 0x2F
  3998  004F                     	ds	1
  3999                           
  4000                           	psect	maintext
  4001  0FA5                     __pmaintext:	
  4002 ;;
  4003 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4004 ;;
  4005 ;; *************** function _main *****************
  4006 ;; Defined at:
  4007 ;;		line 443 in file "main.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  slaveSelect     1   47[BANK0 ] unsigned char 
  4012 ;;  count           1   46[BANK0 ] unsigned char 
  4013 ;;  slaveSelectS    1   45[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : B1F/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4024 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4026 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4027 ;;Total ram usage:        4 bytes
  4028 ;; Hardware stack levels required when called:    6
  4029 ;; This function calls:
  4030 ;;		_PwmInit
  4031 ;;		_adcInit
  4032 ;;		_configureController
  4033 ;;		_lutInit
  4034 ;;		_picInit
  4035 ;;		_readController
  4036 ;;		_readControllerAnalog
  4037 ;; This function is called by:
  4038 ;;		Startup code after reset
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _main
  4044  0FA5                     _main:	
  4045  0FA5                     l2928:	
  4046                           ;incstack = 0
  4047                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4048                           
  4049                           
  4050                           ;main.c: 445:     picInit();
  4051  0FA5  318F  276A  318F   	fcall	_picInit
  4052                           
  4053                           ;main.c: 446:     adcInit();
  4054  0FA8  318E  2663  318F   	fcall	_adcInit
  4055  0FAB                     l2930:	
  4056                           
  4057                           ;main.c: 447:     lutInit();
  4058  0FAB  3181  21D9  318F   	fcall	_lutInit
  4059  0FAE                     l2932:	
  4060                           
  4061                           ;main.c: 448:     PwmInit(140);
  4062  0FAE  308C               	movlw	140
  4063  0FAF  0020               	movlb	0	; select bank0
  4064  0FB0  00A0               	movwf	PwmInit@idle
  4065  0FB1  3000               	movlw	0
  4066  0FB2  00A1               	movwf	PwmInit@idle+1
  4067  0FB3  318E  265A  318F   	fcall	_PwmInit
  4068  0FB6                     l2934:	
  4069                           
  4070                           ;main.c: 450:     response[1] = 0x5A;
  4071  0FB6  305A               	movlw	90
  4072  0FB7  0020               	movlb	0	; select bank0
  4073  0FB8  00CC               	movwf	??_main
  4074  0FB9  084C               	movf	??_main,w
  4075  0FBA  00D8               	movwf	_response+1
  4076  0FBB                     l2936:	
  4077                           
  4078                           ;main.c: 452:     char slaveSelect;;main.c: 453:     char slaveSelectStatePrev = 0;
  4079  0FBB  01CD               	clrf	main@slaveSelectStatePrev
  4080  0FBC                     l2938:	
  4081                           
  4082                           ;main.c: 454:     char count = 0;
  4083  0FBC  01CE               	clrf	main@count
  4084  0FBD                     l2940:	
  4085                           
  4086                           ;main.c: 455:     RA4 = 1;
  4087  0FBD  160C               	bsf	12,4	;volatile
  4088  0FBE                     l2942:	
  4089                           
  4090                           ;main.c: 462:         if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4091  0FBE  307F               	movlw	127
  4092  0FBF  0020               	movlb	0	; select bank0
  4093  0FC0  0656               	xorwf	_digitalStateFirst,w
  4094  0FC1  1D03               	btfss	3,2
  4095  0FC2  2FC4               	goto	u2141
  4096  0FC3  2FC5               	goto	u2140
  4097  0FC4                     u2141:	
  4098  0FC4  2FCE               	goto	l2948
  4099  0FC5                     u2140:	
  4100  0FC5                     l2944:	
  4101  0FC5  305F               	movlw	95
  4102  0FC6  0655               	xorwf	_digitalStateSecond,w
  4103  0FC7  1D03               	btfss	3,2
  4104  0FC8  2FCA               	goto	u2151
  4105  0FC9  2FCB               	goto	u2150
  4106  0FCA                     u2151:	
  4107  0FCA  2FCE               	goto	l2948
  4108  0FCB                     u2150:	
  4109  0FCB                     l2946:	
  4110                           
  4111                           ;main.c: 464:             configureController();
  4112  0FCB  3183  23CA  318F   	fcall	_configureController
  4113  0FCE                     l2948:	
  4114                           
  4115                           ;main.c: 469:         slaveSelect = RA5;
  4116  0FCE  3000               	movlw	0
  4117  0FCF  0020               	movlb	0	; select bank0
  4118  0FD0  1A8C               	btfsc	12,5	;volatile
  4119  0FD1  3001               	movlw	1
  4120  0FD2  00CF               	movwf	main@slaveSelect
  4121  0FD3                     l2950:	
  4122                           
  4123                           ;main.c: 471:         if (slaveSelect) {
  4124  0FD3  084F               	movf	main@slaveSelect,w
  4125  0FD4  1903               	btfsc	3,2
  4126  0FD5  2FD7               	goto	u2161
  4127  0FD6  2FD8               	goto	u2160
  4128  0FD7                     u2161:	
  4129  0FD7  2FDC               	goto	l169
  4130  0FD8                     u2160:	
  4131  0FD8                     l2952:	
  4132                           
  4133                           ;main.c: 472:             count++;
  4134  0FD8  3001               	movlw	1
  4135  0FD9  00CC               	movwf	??_main
  4136  0FDA  084C               	movf	??_main,w
  4137  0FDB  07CE               	addwf	main@count,f
  4138  0FDC                     l169:	
  4139                           ;main.c: 473:         }
  4140                           
  4141                           
  4142                           ;main.c: 475:         if (slaveSelect ^ slaveSelectStatePrev) {
  4143  0FDC  084F               	movf	main@slaveSelect,w
  4144  0FDD  064D               	xorwf	main@slaveSelectStatePrev,w
  4145  0FDE  1903               	btfsc	3,2
  4146  0FDF  2FE1               	goto	u2171
  4147  0FE0  2FE2               	goto	u2170
  4148  0FE1                     u2171:	
  4149  0FE1  2FE3               	goto	l2956
  4150  0FE2                     u2170:	
  4151  0FE2                     l2954:	
  4152                           
  4153                           ;main.c: 476:             count = 0;
  4154  0FE2  01CE               	clrf	main@count
  4155  0FE3                     l2956:	
  4156                           
  4157                           ;main.c: 479:         slaveSelectStatePrev = slaveSelect;
  4158  0FE3  084F               	movf	main@slaveSelect,w
  4159  0FE4  00CC               	movwf	??_main
  4160  0FE5  084C               	movf	??_main,w
  4161  0FE6  00CD               	movwf	main@slaveSelectStatePrev
  4162  0FE7                     l2958:	
  4163                           
  4164                           ;main.c: 481:         if (count >= 3) {
  4165  0FE7  3003               	movlw	3
  4166  0FE8  024E               	subwf	main@count,w
  4167  0FE9  1C03               	skipc
  4168  0FEA  2FEC               	goto	u2181
  4169  0FEB  2FED               	goto	u2180
  4170  0FEC                     u2181:	
  4171  0FEC  2FF6               	goto	l2966
  4172  0FED                     u2180:	
  4173  0FED                     l2960:	
  4174                           
  4175                           ;main.c: 483:             cmdCounter = 0;
  4176  0FED  01F6               	clrf	_cmdCounter
  4177  0FEE                     l2962:	
  4178                           
  4179                           ;main.c: 484:             responseLength = 9;
  4180  0FEE  3009               	movlw	9
  4181  0FEF  00CC               	movwf	??_main
  4182  0FF0  084C               	movf	??_main,w
  4183  0FF1  00D0               	movwf	_responseLength
  4184  0FF2                     l2964:	
  4185                           
  4186                           ;main.c: 485:             SSP1BUF = 0xFF;
  4187  0FF2  30FF               	movlw	255
  4188  0FF3  0023               	movlb	3	; select bank3
  4189  0FF4  008C               	movwf	12	;volatile
  4190                           
  4191                           ;main.c: 486:             previousCmd = 0x00;
  4192  0FF5  01F5               	clrf	_previousCmd
  4193  0FF6                     l2966:	
  4194                           
  4195                           ;main.c: 490:         readController(analogMode);
  4196  0FF6  0878               	movf	_analogMode,w
  4197  0FF7  3185  252B  318F   	fcall	_readController
  4198  0FFA                     l2968:	
  4199                           
  4200                           ;main.c: 492:         readControllerAnalog();
  4201  0FFA  3187  2710  318F   	fcall	_readControllerAnalog
  4202  0FFD  2FBE               	goto	l2942
  4203  0FFE  3181  299F         	ljmp	start
  4204  1000                     __end_of_main:	
  4205                           
  4206                           	psect	text1
  4207  0710                     __ptext1:	
  4208 ;; *************** function _readControllerAnalog *****************
  4209 ;; Defined at:
  4210 ;;		line 175 in file "Controller.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4226 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4227 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        3 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    4
  4231 ;; This function calls:
  4232 ;;		_readADC
  4233 ;;		_reversebyte
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           
  4240                           ;psect for function _readControllerAnalog
  4241  0710                     _readControllerAnalog:	
  4242  0710                     l2926:	
  4243                           ;incstack = 0
  4244                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4245                           
  4246                           
  4247                           ;Controller.c: 177:     lxData = reversebyte(lutLX[readADC(0b010000)]);
  4248  0710  3010               	movlw	16
  4249  0711  0020               	movlb	0	; select bank0
  4250  0712  00A0               	movwf	readADC@channel
  4251  0713  3000               	movlw	0
  4252  0714  00A1               	movwf	readADC@channel+1
  4253  0715  318F  2708  3187   	fcall	_readADC
  4254  0718  30F0               	movlw	240
  4255  0719  0020               	movlb	0	; select bank0
  4256  071A  00A9               	movwf	??_readControllerAnalog
  4257  071B  3026               	movlw	38
  4258  071C  00AA               	movwf	??_readControllerAnalog+1
  4259  071D  0820               	movf	?_readADC,w
  4260  071E  0729               	addwf	??_readControllerAnalog,w
  4261  071F  0086               	movwf	6
  4262  0720  0821               	movf	?_readADC+1,w
  4263  0721  3D2A               	addwfc	??_readControllerAnalog+1,w
  4264  0722  0087               	movwf	7
  4265  0723  0801               	movf	1,w
  4266  0724  318F  2733  3187   	fcall	_reversebyte
  4267  0727  0020               	movlb	0	; select bank0
  4268  0728  00AB               	movwf	??_readControllerAnalog+2
  4269  0729  082B               	movf	??_readControllerAnalog+2,w
  4270  072A  00D3               	movwf	_lxData
  4271                           
  4272                           ;Controller.c: 178:     lyData = reversebyte(lutLY[readADC(0b10001)]);
  4273  072B  3011               	movlw	17
  4274  072C  00A0               	movwf	readADC@channel
  4275  072D  3000               	movlw	0
  4276  072E  00A1               	movwf	readADC@channel+1
  4277  072F  318F  2708  3187   	fcall	_readADC
  4278  0732  30F0               	movlw	240
  4279  0733  0020               	movlb	0	; select bank0
  4280  0734  00A9               	movwf	??_readControllerAnalog
  4281  0735  3025               	movlw	37
  4282  0736  00AA               	movwf	??_readControllerAnalog+1
  4283  0737  0820               	movf	?_readADC,w
  4284  0738  0729               	addwf	??_readControllerAnalog,w
  4285  0739  0086               	movwf	6
  4286  073A  0821               	movf	?_readADC+1,w
  4287  073B  3D2A               	addwfc	??_readControllerAnalog+1,w
  4288  073C  0087               	movwf	7
  4289  073D  0801               	movf	1,w
  4290  073E  318F  2733  3187   	fcall	_reversebyte
  4291  0741  0020               	movlb	0	; select bank0
  4292  0742  00AB               	movwf	??_readControllerAnalog+2
  4293  0743  082B               	movf	??_readControllerAnalog+2,w
  4294  0744  00D2               	movwf	_lyData
  4295                           
  4296                           ;Controller.c: 180:     rxData = reversebyte(lutRX[readADC(0b010110)]);
  4297  0745  3016               	movlw	22
  4298  0746  00A0               	movwf	readADC@channel
  4299  0747  3000               	movlw	0
  4300  0748  00A1               	movwf	readADC@channel+1
  4301  0749  318F  2708  3187   	fcall	_readADC
  4302  074C  30F0               	movlw	240
  4303  074D  0020               	movlb	0	; select bank0
  4304  074E  00A9               	movwf	??_readControllerAnalog
  4305  074F  3024               	movlw	36
  4306  0750  00AA               	movwf	??_readControllerAnalog+1
  4307  0751  0820               	movf	?_readADC,w
  4308  0752  0729               	addwf	??_readControllerAnalog,w
  4309  0753  0086               	movwf	6
  4310  0754  0821               	movf	?_readADC+1,w
  4311  0755  3D2A               	addwfc	??_readControllerAnalog+1,w
  4312  0756  0087               	movwf	7
  4313  0757  0801               	movf	1,w
  4314  0758  318F  2733  3187   	fcall	_reversebyte
  4315  075B  0020               	movlb	0	; select bank0
  4316  075C  00AB               	movwf	??_readControllerAnalog+2
  4317  075D  082B               	movf	??_readControllerAnalog+2,w
  4318  075E  00F9               	movwf	_rxData
  4319                           
  4320                           ;Controller.c: 181:     ryData = reversebyte(lutRY[readADC(0b010111)]);
  4321  075F  3017               	movlw	23
  4322  0760  00A0               	movwf	readADC@channel
  4323  0761  3000               	movlw	0
  4324  0762  00A1               	movwf	readADC@channel+1
  4325  0763  318F  2708  3187   	fcall	_readADC
  4326  0766  30F0               	movlw	240
  4327  0767  0020               	movlb	0	; select bank0
  4328  0768  00A9               	movwf	??_readControllerAnalog
  4329  0769  3023               	movlw	35
  4330  076A  00AA               	movwf	??_readControllerAnalog+1
  4331  076B  0820               	movf	?_readADC,w
  4332  076C  0729               	addwf	??_readControllerAnalog,w
  4333  076D  0086               	movwf	6
  4334  076E  0821               	movf	?_readADC+1,w
  4335  076F  3D2A               	addwfc	??_readControllerAnalog+1,w
  4336  0770  0087               	movwf	7
  4337  0771  0801               	movf	1,w
  4338  0772  318F  2733  3187   	fcall	_reversebyte
  4339  0775  0020               	movlb	0	; select bank0
  4340  0776  00AB               	movwf	??_readControllerAnalog+2
  4341  0777  082B               	movf	??_readControllerAnalog+2,w
  4342  0778  00D4               	movwf	_ryData
  4343  0779                     l314:	
  4344  0779  0008               	return
  4345  077A                     __end_of_readControllerAnalog:	
  4346                           
  4347                           	psect	text2
  4348  0F33                     __ptext2:	
  4349 ;; *************** function _reversebyte *****************
  4350 ;; Defined at:
  4351 ;;		line 167 in file "Controller.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  byte            1    wreg     unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  byte            1    3[BANK0 ] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      unsigned char 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4367 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4368 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4369 ;;Total ram usage:        4 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    3
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_readControllerAnalog
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function _reversebyte
  4381  0F33                     _reversebyte:	
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  4385                           ;reversebyte@byte stored from wreg
  4386  0F33  0020               	movlb	0	; select bank0
  4387  0F34  00A3               	movwf	reversebyte@byte
  4388  0F35                     l2734:	
  4389                           
  4390                           ;Controller.c: 168:     byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  4391  0F35  0823               	movf	reversebyte@byte,w
  4392  0F36  390F               	andlw	15
  4393  0F37  00A0               	movwf	??_reversebyte
  4394  0F38  3004               	movlw	4
  4395  0F39                     u1855:	
  4396  0F39  35A0               	lslf	??_reversebyte,f
  4397  0F3A  0B89               	decfsz	9,f
  4398  0F3B  2F39               	goto	u1855
  4399  0F3C  0823               	movf	reversebyte@byte,w
  4400  0F3D  00A1               	movwf	??_reversebyte+1
  4401  0F3E  3004               	movlw	4
  4402  0F3F                     u1865:	
  4403  0F3F  36A1               	lsrf	??_reversebyte+1,f
  4404  0F40  0B89               	decfsz	9,f
  4405  0F41  2F3F               	goto	u1865
  4406  0F42  0821               	movf	??_reversebyte+1,w
  4407  0F43  390F               	andlw	15
  4408  0F44  0420               	iorwf	??_reversebyte,w
  4409  0F45  00A2               	movwf	??_reversebyte+2
  4410  0F46  0822               	movf	??_reversebyte+2,w
  4411  0F47  00A3               	movwf	reversebyte@byte
  4412                           
  4413                           ;Controller.c: 169:     byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  4414  0F48  0823               	movf	reversebyte@byte,w
  4415  0F49  3933               	andlw	51
  4416  0F4A  00A0               	movwf	??_reversebyte
  4417  0F4B  3002               	movlw	2
  4418  0F4C                     u1875:	
  4419  0F4C  35A0               	lslf	??_reversebyte,f
  4420  0F4D  0B89               	decfsz	9,f
  4421  0F4E  2F4C               	goto	u1875
  4422  0F4F  0823               	movf	reversebyte@byte,w
  4423  0F50  00A1               	movwf	??_reversebyte+1
  4424  0F51  3002               	movlw	2
  4425  0F52                     u1885:	
  4426  0F52  36A1               	lsrf	??_reversebyte+1,f
  4427  0F53  0B89               	decfsz	9,f
  4428  0F54  2F52               	goto	u1885
  4429  0F55  0821               	movf	??_reversebyte+1,w
  4430  0F56  3933               	andlw	51
  4431  0F57  0420               	iorwf	??_reversebyte,w
  4432  0F58  00A2               	movwf	??_reversebyte+2
  4433  0F59  0822               	movf	??_reversebyte+2,w
  4434  0F5A  00A3               	movwf	reversebyte@byte
  4435                           
  4436                           ;Controller.c: 170:     byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  4437  0F5B  0823               	movf	reversebyte@byte,w
  4438  0F5C  3955               	andlw	85
  4439  0F5D  00A0               	movwf	??_reversebyte
  4440  0F5E  3001               	movlw	1
  4441  0F5F                     u1895:	
  4442  0F5F  35A0               	lslf	??_reversebyte,f
  4443  0F60  0B89               	decfsz	9,f
  4444  0F61  2F5F               	goto	u1895
  4445  0F62  3623               	lsrf	reversebyte@byte,w
  4446  0F63  3955               	andlw	85
  4447  0F64  0420               	iorwf	??_reversebyte,w
  4448  0F65  00A1               	movwf	??_reversebyte+1
  4449  0F66  0821               	movf	??_reversebyte+1,w
  4450  0F67  00A3               	movwf	reversebyte@byte
  4451  0F68                     l2736:	
  4452                           
  4453                           ;Controller.c: 172:     return byte;
  4454  0F68  0823               	movf	reversebyte@byte,w
  4455  0F69                     l311:	
  4456  0F69  0008               	return
  4457  0F6A                     __end_of_reversebyte:	
  4458                           
  4459                           	psect	text3
  4460  0F6A                     __ptext3:	
  4461 ;; *************** function _picInit *****************
  4462 ;; Defined at:
  4463 ;;		line 32 in file "PicConfig.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0, pclath, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4479 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4481 ;;Total ram usage:        2 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    4
  4484 ;; This function calls:
  4485 ;;		_ppsLock
  4486 ;;		_ppsUnlock
  4487 ;;		_spiInit
  4488 ;; This function is called by:
  4489 ;;		_main
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _picInit
  4495  0F6A                     _picInit:	
  4496  0F6A                     l2776:	
  4497                           ;incstack = 0
  4498                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  4499                           
  4500                           
  4501                           ;PicConfig.c: 35:     TRISA = 0xFF;
  4502  0F6A  30FF               	movlw	255
  4503  0F6B  0020               	movlb	0	; select bank0
  4504  0F6C  0091               	movwf	17	;volatile
  4505                           
  4506                           ;PicConfig.c: 36:     TRISB = 0xFF;
  4507  0F6D  30FF               	movlw	255
  4508  0F6E  0092               	movwf	18	;volatile
  4509                           
  4510                           ;PicConfig.c: 37:     TRISC = 0xFF;
  4511  0F6F  30FF               	movlw	255
  4512  0F70  0093               	movwf	19	;volatile
  4513                           
  4514                           ;PicConfig.c: 38:     TRISD = 0xEF;
  4515  0F71  30EF               	movlw	239
  4516  0F72  0094               	movwf	20	;volatile
  4517                           
  4518                           ;PicConfig.c: 39:     TRISE = 0xFF;
  4519  0F73  30FF               	movlw	255
  4520  0F74  0095               	movwf	21	;volatile
  4521  0F75                     l2778:	
  4522                           
  4523                           ;PicConfig.c: 42:     ANSELA = 0;
  4524  0F75  003E               	movlb	30	; select bank30
  4525  0F76  01B8               	clrf	56	;volatile
  4526  0F77                     l2780:	
  4527                           
  4528                           ;PicConfig.c: 43:     ANSELB = 0;
  4529  0F77  01C3               	clrf	67	;volatile
  4530                           
  4531                           ;PicConfig.c: 44:     ANSELC = 0xC3;
  4532  0F78  30C3               	movlw	195
  4533  0F79  00CE               	movwf	78	;volatile
  4534  0F7A                     l2782:	
  4535                           
  4536                           ;PicConfig.c: 45:     ANSELD = 0;
  4537  0F7A  01D9               	clrf	89	;volatile
  4538  0F7B                     l2784:	
  4539                           
  4540                           ;PicConfig.c: 46:     ANSELE = 0;
  4541  0F7B  01E4               	clrf	100	;volatile
  4542                           
  4543                           ;PicConfig.c: 49:     WPUA = 0xCF;
  4544  0F7C  30CF               	movlw	207
  4545  0F7D  00B9               	movwf	57	;volatile
  4546                           
  4547                           ;PicConfig.c: 50:     WPUB = 0xFF;
  4548  0F7E  30FF               	movlw	255
  4549  0F7F  00C4               	movwf	68	;volatile
  4550                           
  4551                           ;PicConfig.c: 51:     WPUC = 0x04;
  4552  0F80  3004               	movlw	4
  4553  0F81  00CF               	movwf	79	;volatile
  4554                           
  4555                           ;PicConfig.c: 52:     WPUD = 0x01;
  4556  0F82  3001               	movlw	1
  4557  0F83  00DA               	movwf	90	;volatile
  4558  0F84                     l2786:	
  4559                           
  4560                           ;PicConfig.c: 53:     WPUE = 0;
  4561  0F84  01E5               	clrf	101	;volatile
  4562  0F85                     l2788:	
  4563                           
  4564                           ;PicConfig.c: 56:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HI
      +                          GH, SPI_ACTIVE_2_IDLE);
  4565  0F85  0020               	movlb	0	; select bank0
  4566  0F86  01A0               	clrf	spiInit@sDataSample
  4567  0F87  3010               	movlw	16
  4568  0F88  00A4               	movwf	??_picInit
  4569  0F89  0824               	movf	??_picInit,w
  4570  0F8A  00A1               	movwf	spiInit@sClockIdle
  4571  0F8B  3040               	movlw	64
  4572  0F8C  00A5               	movwf	??_picInit+1
  4573  0F8D  0825               	movf	??_picInit+1,w
  4574  0F8E  00A2               	movwf	spiInit@sTransmitEdge
  4575  0F8F  3024               	movlw	36
  4576  0F90  318E  2697  318F   	fcall	_spiInit
  4577  0F93                     l2790:	
  4578                           
  4579                           ;PicConfig.c: 58:     TRISCbits.TRISC5 = 0;
  4580  0F93  0020               	movlb	0	; select bank0
  4581  0F94  1293               	bcf	19,5	;volatile
  4582  0F95                     l2792:	
  4583                           
  4584                           ;PicConfig.c: 59:     TRISAbits.TRISA4 = 0;
  4585  0F95  1211               	bcf	17,4	;volatile
  4586  0F96                     l2794:	
  4587                           
  4588                           ;PicConfig.c: 60:     ppsUnlock();
  4589  0F96  318E  264B  318F   	fcall	_ppsUnlock
  4590  0F99                     l2796:	
  4591                           
  4592                           ;PicConfig.c: 62:     RC5PPS = 0x15;
  4593  0F99  3015               	movlw	21
  4594  0F9A  003E               	movlb	30	; select bank30
  4595  0F9B  00A5               	movwf	37	;volatile
  4596  0F9C                     l2798:	
  4597                           
  4598                           ;PicConfig.c: 64:     ppsLock();
  4599  0F9C  318E  2652  318F   	fcall	_ppsLock
  4600  0F9F                     l2800:	
  4601                           
  4602                           ;PicConfig.c: 67:     INTCONbits.GIE = 1;
  4603  0F9F  178B               	bsf	11,7	;volatile
  4604  0FA0                     l2802:	
  4605                           
  4606                           ;PicConfig.c: 68:     INTCONbits.PEIE = 1;
  4607  0FA0  170B               	bsf	11,6	;volatile
  4608  0FA1                     l2804:	
  4609                           
  4610                           ;PicConfig.c: 69:     SSP1IF = 0;
  4611  0FA1  002E               	movlb	14	; select bank14
  4612  0FA2  100F               	bcf	15,0	;volatile
  4613  0FA3                     l2806:	
  4614                           
  4615                           ;PicConfig.c: 70:     SSP1IE = 1;
  4616  0FA3  1419               	bsf	25,0	;volatile
  4617  0FA4                     l400:	
  4618  0FA4  0008               	return
  4619  0FA5                     __end_of_picInit:	
  4620                           
  4621                           	psect	text4
  4622  0E97                     __ptext4:	
  4623 ;; *************** function _spiInit *****************
  4624 ;; Defined at:
  4625 ;;		line 10 in file "Spi.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  sType           1    wreg     enum E12122
  4628 ;;  sDataSample     1    0[BANK0 ] enum E12130
  4629 ;;  sClockIdle      1    1[BANK0 ] enum E12134
  4630 ;;  sTransmitEdg    1    2[BANK0 ] enum E12138
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  sType           1    3[BANK0 ] enum E12122
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4642 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4645 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:        4 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    3
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_picInit
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _spiInit
  4658  0E97                     _spiInit:	
  4659                           
  4660                           ;incstack = 0
  4661                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  4662                           ;spiInit@sType stored from wreg
  4663  0E97  0020               	movlb	0	; select bank0
  4664  0E98  00A3               	movwf	spiInit@sType
  4665  0E99                     l2766:	
  4666                           
  4667                           ;Spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);Spi.c: 11: {;Spi.c: 13:     if(sType & 0b00000
      +                          100)
  4668  0E99  1D23               	btfss	spiInit@sType,2
  4669  0E9A  2E9C               	goto	u1921
  4670  0E9B  2E9D               	goto	u1920
  4671  0E9C                     u1921:	
  4672  0E9C  2EA1               	goto	l2770
  4673  0E9D                     u1920:	
  4674  0E9D                     l2768:	
  4675                           
  4676                           ;Spi.c: 14:     {;Spi.c: 15:         SSP1STAT = sTransmitEdge;
  4677  0E9D  0822               	movf	spiInit@sTransmitEdge,w
  4678  0E9E  0023               	movlb	3	; select bank3
  4679  0E9F  008F               	movwf	15	;volatile
  4680                           
  4681                           ;Spi.c: 17:     }
  4682  0EA0  2EA5               	goto	l412
  4683  0EA1                     l2770:	
  4684                           
  4685                           ;Spi.c: 19:     {;Spi.c: 20:         SSP1STAT = sDataSample | sTransmitEdge;
  4686  0EA1  0820               	movf	spiInit@sDataSample,w
  4687  0EA2  0422               	iorwf	spiInit@sTransmitEdge,w
  4688  0EA3  0023               	movlb	3	; select bank3
  4689  0EA4  008F               	movwf	15	;volatile
  4690  0EA5                     l412:	
  4691                           ;Spi.c: 22:     }
  4692                           
  4693                           
  4694                           ;Spi.c: 24:     SSP1CON1 = sType | sClockIdle;
  4695  0EA5  0020               	movlb	0	; select bank0
  4696  0EA6  0823               	movf	spiInit@sType,w
  4697  0EA7  0421               	iorwf	spiInit@sClockIdle,w
  4698  0EA8  0023               	movlb	3	; select bank3
  4699  0EA9  0090               	movwf	16	;volatile
  4700  0EAA                     l413:	
  4701  0EAA  0008               	return
  4702  0EAB                     __end_of_spiInit:	
  4703                           
  4704                           	psect	text5
  4705  0E4B                     __ptext5:	
  4706 ;; *************** function _ppsUnlock *****************
  4707 ;; Defined at:
  4708 ;;		line 9 in file "PicConfig.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; Hardware stack levels required when called:    3
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_picInit
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _ppsUnlock
  4738  0E4B                     _ppsUnlock:	
  4739  0E4B                     l2760:	
  4740                           ;incstack = 0
  4741                           ; Regs used in _ppsUnlock: [wreg+status,2]
  4742                           
  4743                           
  4744                           ;PicConfig.c: 10:     PPSLOCK = 0x55;
  4745  0E4B  3055               	movlw	85
  4746  0E4C  003D               	movlb	29	; select bank29
  4747  0E4D  008F               	movwf	15	;volsfr
  4748                           
  4749                           ;PicConfig.c: 11:     PPSLOCK = 0xAA;
  4750  0E4E  30AA               	movlw	170
  4751  0E4F  008F               	movwf	15	;volsfr
  4752  0E50                     l2762:	
  4753                           
  4754                           ;PicConfig.c: 12:     PPSLOCK = 0;
  4755  0E50  018F               	clrf	15	;volsfr
  4756  0E51                     l391:	
  4757  0E51  0008               	return
  4758  0E52                     __end_of_ppsUnlock:	
  4759                           
  4760                           	psect	text6
  4761  0E52                     __ptext6:	
  4762 ;; *************** function _ppsLock *****************
  4763 ;; Defined at:
  4764 ;;		line 15 in file "PicConfig.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;Total ram usage:        0 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    3
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_picInit
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _ppsLock
  4794  0E52                     _ppsLock:	
  4795  0E52                     l2764:	
  4796                           ;incstack = 0
  4797                           ; Regs used in _ppsLock: [wreg]
  4798                           
  4799                           
  4800                           ;PicConfig.c: 16:     PPSLOCK = 0x55;
  4801  0E52  3055               	movlw	85
  4802  0E53  003D               	movlb	29	; select bank29
  4803  0E54  008F               	movwf	15	;volsfr
  4804                           
  4805                           ;PicConfig.c: 17:     PPSLOCK = 0xAA;
  4806  0E55  30AA               	movlw	170
  4807  0E56  008F               	movwf	15	;volsfr
  4808                           
  4809                           ;PicConfig.c: 18:     PPSLOCK = 1;
  4810  0E57  3001               	movlw	1
  4811  0E58  008F               	movwf	15	;volsfr
  4812  0E59                     l394:	
  4813  0E59  0008               	return
  4814  0E5A                     __end_of_ppsLock:	
  4815                           
  4816                           	psect	text7
  4817  01D9                     __ptext7:	
  4818 ;; *************** function _lutInit *****************
  4819 ;; Defined at:
  4820 ;;		line 98 in file "Controller.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  position        2   42[BANK0 ] int 
  4825 ;;  ryMax           1   41[BANK0 ] unsigned char 
  4826 ;;  ryMin           1   40[BANK0 ] unsigned char 
  4827 ;;  rxMax           1   39[BANK0 ] unsigned char 
  4828 ;;  rxMin           1   38[BANK0 ] unsigned char 
  4829 ;;  lyMax           1   37[BANK0 ] unsigned char 
  4830 ;;  lyMin           1   36[BANK0 ] unsigned char 
  4831 ;;  lxMax           1   35[BANK0 ] unsigned char 
  4832 ;;  lxMin           1   34[BANK0 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4843 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4844 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4845 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4846 ;;Total ram usage:       19 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    5
  4849 ;; This function calls:
  4850 ;;		_Map
  4851 ;;		_eepromRead
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function _lutInit
  4859  01D9                     _lutInit:	
  4860  01D9                     l2820:	
  4861                           ;incstack = 0
  4862                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4863                           
  4864                           
  4865                           ;Controller.c: 100:     char lxMin = eepromRead(0x60);
  4866  01D9  3060               	movlw	96
  4867  01DA  318E  2685  3181   	fcall	_eepromRead
  4868  01DD  0020               	movlb	0	; select bank0
  4869  01DE  00B9               	movwf	??_lutInit
  4870  01DF  0839               	movf	??_lutInit,w
  4871  01E0  00C2               	movwf	lutInit@lxMin
  4872                           
  4873                           ;Controller.c: 101:     char lxMax = eepromRead(0x61);
  4874  01E1  3061               	movlw	97
  4875  01E2  318E  2685  3181   	fcall	_eepromRead
  4876  01E5  0020               	movlb	0	; select bank0
  4877  01E6  00B9               	movwf	??_lutInit
  4878  01E7  0839               	movf	??_lutInit,w
  4879  01E8  00C3               	movwf	lutInit@lxMax
  4880                           
  4881                           ;Controller.c: 102:     char lyMin = eepromRead(0x62);
  4882  01E9  3062               	movlw	98
  4883  01EA  318E  2685  3181   	fcall	_eepromRead
  4884  01ED  0020               	movlb	0	; select bank0
  4885  01EE  00B9               	movwf	??_lutInit
  4886  01EF  0839               	movf	??_lutInit,w
  4887  01F0  00C4               	movwf	lutInit@lyMin
  4888                           
  4889                           ;Controller.c: 103:     char lyMax = eepromRead(0x63);
  4890  01F1  3063               	movlw	99
  4891  01F2  318E  2685  3181   	fcall	_eepromRead
  4892  01F5  0020               	movlb	0	; select bank0
  4893  01F6  00B9               	movwf	??_lutInit
  4894  01F7  0839               	movf	??_lutInit,w
  4895  01F8  00C5               	movwf	lutInit@lyMax
  4896                           
  4897                           ;Controller.c: 105:     char rxMin = eepromRead(0x64);
  4898  01F9  3064               	movlw	100
  4899  01FA  318E  2685  3181   	fcall	_eepromRead
  4900  01FD  0020               	movlb	0	; select bank0
  4901  01FE  00B9               	movwf	??_lutInit
  4902  01FF  0839               	movf	??_lutInit,w
  4903  0200  00C6               	movwf	lutInit@rxMin
  4904                           
  4905                           ;Controller.c: 106:     char rxMax = eepromRead(0x65);
  4906  0201  3065               	movlw	101
  4907  0202  318E  2685  3181   	fcall	_eepromRead
  4908  0205  0020               	movlb	0	; select bank0
  4909  0206  00B9               	movwf	??_lutInit
  4910  0207  0839               	movf	??_lutInit,w
  4911  0208  00C7               	movwf	lutInit@rxMax
  4912                           
  4913                           ;Controller.c: 107:     char ryMin = eepromRead(0x66);
  4914  0209  3066               	movlw	102
  4915  020A  318E  2685  3181   	fcall	_eepromRead
  4916  020D  0020               	movlb	0	; select bank0
  4917  020E  00B9               	movwf	??_lutInit
  4918  020F  0839               	movf	??_lutInit,w
  4919  0210  00C8               	movwf	lutInit@ryMin
  4920                           
  4921                           ;Controller.c: 108:     char ryMax = eepromRead(0x67);
  4922  0211  3067               	movlw	103
  4923  0212  318E  2685  3181   	fcall	_eepromRead
  4924  0215  0020               	movlb	0	; select bank0
  4925  0216  00B9               	movwf	??_lutInit
  4926  0217  0839               	movf	??_lutInit,w
  4927  0218  00C9               	movwf	lutInit@ryMax
  4928  0219                     l2822:	
  4929                           
  4930                           ;Controller.c: 110:     for (int position = 0; position < 256; position++) {
  4931  0219  01CA               	clrf	lutInit@position
  4932  021A  01CB               	clrf	lutInit@position+1
  4933  021B                     l2828:	
  4934                           
  4935                           ;Controller.c: 113:         if (position < lxMin) {
  4936  021B  0020               	movlb	0	; select bank0
  4937  021C  084B               	movf	lutInit@position+1,w
  4938  021D  3A80               	xorlw	128
  4939  021E  00B9               	movwf	??_lutInit
  4940  021F  3080               	movlw	128
  4941  0220  0239               	subwf	??_lutInit,w
  4942  0221  1D03               	skipz
  4943  0222  2A25               	goto	u1935
  4944  0223  0842               	movf	lutInit@lxMin,w
  4945  0224  024A               	subwf	lutInit@position,w
  4946  0225                     u1935:	
  4947  0225  1803               	skipnc
  4948  0226  2A28               	goto	u1931
  4949  0227  2A29               	goto	u1930
  4950  0228                     u1931:	
  4951  0228  2A36               	goto	l2832
  4952  0229                     u1930:	
  4953  0229                     l2830:	
  4954                           
  4955                           ;Controller.c: 115:             lutLX[position] = 0;
  4956  0229  30F0               	movlw	240
  4957  022A  0020               	movlb	0	; select bank0
  4958  022B  00B9               	movwf	??_lutInit
  4959  022C  3026               	movlw	38
  4960  022D  00BA               	movwf	??_lutInit+1
  4961  022E  084A               	movf	lutInit@position,w
  4962  022F  0739               	addwf	??_lutInit,w
  4963  0230  0086               	movwf	6
  4964  0231  084B               	movf	lutInit@position+1,w
  4965  0232  3D3A               	addwfc	??_lutInit+1,w
  4966  0233  0087               	movwf	7
  4967  0234  0181               	clrf	1
  4968                           
  4969                           ;Controller.c: 116:         } else if (position > lxMax) {
  4970  0235  2A83               	goto	l2838
  4971  0236                     l2832:	
  4972  0236  0020               	movlb	0	; select bank0
  4973  0237  084B               	movf	lutInit@position+1,w
  4974  0238  3A80               	xorlw	128
  4975  0239  3C80               	sublw	128
  4976  023A  1D03               	skipz
  4977  023B  2A3E               	goto	u1945
  4978  023C  084A               	movf	lutInit@position,w
  4979  023D  0243               	subwf	lutInit@lxMax,w
  4980  023E                     u1945:	
  4981  023E  1803               	skipnc
  4982  023F  2A41               	goto	u1941
  4983  0240  2A42               	goto	u1940
  4984  0241                     u1941:	
  4985  0241  2A54               	goto	l2836
  4986  0242                     u1940:	
  4987  0242                     l2834:	
  4988                           
  4989                           ;Controller.c: 117:             lutLX[position] = 255;
  4990  0242  30F0               	movlw	240
  4991  0243  0020               	movlb	0	; select bank0
  4992  0244  00B9               	movwf	??_lutInit
  4993  0245  3026               	movlw	38
  4994  0246  00BA               	movwf	??_lutInit+1
  4995  0247  084A               	movf	lutInit@position,w
  4996  0248  0739               	addwf	??_lutInit,w
  4997  0249  00BB               	movwf	??_lutInit+2
  4998  024A  084B               	movf	lutInit@position+1,w
  4999  024B  3D3A               	addwfc	??_lutInit+1,w
  5000  024C  00BC               	movwf	??_lutInit+3
  5001  024D  083B               	movf	??_lutInit+2,w
  5002  024E  0086               	movwf	6
  5003  024F  083C               	movf	??_lutInit+3,w
  5004  0250  0087               	movwf	7
  5005  0251  30FF               	movlw	255
  5006  0252  0081               	movwf	1
  5007                           
  5008                           ;Controller.c: 119:         } else {
  5009  0253  2A83               	goto	l2838
  5010  0254                     l2836:	
  5011                           
  5012                           ;Controller.c: 120:             lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  5013  0254  0020               	movlb	0	; select bank0
  5014  0255  084B               	movf	lutInit@position+1,w
  5015  0256  00B0               	movwf	Map@x+1
  5016  0257  084A               	movf	lutInit@position,w
  5017  0258  00AF               	movwf	Map@x
  5018  0259  0842               	movf	lutInit@lxMin,w
  5019  025A  00B9               	movwf	??_lutInit
  5020  025B  01BA               	clrf	??_lutInit+1
  5021  025C  0839               	movf	??_lutInit,w
  5022  025D  00B1               	movwf	Map@inMin
  5023  025E  083A               	movf	??_lutInit+1,w
  5024  025F  00B2               	movwf	Map@inMin+1
  5025  0260  0843               	movf	lutInit@lxMax,w
  5026  0261  00BB               	movwf	??_lutInit+2
  5027  0262  01BC               	clrf	??_lutInit+3
  5028  0263  083B               	movf	??_lutInit+2,w
  5029  0264  00B3               	movwf	Map@inMax
  5030  0265  083C               	movf	??_lutInit+3,w
  5031  0266  00B4               	movwf	Map@inMax+1
  5032  0267  3000               	movlw	0
  5033  0268  00B5               	movwf	Map@outMin
  5034  0269  00B6               	movwf	Map@outMin+1
  5035  026A  30FF               	movlw	255
  5036  026B  00B7               	movwf	Map@outMax
  5037  026C  3000               	movlw	0
  5038  026D  00B8               	movwf	Map@outMax+1
  5039  026E  318E  26E6  3181   	fcall	_Map
  5040  0271  0020               	movlb	0	; select bank0
  5041  0272  00BD               	movwf	??_lutInit+4
  5042  0273  30F0               	movlw	240
  5043  0274  00BE               	movwf	??_lutInit+5
  5044  0275  3026               	movlw	38
  5045  0276  00BF               	movwf	??_lutInit+6
  5046  0277  084A               	movf	lutInit@position,w
  5047  0278  073E               	addwf	??_lutInit+5,w
  5048  0279  00C0               	movwf	??_lutInit+7
  5049  027A  084B               	movf	lutInit@position+1,w
  5050  027B  3D3F               	addwfc	??_lutInit+6,w
  5051  027C  00C1               	movwf	??_lutInit+8
  5052  027D  0840               	movf	??_lutInit+7,w
  5053  027E  0086               	movwf	6
  5054  027F  0841               	movf	??_lutInit+8,w
  5055  0280  0087               	movwf	7
  5056  0281  083D               	movf	??_lutInit+4,w
  5057  0282  0081               	movwf	1
  5058  0283                     l2838:	
  5059                           
  5060                           ;Controller.c: 124:         if (position < lyMin) {
  5061  0283  084B               	movf	lutInit@position+1,w
  5062  0284  3A80               	xorlw	128
  5063  0285  00B9               	movwf	??_lutInit
  5064  0286  3080               	movlw	128
  5065  0287  0239               	subwf	??_lutInit,w
  5066  0288  1D03               	skipz
  5067  0289  2A8C               	goto	u1955
  5068  028A  0844               	movf	lutInit@lyMin,w
  5069  028B  024A               	subwf	lutInit@position,w
  5070  028C                     u1955:	
  5071  028C  1803               	skipnc
  5072  028D  2A8F               	goto	u1951
  5073  028E  2A90               	goto	u1950
  5074  028F                     u1951:	
  5075  028F  2A9D               	goto	l2842
  5076  0290                     u1950:	
  5077  0290                     l2840:	
  5078                           
  5079                           ;Controller.c: 125:             lutLY[position] = 0;
  5080  0290  30F0               	movlw	240
  5081  0291  0020               	movlb	0	; select bank0
  5082  0292  00B9               	movwf	??_lutInit
  5083  0293  3025               	movlw	37
  5084  0294  00BA               	movwf	??_lutInit+1
  5085  0295  084A               	movf	lutInit@position,w
  5086  0296  0739               	addwf	??_lutInit,w
  5087  0297  0086               	movwf	6
  5088  0298  084B               	movf	lutInit@position+1,w
  5089  0299  3D3A               	addwfc	??_lutInit+1,w
  5090  029A  0087               	movwf	7
  5091  029B  0181               	clrf	1
  5092                           
  5093                           ;Controller.c: 126:         } else if (position > lyMax) {
  5094  029C  2AEA               	goto	l2848
  5095  029D                     l2842:	
  5096  029D  0020               	movlb	0	; select bank0
  5097  029E  084B               	movf	lutInit@position+1,w
  5098  029F  3A80               	xorlw	128
  5099  02A0  3C80               	sublw	128
  5100  02A1  1D03               	skipz
  5101  02A2  2AA5               	goto	u1965
  5102  02A3  084A               	movf	lutInit@position,w
  5103  02A4  0245               	subwf	lutInit@lyMax,w
  5104  02A5                     u1965:	
  5105  02A5  1803               	skipnc
  5106  02A6  2AA8               	goto	u1961
  5107  02A7  2AA9               	goto	u1960
  5108  02A8                     u1961:	
  5109  02A8  2ABB               	goto	l2846
  5110  02A9                     u1960:	
  5111  02A9                     l2844:	
  5112                           
  5113                           ;Controller.c: 127:             lutLY[position] = 255;
  5114  02A9  30F0               	movlw	240
  5115  02AA  0020               	movlb	0	; select bank0
  5116  02AB  00B9               	movwf	??_lutInit
  5117  02AC  3025               	movlw	37
  5118  02AD  00BA               	movwf	??_lutInit+1
  5119  02AE  084A               	movf	lutInit@position,w
  5120  02AF  0739               	addwf	??_lutInit,w
  5121  02B0  00BB               	movwf	??_lutInit+2
  5122  02B1  084B               	movf	lutInit@position+1,w
  5123  02B2  3D3A               	addwfc	??_lutInit+1,w
  5124  02B3  00BC               	movwf	??_lutInit+3
  5125  02B4  083B               	movf	??_lutInit+2,w
  5126  02B5  0086               	movwf	6
  5127  02B6  083C               	movf	??_lutInit+3,w
  5128  02B7  0087               	movwf	7
  5129  02B8  30FF               	movlw	255
  5130  02B9  0081               	movwf	1
  5131                           
  5132                           ;Controller.c: 129:         } else {
  5133  02BA  2AEA               	goto	l2848
  5134  02BB                     l2846:	
  5135                           
  5136                           ;Controller.c: 130:             lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  5137  02BB  0020               	movlb	0	; select bank0
  5138  02BC  084B               	movf	lutInit@position+1,w
  5139  02BD  00B0               	movwf	Map@x+1
  5140  02BE  084A               	movf	lutInit@position,w
  5141  02BF  00AF               	movwf	Map@x
  5142  02C0  0844               	movf	lutInit@lyMin,w
  5143  02C1  00B9               	movwf	??_lutInit
  5144  02C2  01BA               	clrf	??_lutInit+1
  5145  02C3  0839               	movf	??_lutInit,w
  5146  02C4  00B1               	movwf	Map@inMin
  5147  02C5  083A               	movf	??_lutInit+1,w
  5148  02C6  00B2               	movwf	Map@inMin+1
  5149  02C7  0845               	movf	lutInit@lyMax,w
  5150  02C8  00BB               	movwf	??_lutInit+2
  5151  02C9  01BC               	clrf	??_lutInit+3
  5152  02CA  083B               	movf	??_lutInit+2,w
  5153  02CB  00B3               	movwf	Map@inMax
  5154  02CC  083C               	movf	??_lutInit+3,w
  5155  02CD  00B4               	movwf	Map@inMax+1
  5156  02CE  3000               	movlw	0
  5157  02CF  00B5               	movwf	Map@outMin
  5158  02D0  00B6               	movwf	Map@outMin+1
  5159  02D1  30FF               	movlw	255
  5160  02D2  00B7               	movwf	Map@outMax
  5161  02D3  3000               	movlw	0
  5162  02D4  00B8               	movwf	Map@outMax+1
  5163  02D5  318E  26E6  3181   	fcall	_Map
  5164  02D8  0020               	movlb	0	; select bank0
  5165  02D9  00BD               	movwf	??_lutInit+4
  5166  02DA  30F0               	movlw	240
  5167  02DB  00BE               	movwf	??_lutInit+5
  5168  02DC  3025               	movlw	37
  5169  02DD  00BF               	movwf	??_lutInit+6
  5170  02DE  084A               	movf	lutInit@position,w
  5171  02DF  073E               	addwf	??_lutInit+5,w
  5172  02E0  00C0               	movwf	??_lutInit+7
  5173  02E1  084B               	movf	lutInit@position+1,w
  5174  02E2  3D3F               	addwfc	??_lutInit+6,w
  5175  02E3  00C1               	movwf	??_lutInit+8
  5176  02E4  0840               	movf	??_lutInit+7,w
  5177  02E5  0086               	movwf	6
  5178  02E6  0841               	movf	??_lutInit+8,w
  5179  02E7  0087               	movwf	7
  5180  02E8  083D               	movf	??_lutInit+4,w
  5181  02E9  0081               	movwf	1
  5182  02EA                     l2848:	
  5183                           
  5184                           ;Controller.c: 134:         if (position < rxMin) {
  5185  02EA  084B               	movf	lutInit@position+1,w
  5186  02EB  3A80               	xorlw	128
  5187  02EC  00B9               	movwf	??_lutInit
  5188  02ED  3080               	movlw	128
  5189  02EE  0239               	subwf	??_lutInit,w
  5190  02EF  1D03               	skipz
  5191  02F0  2AF3               	goto	u1975
  5192  02F1  0846               	movf	lutInit@rxMin,w
  5193  02F2  024A               	subwf	lutInit@position,w
  5194  02F3                     u1975:	
  5195  02F3  1803               	skipnc
  5196  02F4  2AF6               	goto	u1971
  5197  02F5  2AF7               	goto	u1970
  5198  02F6                     u1971:	
  5199  02F6  2B04               	goto	l2852
  5200  02F7                     u1970:	
  5201  02F7                     l2850:	
  5202                           
  5203                           ;Controller.c: 135:             lutRX[position] = 0;
  5204  02F7  30F0               	movlw	240
  5205  02F8  0020               	movlb	0	; select bank0
  5206  02F9  00B9               	movwf	??_lutInit
  5207  02FA  3024               	movlw	36
  5208  02FB  00BA               	movwf	??_lutInit+1
  5209  02FC  084A               	movf	lutInit@position,w
  5210  02FD  0739               	addwf	??_lutInit,w
  5211  02FE  0086               	movwf	6
  5212  02FF  084B               	movf	lutInit@position+1,w
  5213  0300  3D3A               	addwfc	??_lutInit+1,w
  5214  0301  0087               	movwf	7
  5215  0302  0181               	clrf	1
  5216                           
  5217                           ;Controller.c: 136:         } else if (position > rxMax) {
  5218  0303  2B51               	goto	l2858
  5219  0304                     l2852:	
  5220  0304  0020               	movlb	0	; select bank0
  5221  0305  084B               	movf	lutInit@position+1,w
  5222  0306  3A80               	xorlw	128
  5223  0307  3C80               	sublw	128
  5224  0308  1D03               	skipz
  5225  0309  2B0C               	goto	u1985
  5226  030A  084A               	movf	lutInit@position,w
  5227  030B  0247               	subwf	lutInit@rxMax,w
  5228  030C                     u1985:	
  5229  030C  1803               	skipnc
  5230  030D  2B0F               	goto	u1981
  5231  030E  2B10               	goto	u1980
  5232  030F                     u1981:	
  5233  030F  2B22               	goto	l2856
  5234  0310                     u1980:	
  5235  0310                     l2854:	
  5236                           
  5237                           ;Controller.c: 137:             lutRX[position] = 255;
  5238  0310  30F0               	movlw	240
  5239  0311  0020               	movlb	0	; select bank0
  5240  0312  00B9               	movwf	??_lutInit
  5241  0313  3024               	movlw	36
  5242  0314  00BA               	movwf	??_lutInit+1
  5243  0315  084A               	movf	lutInit@position,w
  5244  0316  0739               	addwf	??_lutInit,w
  5245  0317  00BB               	movwf	??_lutInit+2
  5246  0318  084B               	movf	lutInit@position+1,w
  5247  0319  3D3A               	addwfc	??_lutInit+1,w
  5248  031A  00BC               	movwf	??_lutInit+3
  5249  031B  083B               	movf	??_lutInit+2,w
  5250  031C  0086               	movwf	6
  5251  031D  083C               	movf	??_lutInit+3,w
  5252  031E  0087               	movwf	7
  5253  031F  30FF               	movlw	255
  5254  0320  0081               	movwf	1
  5255                           
  5256                           ;Controller.c: 139:         } else {
  5257  0321  2B51               	goto	l2858
  5258  0322                     l2856:	
  5259                           
  5260                           ;Controller.c: 140:             lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  5261  0322  0020               	movlb	0	; select bank0
  5262  0323  084B               	movf	lutInit@position+1,w
  5263  0324  00B0               	movwf	Map@x+1
  5264  0325  084A               	movf	lutInit@position,w
  5265  0326  00AF               	movwf	Map@x
  5266  0327  0846               	movf	lutInit@rxMin,w
  5267  0328  00B9               	movwf	??_lutInit
  5268  0329  01BA               	clrf	??_lutInit+1
  5269  032A  0839               	movf	??_lutInit,w
  5270  032B  00B1               	movwf	Map@inMin
  5271  032C  083A               	movf	??_lutInit+1,w
  5272  032D  00B2               	movwf	Map@inMin+1
  5273  032E  0847               	movf	lutInit@rxMax,w
  5274  032F  00BB               	movwf	??_lutInit+2
  5275  0330  01BC               	clrf	??_lutInit+3
  5276  0331  083B               	movf	??_lutInit+2,w
  5277  0332  00B3               	movwf	Map@inMax
  5278  0333  083C               	movf	??_lutInit+3,w
  5279  0334  00B4               	movwf	Map@inMax+1
  5280  0335  3000               	movlw	0
  5281  0336  00B5               	movwf	Map@outMin
  5282  0337  00B6               	movwf	Map@outMin+1
  5283  0338  30FF               	movlw	255
  5284  0339  00B7               	movwf	Map@outMax
  5285  033A  3000               	movlw	0
  5286  033B  00B8               	movwf	Map@outMax+1
  5287  033C  318E  26E6  3181   	fcall	_Map
  5288  033F  0020               	movlb	0	; select bank0
  5289  0340  00BD               	movwf	??_lutInit+4
  5290  0341  30F0               	movlw	240
  5291  0342  00BE               	movwf	??_lutInit+5
  5292  0343  3024               	movlw	36
  5293  0344  00BF               	movwf	??_lutInit+6
  5294  0345  084A               	movf	lutInit@position,w
  5295  0346  073E               	addwf	??_lutInit+5,w
  5296  0347  00C0               	movwf	??_lutInit+7
  5297  0348  084B               	movf	lutInit@position+1,w
  5298  0349  3D3F               	addwfc	??_lutInit+6,w
  5299  034A  00C1               	movwf	??_lutInit+8
  5300  034B  0840               	movf	??_lutInit+7,w
  5301  034C  0086               	movwf	6
  5302  034D  0841               	movf	??_lutInit+8,w
  5303  034E  0087               	movwf	7
  5304  034F  083D               	movf	??_lutInit+4,w
  5305  0350  0081               	movwf	1
  5306  0351                     l2858:	
  5307                           
  5308                           ;Controller.c: 144:         if (position < ryMin) {
  5309  0351  084B               	movf	lutInit@position+1,w
  5310  0352  3A80               	xorlw	128
  5311  0353  00B9               	movwf	??_lutInit
  5312  0354  3080               	movlw	128
  5313  0355  0239               	subwf	??_lutInit,w
  5314  0356  1D03               	skipz
  5315  0357  2B5A               	goto	u1995
  5316  0358  0848               	movf	lutInit@ryMin,w
  5317  0359  024A               	subwf	lutInit@position,w
  5318  035A                     u1995:	
  5319  035A  1803               	skipnc
  5320  035B  2B5D               	goto	u1991
  5321  035C  2B5E               	goto	u1990
  5322  035D                     u1991:	
  5323  035D  2B6B               	goto	l2862
  5324  035E                     u1990:	
  5325  035E                     l2860:	
  5326                           
  5327                           ;Controller.c: 145:             lutRY[position] = 0;
  5328  035E  30F0               	movlw	240
  5329  035F  0020               	movlb	0	; select bank0
  5330  0360  00B9               	movwf	??_lutInit
  5331  0361  3023               	movlw	35
  5332  0362  00BA               	movwf	??_lutInit+1
  5333  0363  084A               	movf	lutInit@position,w
  5334  0364  0739               	addwf	??_lutInit,w
  5335  0365  0086               	movwf	6
  5336  0366  084B               	movf	lutInit@position+1,w
  5337  0367  3D3A               	addwfc	??_lutInit+1,w
  5338  0368  0087               	movwf	7
  5339  0369  0181               	clrf	1
  5340                           
  5341                           ;Controller.c: 146:         } else if (position > ryMax) {
  5342  036A  2BB8               	goto	l2868
  5343  036B                     l2862:	
  5344  036B  0020               	movlb	0	; select bank0
  5345  036C  084B               	movf	lutInit@position+1,w
  5346  036D  3A80               	xorlw	128
  5347  036E  3C80               	sublw	128
  5348  036F  1D03               	skipz
  5349  0370  2B73               	goto	u2005
  5350  0371  084A               	movf	lutInit@position,w
  5351  0372  0249               	subwf	lutInit@ryMax,w
  5352  0373                     u2005:	
  5353  0373  1803               	skipnc
  5354  0374  2B76               	goto	u2001
  5355  0375  2B77               	goto	u2000
  5356  0376                     u2001:	
  5357  0376  2B89               	goto	l2866
  5358  0377                     u2000:	
  5359  0377                     l2864:	
  5360                           
  5361                           ;Controller.c: 147:             lutRY[position] = 255;
  5362  0377  30F0               	movlw	240
  5363  0378  0020               	movlb	0	; select bank0
  5364  0379  00B9               	movwf	??_lutInit
  5365  037A  3023               	movlw	35
  5366  037B  00BA               	movwf	??_lutInit+1
  5367  037C  084A               	movf	lutInit@position,w
  5368  037D  0739               	addwf	??_lutInit,w
  5369  037E  00BB               	movwf	??_lutInit+2
  5370  037F  084B               	movf	lutInit@position+1,w
  5371  0380  3D3A               	addwfc	??_lutInit+1,w
  5372  0381  00BC               	movwf	??_lutInit+3
  5373  0382  083B               	movf	??_lutInit+2,w
  5374  0383  0086               	movwf	6
  5375  0384  083C               	movf	??_lutInit+3,w
  5376  0385  0087               	movwf	7
  5377  0386  30FF               	movlw	255
  5378  0387  0081               	movwf	1
  5379                           
  5380                           ;Controller.c: 149:         } else {
  5381  0388  2BB8               	goto	l2868
  5382  0389                     l2866:	
  5383                           
  5384                           ;Controller.c: 150:             lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  5385  0389  0020               	movlb	0	; select bank0
  5386  038A  084B               	movf	lutInit@position+1,w
  5387  038B  00B0               	movwf	Map@x+1
  5388  038C  084A               	movf	lutInit@position,w
  5389  038D  00AF               	movwf	Map@x
  5390  038E  0848               	movf	lutInit@ryMin,w
  5391  038F  00B9               	movwf	??_lutInit
  5392  0390  01BA               	clrf	??_lutInit+1
  5393  0391  0839               	movf	??_lutInit,w
  5394  0392  00B1               	movwf	Map@inMin
  5395  0393  083A               	movf	??_lutInit+1,w
  5396  0394  00B2               	movwf	Map@inMin+1
  5397  0395  0849               	movf	lutInit@ryMax,w
  5398  0396  00BB               	movwf	??_lutInit+2
  5399  0397  01BC               	clrf	??_lutInit+3
  5400  0398  083B               	movf	??_lutInit+2,w
  5401  0399  00B3               	movwf	Map@inMax
  5402  039A  083C               	movf	??_lutInit+3,w
  5403  039B  00B4               	movwf	Map@inMax+1
  5404  039C  3000               	movlw	0
  5405  039D  00B5               	movwf	Map@outMin
  5406  039E  00B6               	movwf	Map@outMin+1
  5407  039F  30FF               	movlw	255
  5408  03A0  00B7               	movwf	Map@outMax
  5409  03A1  3000               	movlw	0
  5410  03A2  00B8               	movwf	Map@outMax+1
  5411  03A3  318E  26E6  3181   	fcall	_Map
  5412  03A6  0020               	movlb	0	; select bank0
  5413  03A7  00BD               	movwf	??_lutInit+4
  5414  03A8  30F0               	movlw	240
  5415  03A9  00BE               	movwf	??_lutInit+5
  5416  03AA  3023               	movlw	35
  5417  03AB  00BF               	movwf	??_lutInit+6
  5418  03AC  084A               	movf	lutInit@position,w
  5419  03AD  073E               	addwf	??_lutInit+5,w
  5420  03AE  00C0               	movwf	??_lutInit+7
  5421  03AF  084B               	movf	lutInit@position+1,w
  5422  03B0  3D3F               	addwfc	??_lutInit+6,w
  5423  03B1  00C1               	movwf	??_lutInit+8
  5424  03B2  0840               	movf	??_lutInit+7,w
  5425  03B3  0086               	movwf	6
  5426  03B4  0841               	movf	??_lutInit+8,w
  5427  03B5  0087               	movwf	7
  5428  03B6  083D               	movf	??_lutInit+4,w
  5429  03B7  0081               	movwf	1
  5430  03B8                     l2868:	
  5431                           
  5432                           ;Controller.c: 153:     }
  5433  03B8  3001               	movlw	1
  5434  03B9  07CA               	addwf	lutInit@position,f
  5435  03BA  3000               	movlw	0
  5436  03BB  3DCB               	addwfc	lutInit@position+1,f
  5437  03BC                     l2870:	
  5438  03BC  084B               	movf	lutInit@position+1,w
  5439  03BD  3A80               	xorlw	128
  5440  03BE  00B9               	movwf	??_lutInit
  5441  03BF  3081               	movlw	129
  5442  03C0  0239               	subwf	??_lutInit,w
  5443  03C1  1D03               	skipz
  5444  03C2  2BC5               	goto	u2015
  5445  03C3  3000               	movlw	0
  5446  03C4  024A               	subwf	lutInit@position,w
  5447  03C5                     u2015:	
  5448  03C5  1C03               	skipc
  5449  03C6  2BC8               	goto	u2011
  5450  03C7  2BC9               	goto	u2010
  5451  03C8                     u2011:	
  5452  03C8  2A1B               	goto	l2828
  5453  03C9                     u2010:	
  5454  03C9                     l302:	
  5455  03C9  0008               	return
  5456  03CA                     __end_of_lutInit:	
  5457                           
  5458                           	psect	text8
  5459  0E85                     __ptext8:	
  5460 ;; *************** function _eepromRead *****************
  5461 ;; Defined at:
  5462 ;;		line 33 in file "Nvm.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  address         1    wreg     unsigned char 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  address         1    1[BANK0 ] unsigned char 
  5467 ;;  data            1    2[BANK0 ] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      unsigned char 
  5470 ;; Registers used:
  5471 ;;		wreg
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5478 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5480 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5481 ;;Total ram usage:        3 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    3
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_lutInit
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           
  5492                           ;psect for function _eepromRead
  5493  0E85                     _eepromRead:	
  5494                           
  5495                           ;incstack = 0
  5496                           ; Regs used in _eepromRead: [wreg]
  5497                           ;eepromRead@address stored from wreg
  5498  0E85  0020               	movlb	0	; select bank0
  5499  0E86  00A1               	movwf	eepromRead@address
  5500  0E87                     l2714:	
  5501                           
  5502                           ;Nvm.c: 35:     char data;;Nvm.c: 37:     NVMCON1bits.NVMREGS = 1;
  5503  0E87  0030               	movlb	16	; select bank16
  5504  0E88  171E               	bsf	30,6	;volsfr
  5505  0E89                     l2716:	
  5506                           
  5507                           ;Nvm.c: 38:     NVMADRH = 0xF0;
  5508  0E89  30F0               	movlw	240
  5509  0E8A  009B               	movwf	27	;volatile
  5510                           
  5511                           ;Nvm.c: 39:     NVMADRL = address;
  5512  0E8B  0020               	movlb	0	; select bank0
  5513  0E8C  0821               	movf	eepromRead@address,w
  5514  0E8D  0030               	movlb	16	; select bank16
  5515  0E8E  009A               	movwf	26	;volatile
  5516  0E8F                     l2718:	
  5517                           
  5518                           ;Nvm.c: 40:     NVMCON1bits.RD = 1;
  5519  0E8F  141E               	bsf	30,0	;volsfr
  5520                           
  5521                           ;Nvm.c: 42:     data = NVMDATL;
  5522  0E90  081C               	movf	28,w	;volatile
  5523  0E91  0020               	movlb	0	; select bank0
  5524  0E92  00A0               	movwf	??_eepromRead
  5525  0E93  0820               	movf	??_eepromRead,w
  5526  0E94  00A2               	movwf	eepromRead@data
  5527                           
  5528                           ;Nvm.c: 44:     return data;
  5529  0E95  0822               	movf	eepromRead@data,w
  5530  0E96                     l449:	
  5531  0E96  0008               	return
  5532  0E97                     __end_of_eepromRead:	
  5533                           
  5534                           	psect	text9
  5535  0EE6                     __ptext9:	
  5536 ;; *************** function _Map *****************
  5537 ;; Defined at:
  5538 ;;		line 93 in file "Controller.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  x               2   15[BANK0 ] int 
  5541 ;;  inMin           2   17[BANK0 ] int 
  5542 ;;  inMax           2   19[BANK0 ] int 
  5543 ;;  outMin          2   21[BANK0 ] int 
  5544 ;;  outMax          2   23[BANK0 ] int 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, pclath, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5556 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:       10 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    4
  5563 ;; This function calls:
  5564 ;;		___awdiv
  5565 ;;		___wmul
  5566 ;; This function is called by:
  5567 ;;		_lutInit
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function _Map
  5573  0EE6                     _Map:	
  5574  0EE6                     l2710:	
  5575                           ;incstack = 0
  5576                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  5577                           
  5578                           
  5579                           ;Controller.c: 95:     return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + ou
      +                          tMin;
  5580  0EE6  0020               	movlb	0	; select bank0
  5581  0EE7  0831               	movf	Map@inMin,w
  5582  0EE8  0233               	subwf	Map@inMax,w
  5583  0EE9  00A6               	movwf	___awdiv@divisor
  5584  0EEA  0832               	movf	Map@inMin+1,w
  5585  0EEB  3B34               	subwfb	Map@inMax+1,w
  5586  0EEC  00A7               	movwf	___awdiv@divisor+1
  5587  0EED  0831               	movf	Map@inMin,w
  5588  0EEE  022F               	subwf	Map@x,w
  5589  0EEF  00A0               	movwf	___wmul@multiplier
  5590  0EF0  0832               	movf	Map@inMin+1,w
  5591  0EF1  3B30               	subwfb	Map@x+1,w
  5592  0EF2  00A1               	movwf	___wmul@multiplier+1
  5593  0EF3  0835               	movf	Map@outMin,w
  5594  0EF4  0237               	subwf	Map@outMax,w
  5595  0EF5  00A2               	movwf	___wmul@multiplicand
  5596  0EF6  0836               	movf	Map@outMin+1,w
  5597  0EF7  3B38               	subwfb	Map@outMax+1,w
  5598  0EF8  00A3               	movwf	___wmul@multiplicand+1
  5599  0EF9  318E  26C6  318E   	fcall	___wmul
  5600  0EFC  0020               	movlb	0	; select bank0
  5601  0EFD  0821               	movf	?___wmul+1,w
  5602  0EFE  00A9               	movwf	___awdiv@dividend+1
  5603  0EFF  0820               	movf	?___wmul,w
  5604  0F00  00A8               	movwf	___awdiv@dividend
  5605  0F01  3187  277A  318E   	fcall	___awdiv
  5606  0F04  0020               	movlb	0	; select bank0
  5607  0F05  0826               	movf	?___awdiv,w
  5608  0F06  0735               	addwf	Map@outMin,w
  5609  0F07                     l281:	
  5610  0F07  0008               	return
  5611  0F08                     __end_of_Map:	
  5612                           
  5613                           	psect	text10
  5614  0EC6                     __ptext10:	
  5615 ;; *************** function ___wmul *****************
  5616 ;; Defined at:
  5617 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5620 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  product         2    4[BANK0 ] unsigned int 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  2    0[BANK0 ] unsigned int 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5633 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5635 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5636 ;;Total ram usage:        6 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    3
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_Map
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           
  5647                           ;psect for function ___wmul
  5648  0EC6                     ___wmul:	
  5649  0EC6                     l2654:	
  5650                           ;incstack = 0
  5651                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5652                           
  5653  0EC6  0020               	movlb	0	; select bank0
  5654  0EC7  01A4               	clrf	___wmul@product
  5655  0EC8  01A5               	clrf	___wmul@product+1
  5656  0EC9                     l2656:	
  5657  0EC9  1C20               	btfss	___wmul@multiplier,0
  5658  0ECA  2ECC               	goto	u1631
  5659  0ECB  2ECD               	goto	u1630
  5660  0ECC                     u1631:	
  5661  0ECC  2ED1               	goto	l604
  5662  0ECD                     u1630:	
  5663  0ECD                     l2658:	
  5664  0ECD  0822               	movf	___wmul@multiplicand,w
  5665  0ECE  07A4               	addwf	___wmul@product,f
  5666  0ECF  0823               	movf	___wmul@multiplicand+1,w
  5667  0ED0  3DA5               	addwfc	___wmul@product+1,f
  5668  0ED1                     l604:	
  5669  0ED1  3001               	movlw	1
  5670  0ED2                     u1645:	
  5671  0ED2  35A2               	lslf	___wmul@multiplicand,f
  5672  0ED3  0DA3               	rlf	___wmul@multiplicand+1,f
  5673  0ED4  0B89               	decfsz	9,f
  5674  0ED5  2ED2               	goto	u1645
  5675  0ED6                     l2660:	
  5676  0ED6  3001               	movlw	1
  5677  0ED7                     u1655:	
  5678  0ED7  36A1               	lsrf	___wmul@multiplier+1,f
  5679  0ED8  0CA0               	rrf	___wmul@multiplier,f
  5680  0ED9  0B89               	decfsz	9,f
  5681  0EDA  2ED7               	goto	u1655
  5682  0EDB                     l2662:	
  5683  0EDB  0820               	movf	___wmul@multiplier,w
  5684  0EDC  0421               	iorwf	___wmul@multiplier+1,w
  5685  0EDD  1D03               	btfss	3,2
  5686  0EDE  2EE0               	goto	u1661
  5687  0EDF  2EE1               	goto	u1660
  5688  0EE0                     u1661:	
  5689  0EE0  2EC9               	goto	l2656
  5690  0EE1                     u1660:	
  5691  0EE1                     l2664:	
  5692  0EE1  0825               	movf	___wmul@product+1,w
  5693  0EE2  00A1               	movwf	?___wmul+1
  5694  0EE3  0824               	movf	___wmul@product,w
  5695  0EE4  00A0               	movwf	?___wmul
  5696  0EE5                     l606:	
  5697  0EE5  0008               	return
  5698  0EE6                     __end_of___wmul:	
  5699                           
  5700                           	psect	text11
  5701  077A                     __ptext11:	
  5702 ;; *************** function ___awdiv *****************
  5703 ;; Defined at:
  5704 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  divisor         2    6[BANK0 ] int 
  5707 ;;  dividend        2    8[BANK0 ] int 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  quotient        2   13[BANK0 ] int 
  5710 ;;  sign            1   12[BANK0 ] unsigned char 
  5711 ;;  counter         1   11[BANK0 ] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2    6[BANK0 ] int 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5722 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5724 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5725 ;;Total ram usage:        9 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    3
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_Map
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function ___awdiv
  5737  077A                     ___awdiv:	
  5738  077A                     l1874:	
  5739                           ;incstack = 0
  5740                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5741                           
  5742  077A  0020               	movlb	0	; select bank0
  5743  077B  01AC               	clrf	___awdiv@sign
  5744  077C                     l1876:	
  5745  077C  1FA7               	btfss	___awdiv@divisor+1,7
  5746  077D  2F7F               	goto	u861
  5747  077E  2F80               	goto	u860
  5748  077F                     u861:	
  5749  077F  2F87               	goto	l1882
  5750  0780                     u860:	
  5751  0780                     l1878:	
  5752  0780  09A6               	comf	___awdiv@divisor,f
  5753  0781  09A7               	comf	___awdiv@divisor+1,f
  5754  0782  0AA6               	incf	___awdiv@divisor,f
  5755  0783  1903               	skipnz
  5756  0784  0AA7               	incf	___awdiv@divisor+1,f
  5757  0785                     l1880:	
  5758  0785  01AC               	clrf	___awdiv@sign
  5759  0786  0AAC               	incf	___awdiv@sign,f
  5760  0787                     l1882:	
  5761  0787  1FA9               	btfss	___awdiv@dividend+1,7
  5762  0788  2F8A               	goto	u871
  5763  0789  2F8B               	goto	u870
  5764  078A                     u871:	
  5765  078A  2F94               	goto	l1888
  5766  078B                     u870:	
  5767  078B                     l1884:	
  5768  078B  09A8               	comf	___awdiv@dividend,f
  5769  078C  09A9               	comf	___awdiv@dividend+1,f
  5770  078D  0AA8               	incf	___awdiv@dividend,f
  5771  078E  1903               	skipnz
  5772  078F  0AA9               	incf	___awdiv@dividend+1,f
  5773  0790                     l1886:	
  5774  0790  3001               	movlw	1
  5775  0791  00AA               	movwf	??___awdiv
  5776  0792  082A               	movf	??___awdiv,w
  5777  0793  06AC               	xorwf	___awdiv@sign,f
  5778  0794                     l1888:	
  5779  0794  01AD               	clrf	___awdiv@quotient
  5780  0795  01AE               	clrf	___awdiv@quotient+1
  5781  0796                     l1890:	
  5782  0796  0826               	movf	___awdiv@divisor,w
  5783  0797  0427               	iorwf	___awdiv@divisor+1,w
  5784  0798  1903               	btfsc	3,2
  5785  0799  2F9B               	goto	u881
  5786  079A  2F9C               	goto	u880
  5787  079B                     u881:	
  5788  079B  2FCB               	goto	l1910
  5789  079C                     u880:	
  5790  079C                     l1892:	
  5791  079C  01AB               	clrf	___awdiv@counter
  5792  079D  0AAB               	incf	___awdiv@counter,f
  5793  079E  2FA8               	goto	l1898
  5794  079F                     l1894:	
  5795  079F  3001               	movlw	1
  5796  07A0                     u895:	
  5797  07A0  35A6               	lslf	___awdiv@divisor,f
  5798  07A1  0DA7               	rlf	___awdiv@divisor+1,f
  5799  07A2  0B89               	decfsz	9,f
  5800  07A3  2FA0               	goto	u895
  5801  07A4                     l1896:	
  5802  07A4  3001               	movlw	1
  5803  07A5  00AA               	movwf	??___awdiv
  5804  07A6  082A               	movf	??___awdiv,w
  5805  07A7  07AB               	addwf	___awdiv@counter,f
  5806  07A8                     l1898:	
  5807  07A8  1FA7               	btfss	___awdiv@divisor+1,7
  5808  07A9  2FAB               	goto	u901
  5809  07AA  2FAC               	goto	u900
  5810  07AB                     u901:	
  5811  07AB  2F9F               	goto	l1894
  5812  07AC                     u900:	
  5813  07AC                     l1900:	
  5814  07AC  3001               	movlw	1
  5815  07AD                     u915:	
  5816  07AD  35AD               	lslf	___awdiv@quotient,f
  5817  07AE  0DAE               	rlf	___awdiv@quotient+1,f
  5818  07AF  0B89               	decfsz	9,f
  5819  07B0  2FAD               	goto	u915
  5820  07B1  0827               	movf	___awdiv@divisor+1,w
  5821  07B2  0229               	subwf	___awdiv@dividend+1,w
  5822  07B3  1D03               	skipz
  5823  07B4  2FB7               	goto	u925
  5824  07B5  0826               	movf	___awdiv@divisor,w
  5825  07B6  0228               	subwf	___awdiv@dividend,w
  5826  07B7                     u925:	
  5827  07B7  1C03               	skipc
  5828  07B8  2FBA               	goto	u921
  5829  07B9  2FBB               	goto	u920
  5830  07BA                     u921:	
  5831  07BA  2FC0               	goto	l1906
  5832  07BB                     u920:	
  5833  07BB                     l1902:	
  5834  07BB  0826               	movf	___awdiv@divisor,w
  5835  07BC  02A8               	subwf	___awdiv@dividend,f
  5836  07BD  0827               	movf	___awdiv@divisor+1,w
  5837  07BE  3BA9               	subwfb	___awdiv@dividend+1,f
  5838  07BF                     l1904:	
  5839  07BF  142D               	bsf	___awdiv@quotient,0
  5840  07C0                     l1906:	
  5841  07C0  3001               	movlw	1
  5842  07C1                     u935:	
  5843  07C1  36A7               	lsrf	___awdiv@divisor+1,f
  5844  07C2  0CA6               	rrf	___awdiv@divisor,f
  5845  07C3  0B89               	decfsz	9,f
  5846  07C4  2FC1               	goto	u935
  5847  07C5                     l1908:	
  5848  07C5  3001               	movlw	1
  5849  07C6  02AB               	subwf	___awdiv@counter,f
  5850  07C7  1D03               	btfss	3,2
  5851  07C8  2FCA               	goto	u941
  5852  07C9  2FCB               	goto	u940
  5853  07CA                     u941:	
  5854  07CA  2FAC               	goto	l1900
  5855  07CB                     u940:	
  5856  07CB                     l1910:	
  5857  07CB  082C               	movf	___awdiv@sign,w
  5858  07CC  1903               	btfsc	3,2
  5859  07CD  2FCF               	goto	u951
  5860  07CE  2FD0               	goto	u950
  5861  07CF                     u951:	
  5862  07CF  2FD5               	goto	l1914
  5863  07D0                     u950:	
  5864  07D0                     l1912:	
  5865  07D0  09AD               	comf	___awdiv@quotient,f
  5866  07D1  09AE               	comf	___awdiv@quotient+1,f
  5867  07D2  0AAD               	incf	___awdiv@quotient,f
  5868  07D3  1903               	skipnz
  5869  07D4  0AAE               	incf	___awdiv@quotient+1,f
  5870  07D5                     l1914:	
  5871  07D5  082E               	movf	___awdiv@quotient+1,w
  5872  07D6  00A7               	movwf	?___awdiv+1
  5873  07D7  082D               	movf	___awdiv@quotient,w
  5874  07D8  00A6               	movwf	?___awdiv
  5875  07D9                     l757:	
  5876  07D9  0008               	return
  5877  07DA                     __end_of___awdiv:	
  5878                           
  5879                           	psect	text12
  5880  03CA                     __ptext12:	
  5881 ;; *************** function _configureController *****************
  5882 ;; Defined at:
  5883 ;;		line 186 in file "Controller.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  ry              1   21[BANK0 ] unsigned char 
  5888 ;;  rx              1   20[BANK0 ] unsigned char 
  5889 ;;  ly              1   19[BANK0 ] unsigned char 
  5890 ;;  lx              1   18[BANK0 ] unsigned char 
  5891 ;;  ryMax           1   17[BANK0 ] unsigned char 
  5892 ;;  ryMin           1   16[BANK0 ] unsigned char 
  5893 ;;  rxMax           1   15[BANK0 ] unsigned char 
  5894 ;;  rxMin           1   14[BANK0 ] unsigned char 
  5895 ;;  lyMax           1   13[BANK0 ] unsigned char 
  5896 ;;  lyMin           1   12[BANK0 ] unsigned char 
  5897 ;;  lxMax           1   11[BANK0 ] unsigned char 
  5898 ;;  lxMin           1   10[BANK0 ] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5909 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5911 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5912 ;;Total ram usage:       13 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    5
  5915 ;; This function calls:
  5916 ;;		_eepromWrite
  5917 ;;		_readADC
  5918 ;;		_readController
  5919 ;; This function is called by:
  5920 ;;		_main
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _configureController
  5926  03CA                     _configureController:	
  5927  03CA                     l2872:	
  5928                           ;incstack = 0
  5929                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5930                           
  5931                           
  5932                           ;Controller.c: 189:     INTCONbits.GIE = 0;
  5933  03CA  138B               	bcf	11,7	;volatile
  5934                           
  5935                           ;Controller.c: 190:     INTCONbits.PEIE = 0;
  5936  03CB  130B               	bcf	11,6	;volatile
  5937  03CC                     l2874:	
  5938                           
  5939                           ;Controller.c: 192:     char lxMin = readADC(0b010000);
  5940  03CC  3010               	movlw	16
  5941  03CD  0020               	movlb	0	; select bank0
  5942  03CE  00A0               	movwf	readADC@channel
  5943  03CF  3000               	movlw	0
  5944  03D0  00A1               	movwf	readADC@channel+1
  5945  03D1  318F  2708  3183   	fcall	_readADC
  5946  03D4  0020               	movlb	0	; select bank0
  5947  03D5  0820               	movf	?_readADC,w
  5948  03D6  00A9               	movwf	??_configureController
  5949  03D7  0829               	movf	??_configureController,w
  5950  03D8  00AA               	movwf	configureController@lxMin
  5951                           
  5952                           ;Controller.c: 193:     char lxMax = readADC(0b010000);
  5953  03D9  3010               	movlw	16
  5954  03DA  00A0               	movwf	readADC@channel
  5955  03DB  3000               	movlw	0
  5956  03DC  00A1               	movwf	readADC@channel+1
  5957  03DD  318F  2708  3183   	fcall	_readADC
  5958  03E0  0020               	movlb	0	; select bank0
  5959  03E1  0820               	movf	?_readADC,w
  5960  03E2  00A9               	movwf	??_configureController
  5961  03E3  0829               	movf	??_configureController,w
  5962  03E4  00AB               	movwf	configureController@lxMax
  5963                           
  5964                           ;Controller.c: 194:     char lyMin = readADC(0b10001);
  5965  03E5  3011               	movlw	17
  5966  03E6  00A0               	movwf	readADC@channel
  5967  03E7  3000               	movlw	0
  5968  03E8  00A1               	movwf	readADC@channel+1
  5969  03E9  318F  2708  3183   	fcall	_readADC
  5970  03EC  0020               	movlb	0	; select bank0
  5971  03ED  0820               	movf	?_readADC,w
  5972  03EE  00A9               	movwf	??_configureController
  5973  03EF  0829               	movf	??_configureController,w
  5974  03F0  00AC               	movwf	configureController@lyMin
  5975                           
  5976                           ;Controller.c: 195:     char lyMax = readADC(0b10001);
  5977  03F1  3011               	movlw	17
  5978  03F2  00A0               	movwf	readADC@channel
  5979  03F3  3000               	movlw	0
  5980  03F4  00A1               	movwf	readADC@channel+1
  5981  03F5  318F  2708  3183   	fcall	_readADC
  5982  03F8  0020               	movlb	0	; select bank0
  5983  03F9  0820               	movf	?_readADC,w
  5984  03FA  00A9               	movwf	??_configureController
  5985  03FB  0829               	movf	??_configureController,w
  5986  03FC  00AD               	movwf	configureController@lyMax
  5987                           
  5988                           ;Controller.c: 197:     char rxMin = readADC(0b010110);
  5989  03FD  3016               	movlw	22
  5990  03FE  00A0               	movwf	readADC@channel
  5991  03FF  3000               	movlw	0
  5992  0400  00A1               	movwf	readADC@channel+1
  5993  0401  318F  2708  3183   	fcall	_readADC
  5994  0404  0020               	movlb	0	; select bank0
  5995  0405  0820               	movf	?_readADC,w
  5996  0406  00A9               	movwf	??_configureController
  5997  0407  0829               	movf	??_configureController,w
  5998  0408  00AE               	movwf	configureController@rxMin
  5999                           
  6000                           ;Controller.c: 198:     char rxMax = readADC(0b010110);
  6001  0409  3016               	movlw	22
  6002  040A  00A0               	movwf	readADC@channel
  6003  040B  3000               	movlw	0
  6004  040C  00A1               	movwf	readADC@channel+1
  6005  040D  318F  2708  3183   	fcall	_readADC
  6006  0410  0020               	movlb	0	; select bank0
  6007  0411  0820               	movf	?_readADC,w
  6008  0412  00A9               	movwf	??_configureController
  6009  0413  0829               	movf	??_configureController,w
  6010  0414  00AF               	movwf	configureController@rxMax
  6011                           
  6012                           ;Controller.c: 199:     char ryMin = readADC(0b010111);
  6013  0415  3017               	movlw	23
  6014  0416  00A0               	movwf	readADC@channel
  6015  0417  3000               	movlw	0
  6016  0418  00A1               	movwf	readADC@channel+1
  6017  0419  318F  2708  3183   	fcall	_readADC
  6018  041C  0020               	movlb	0	; select bank0
  6019  041D  0820               	movf	?_readADC,w
  6020  041E  00A9               	movwf	??_configureController
  6021  041F  0829               	movf	??_configureController,w
  6022  0420  00B0               	movwf	configureController@ryMin
  6023                           
  6024                           ;Controller.c: 200:     char ryMax = readADC(0b010111);
  6025  0421  3017               	movlw	23
  6026  0422  00A0               	movwf	readADC@channel
  6027  0423  3000               	movlw	0
  6028  0424  00A1               	movwf	readADC@channel+1
  6029  0425  318F  2708  3183   	fcall	_readADC
  6030  0428  0020               	movlb	0	; select bank0
  6031  0429  0820               	movf	?_readADC,w
  6032  042A  00A9               	movwf	??_configureController
  6033  042B  0829               	movf	??_configureController,w
  6034  042C  00B1               	movwf	configureController@ryMax
  6035  042D                     l2876:	
  6036                           
  6037                           ;Controller.c: 212:         readController(0);
  6038  042D  3000               	movlw	0
  6039  042E  3185  252B  3183   	fcall	_readController
  6040  0431                     l2878:	
  6041                           
  6042                           ;Controller.c: 215:         if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F)
      +                           {
  6043  0431  306F               	movlw	111
  6044  0432  0020               	movlb	0	; select bank0
  6045  0433  0656               	xorwf	_digitalStateFirst,w
  6046  0434  1D03               	btfss	3,2
  6047  0435  2C37               	goto	u2021
  6048  0436  2C38               	goto	u2020
  6049  0437                     u2021:	
  6050  0437  2C53               	goto	l2894
  6051  0438                     u2020:	
  6052  0438                     l2880:	
  6053  0438  303F               	movlw	63
  6054  0439  0655               	xorwf	_digitalStateSecond,w
  6055  043A  1D03               	btfss	3,2
  6056  043B  2C3D               	goto	u2031
  6057  043C  2C3E               	goto	u2030
  6058  043D                     u2031:	
  6059  043D  2C53               	goto	l2894
  6060  043E                     u2030:	
  6061  043E                     l2882:	
  6062                           
  6063                           ;Controller.c: 218:             lxMin = 0;
  6064  043E  01AA               	clrf	configureController@lxMin
  6065  043F                     l2884:	
  6066                           
  6067                           ;Controller.c: 219:             lxMax = 255;
  6068  043F  30FF               	movlw	255
  6069  0440  00A9               	movwf	??_configureController
  6070  0441  0829               	movf	??_configureController,w
  6071  0442  00AB               	movwf	configureController@lxMax
  6072  0443                     l2886:	
  6073                           
  6074                           ;Controller.c: 220:             lyMin = 0;
  6075  0443  01AC               	clrf	configureController@lyMin
  6076                           
  6077                           ;Controller.c: 221:             lyMax = 255;
  6078  0444  30FF               	movlw	255
  6079  0445  00A9               	movwf	??_configureController
  6080  0446  0829               	movf	??_configureController,w
  6081  0447  00AD               	movwf	configureController@lyMax
  6082  0448                     l2888:	
  6083                           
  6084                           ;Controller.c: 223:             rxMin = 0;
  6085  0448  01AE               	clrf	configureController@rxMin
  6086  0449                     l2890:	
  6087                           
  6088                           ;Controller.c: 224:             rxMax = 255;
  6089  0449  30FF               	movlw	255
  6090  044A  00A9               	movwf	??_configureController
  6091  044B  0829               	movf	??_configureController,w
  6092  044C  00AF               	movwf	configureController@rxMax
  6093                           
  6094                           ;Controller.c: 225:             ryMin = 0;
  6095  044D  01B0               	clrf	configureController@ryMin
  6096  044E                     l2892:	
  6097                           
  6098                           ;Controller.c: 226:             ryMax = 255;
  6099  044E  30FF               	movlw	255
  6100  044F  00A9               	movwf	??_configureController
  6101  0450  0829               	movf	??_configureController,w
  6102  0451  00B1               	movwf	configureController@ryMax
  6103                           
  6104                           ;Controller.c: 228:             break;
  6105  0452  2CE1               	goto	l2920
  6106  0453                     l2894:	
  6107                           
  6108                           ;Controller.c: 232:         if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF)
      +                           {
  6109  0453  307F               	movlw	127
  6110  0454  0656               	xorwf	_digitalStateFirst,w
  6111  0455  1D03               	btfss	3,2
  6112  0456  2C58               	goto	u2041
  6113  0457  2C59               	goto	u2040
  6114  0458                     u2041:	
  6115  0458  2C60               	goto	l2900
  6116  0459                     u2040:	
  6117  0459                     l2896:	
  6118  0459  30CF               	movlw	207
  6119  045A  0655               	xorwf	_digitalStateSecond,w
  6120  045B  1D03               	btfss	3,2
  6121  045C  2C5E               	goto	u2051
  6122  045D  2C5F               	goto	u2050
  6123  045E                     u2051:	
  6124  045E  2C60               	goto	l2900
  6125  045F                     u2050:	
  6126  045F  2CE1               	goto	l2920
  6127  0460                     l2900:	
  6128                           
  6129                           ;Controller.c: 237:         lx = readADC(0b010000);
  6130  0460  3010               	movlw	16
  6131  0461  00A0               	movwf	readADC@channel
  6132  0462  3000               	movlw	0
  6133  0463  00A1               	movwf	readADC@channel+1
  6134  0464  318F  2708  3183   	fcall	_readADC
  6135  0467  0020               	movlb	0	; select bank0
  6136  0468  0820               	movf	?_readADC,w
  6137  0469  00A9               	movwf	??_configureController
  6138  046A  0829               	movf	??_configureController,w
  6139  046B  00B2               	movwf	configureController@lx
  6140                           
  6141                           ;Controller.c: 238:         ly = readADC(0b10001);
  6142  046C  3011               	movlw	17
  6143  046D  00A0               	movwf	readADC@channel
  6144  046E  3000               	movlw	0
  6145  046F  00A1               	movwf	readADC@channel+1
  6146  0470  318F  2708  3183   	fcall	_readADC
  6147  0473  0020               	movlb	0	; select bank0
  6148  0474  0820               	movf	?_readADC,w
  6149  0475  00A9               	movwf	??_configureController
  6150  0476  0829               	movf	??_configureController,w
  6151  0477  00B3               	movwf	configureController@ly
  6152                           
  6153                           ;Controller.c: 240:         rx = readADC(0b010110);
  6154  0478  3016               	movlw	22
  6155  0479  00A0               	movwf	readADC@channel
  6156  047A  3000               	movlw	0
  6157  047B  00A1               	movwf	readADC@channel+1
  6158  047C  318F  2708  3183   	fcall	_readADC
  6159  047F  0020               	movlb	0	; select bank0
  6160  0480  0820               	movf	?_readADC,w
  6161  0481  00A9               	movwf	??_configureController
  6162  0482  0829               	movf	??_configureController,w
  6163  0483  00B4               	movwf	configureController@rx
  6164                           
  6165                           ;Controller.c: 241:         ry = readADC(0b010111);
  6166  0484  3017               	movlw	23
  6167  0485  00A0               	movwf	readADC@channel
  6168  0486  3000               	movlw	0
  6169  0487  00A1               	movwf	readADC@channel+1
  6170  0488  318F  2708  3183   	fcall	_readADC
  6171  048B  0020               	movlb	0	; select bank0
  6172  048C  0820               	movf	?_readADC,w
  6173  048D  00A9               	movwf	??_configureController
  6174  048E  0829               	movf	??_configureController,w
  6175  048F  00B5               	movwf	configureController@ry
  6176  0490                     l2902:	
  6177                           
  6178                           ;Controller.c: 244:         if (ly > lyMax) {
  6179  0490  0833               	movf	configureController@ly,w
  6180  0491  022D               	subwf	configureController@lyMax,w
  6181  0492  1803               	skipnc
  6182  0493  2C95               	goto	u2061
  6183  0494  2C96               	goto	u2060
  6184  0495                     u2061:	
  6185  0495  2C9A               	goto	l321
  6186  0496                     u2060:	
  6187  0496                     l2904:	
  6188                           
  6189                           ;Controller.c: 245:             lyMax = ly;
  6190  0496  0833               	movf	configureController@ly,w
  6191  0497  00A9               	movwf	??_configureController
  6192  0498  0829               	movf	??_configureController,w
  6193  0499  00AD               	movwf	configureController@lyMax
  6194  049A                     l321:	
  6195                           ;Controller.c: 246:         }
  6196                           
  6197                           
  6198                           ;Controller.c: 248:         if (ly < lyMin) {
  6199  049A  082C               	movf	configureController@lyMin,w
  6200  049B  0233               	subwf	configureController@ly,w
  6201  049C  1803               	skipnc
  6202  049D  2C9F               	goto	u2071
  6203  049E  2CA0               	goto	u2070
  6204  049F                     u2071:	
  6205  049F  2CA4               	goto	l322
  6206  04A0                     u2070:	
  6207  04A0                     l2906:	
  6208                           
  6209                           ;Controller.c: 249:             lyMin = ly;
  6210  04A0  0833               	movf	configureController@ly,w
  6211  04A1  00A9               	movwf	??_configureController
  6212  04A2  0829               	movf	??_configureController,w
  6213  04A3  00AC               	movwf	configureController@lyMin
  6214  04A4                     l322:	
  6215                           ;Controller.c: 250:         }
  6216                           
  6217                           
  6218                           ;Controller.c: 252:         if (lx > lxMax) {
  6219  04A4  0832               	movf	configureController@lx,w
  6220  04A5  022B               	subwf	configureController@lxMax,w
  6221  04A6  1803               	skipnc
  6222  04A7  2CA9               	goto	u2081
  6223  04A8  2CAA               	goto	u2080
  6224  04A9                     u2081:	
  6225  04A9  2CAE               	goto	l323
  6226  04AA                     u2080:	
  6227  04AA                     l2908:	
  6228                           
  6229                           ;Controller.c: 253:             lxMax = lx;
  6230  04AA  0832               	movf	configureController@lx,w
  6231  04AB  00A9               	movwf	??_configureController
  6232  04AC  0829               	movf	??_configureController,w
  6233  04AD  00AB               	movwf	configureController@lxMax
  6234  04AE                     l323:	
  6235                           ;Controller.c: 254:         }
  6236                           
  6237                           
  6238                           ;Controller.c: 256:         if (lx < lxMin) {
  6239  04AE  082A               	movf	configureController@lxMin,w
  6240  04AF  0232               	subwf	configureController@lx,w
  6241  04B0  1803               	skipnc
  6242  04B1  2CB3               	goto	u2091
  6243  04B2  2CB4               	goto	u2090
  6244  04B3                     u2091:	
  6245  04B3  2CB8               	goto	l324
  6246  04B4                     u2090:	
  6247  04B4                     l2910:	
  6248                           
  6249                           ;Controller.c: 257:             lxMin = lx;
  6250  04B4  0832               	movf	configureController@lx,w
  6251  04B5  00A9               	movwf	??_configureController
  6252  04B6  0829               	movf	??_configureController,w
  6253  04B7  00AA               	movwf	configureController@lxMin
  6254  04B8                     l324:	
  6255                           ;Controller.c: 258:         }
  6256                           
  6257                           
  6258                           ;Controller.c: 262:         if (ry > ryMax) {
  6259  04B8  0835               	movf	configureController@ry,w
  6260  04B9  0231               	subwf	configureController@ryMax,w
  6261  04BA  1803               	skipnc
  6262  04BB  2CBD               	goto	u2101
  6263  04BC  2CBE               	goto	u2100
  6264  04BD                     u2101:	
  6265  04BD  2CC2               	goto	l325
  6266  04BE                     u2100:	
  6267  04BE                     l2912:	
  6268                           
  6269                           ;Controller.c: 263:             ryMax = ry;
  6270  04BE  0835               	movf	configureController@ry,w
  6271  04BF  00A9               	movwf	??_configureController
  6272  04C0  0829               	movf	??_configureController,w
  6273  04C1  00B1               	movwf	configureController@ryMax
  6274  04C2                     l325:	
  6275                           ;Controller.c: 264:         }
  6276                           
  6277                           
  6278                           ;Controller.c: 266:         if (ry < ryMin) {
  6279  04C2  0830               	movf	configureController@ryMin,w
  6280  04C3  0235               	subwf	configureController@ry,w
  6281  04C4  1803               	skipnc
  6282  04C5  2CC7               	goto	u2111
  6283  04C6  2CC8               	goto	u2110
  6284  04C7                     u2111:	
  6285  04C7  2CCC               	goto	l326
  6286  04C8                     u2110:	
  6287  04C8                     l2914:	
  6288                           
  6289                           ;Controller.c: 267:             ryMin = ry;
  6290  04C8  0835               	movf	configureController@ry,w
  6291  04C9  00A9               	movwf	??_configureController
  6292  04CA  0829               	movf	??_configureController,w
  6293  04CB  00B0               	movwf	configureController@ryMin
  6294  04CC                     l326:	
  6295                           ;Controller.c: 268:         }
  6296                           
  6297                           
  6298                           ;Controller.c: 270:         if (rx > rxMax) {
  6299  04CC  0834               	movf	configureController@rx,w
  6300  04CD  022F               	subwf	configureController@rxMax,w
  6301  04CE  1803               	skipnc
  6302  04CF  2CD1               	goto	u2121
  6303  04D0  2CD2               	goto	u2120
  6304  04D1                     u2121:	
  6305  04D1  2CD6               	goto	l327
  6306  04D2                     u2120:	
  6307  04D2                     l2916:	
  6308                           
  6309                           ;Controller.c: 271:             rxMax = rx;
  6310  04D2  0834               	movf	configureController@rx,w
  6311  04D3  00A9               	movwf	??_configureController
  6312  04D4  0829               	movf	??_configureController,w
  6313  04D5  00AF               	movwf	configureController@rxMax
  6314  04D6                     l327:	
  6315                           ;Controller.c: 272:         }
  6316                           
  6317                           
  6318                           ;Controller.c: 274:         if (rx < rxMin) {
  6319  04D6  082E               	movf	configureController@rxMin,w
  6320  04D7  0234               	subwf	configureController@rx,w
  6321  04D8  1803               	skipnc
  6322  04D9  2CDB               	goto	u2131
  6323  04DA  2CDC               	goto	u2130
  6324  04DB                     u2131:	
  6325  04DB  2C2D               	goto	l2876
  6326  04DC                     u2130:	
  6327  04DC                     l2918:	
  6328                           
  6329                           ;Controller.c: 275:             rxMin = rx;
  6330  04DC  0834               	movf	configureController@rx,w
  6331  04DD  00A9               	movwf	??_configureController
  6332  04DE  0829               	movf	??_configureController,w
  6333  04DF  00AE               	movwf	configureController@rxMin
  6334  04E0  2C2D               	goto	l2876
  6335  04E1                     l2920:	
  6336                           
  6337                           ;Controller.c: 281:     eepromWrite(0x60, lxMin);
  6338  04E1  082A               	movf	configureController@lxMin,w
  6339  04E2  00A9               	movwf	??_configureController
  6340  04E3  0829               	movf	??_configureController,w
  6341  04E4  00A0               	movwf	eepromWrite@data
  6342  04E5  3060               	movlw	96
  6343  04E6  3187  27DA  3183   	fcall	_eepromWrite
  6344                           
  6345                           ;Controller.c: 282:     eepromWrite(0x61, lxMax);
  6346  04E9  0020               	movlb	0	; select bank0
  6347  04EA  082B               	movf	configureController@lxMax,w
  6348  04EB  00A9               	movwf	??_configureController
  6349  04EC  0829               	movf	??_configureController,w
  6350  04ED  00A0               	movwf	eepromWrite@data
  6351  04EE  3061               	movlw	97
  6352  04EF  3187  27DA  3183   	fcall	_eepromWrite
  6353                           
  6354                           ;Controller.c: 283:     eepromWrite(0x62, lyMin);
  6355  04F2  0020               	movlb	0	; select bank0
  6356  04F3  082C               	movf	configureController@lyMin,w
  6357  04F4  00A9               	movwf	??_configureController
  6358  04F5  0829               	movf	??_configureController,w
  6359  04F6  00A0               	movwf	eepromWrite@data
  6360  04F7  3062               	movlw	98
  6361  04F8  3187  27DA  3183   	fcall	_eepromWrite
  6362                           
  6363                           ;Controller.c: 284:     eepromWrite(0x63, lyMax);
  6364  04FB  0020               	movlb	0	; select bank0
  6365  04FC  082D               	movf	configureController@lyMax,w
  6366  04FD  00A9               	movwf	??_configureController
  6367  04FE  0829               	movf	??_configureController,w
  6368  04FF  00A0               	movwf	eepromWrite@data
  6369  0500  3063               	movlw	99
  6370  0501  3187  27DA  3183   	fcall	_eepromWrite
  6371                           
  6372                           ;Controller.c: 286:     eepromWrite(0x64, rxMin);
  6373  0504  0020               	movlb	0	; select bank0
  6374  0505  082E               	movf	configureController@rxMin,w
  6375  0506  00A9               	movwf	??_configureController
  6376  0507  0829               	movf	??_configureController,w
  6377  0508  00A0               	movwf	eepromWrite@data
  6378  0509  3064               	movlw	100
  6379  050A  3187  27DA  3183   	fcall	_eepromWrite
  6380                           
  6381                           ;Controller.c: 287:     eepromWrite(0x65, rxMax);
  6382  050D  0020               	movlb	0	; select bank0
  6383  050E  082F               	movf	configureController@rxMax,w
  6384  050F  00A9               	movwf	??_configureController
  6385  0510  0829               	movf	??_configureController,w
  6386  0511  00A0               	movwf	eepromWrite@data
  6387  0512  3065               	movlw	101
  6388  0513  3187  27DA  3183   	fcall	_eepromWrite
  6389                           
  6390                           ;Controller.c: 288:     eepromWrite(0x66, ryMin);
  6391  0516  0020               	movlb	0	; select bank0
  6392  0517  0830               	movf	configureController@ryMin,w
  6393  0518  00A9               	movwf	??_configureController
  6394  0519  0829               	movf	??_configureController,w
  6395  051A  00A0               	movwf	eepromWrite@data
  6396  051B  3066               	movlw	102
  6397  051C  3187  27DA  3183   	fcall	_eepromWrite
  6398                           
  6399                           ;Controller.c: 289:     eepromWrite(0x67, ryMax);
  6400  051F  0020               	movlb	0	; select bank0
  6401  0520  0831               	movf	configureController@ryMax,w
  6402  0521  00A9               	movwf	??_configureController
  6403  0522  0829               	movf	??_configureController,w
  6404  0523  00A0               	movwf	eepromWrite@data
  6405  0524  3067               	movlw	103
  6406  0525  3187  27DA  3183   	fcall	_eepromWrite
  6407  0528                     l2922:	
  6408                           
  6409                           ;Controller.c: 291:     INTCONbits.GIE = 1;
  6410  0528  178B               	bsf	11,7	;volatile
  6411  0529                     l2924:	
  6412                           
  6413                           ;Controller.c: 292:     INTCONbits.PEIE = 1;
  6414  0529  170B               	bsf	11,6	;volatile
  6415  052A                     l330:	
  6416  052A  0008               	return
  6417  052B                     __end_of_configureController:	
  6418                           
  6419                           	psect	text13
  6420  052B                     __ptext13:	
  6421 ;; *************** function _readController *****************
  6422 ;; Defined at:
  6423 ;;		line 12 in file "Controller.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  analogMode      1    wreg     unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  analogMode      1    2[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6440 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6441 ;;Total ram usage:        3 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    3
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_main
  6448 ;;		_configureController
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function _readController
  6454  052B                     _readController:	
  6455                           
  6456                           ;incstack = 0
  6457                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  6458                           ;readController@analogMode stored from wreg
  6459  052B  0020               	movlb	0	; select bank0
  6460  052C  00A2               	movwf	readController@analogMode
  6461  052D                     l2668:	
  6462                           
  6463                           ;Controller.c: 15:     DigitalControllerByte1[DDown] = RA7;
  6464  052D  3000               	movlw	0
  6465  052E  1B8C               	btfsc	12,7	;volatile
  6466  052F  3001               	movlw	1
  6467  0530  0021               	movlb	1	; select bank1
  6468  0531  00C9               	movwf	(_DigitalControllerByte1^(0+128)+1)
  6469                           
  6470                           ;Controller.c: 16:     DigitalControllerByte1[DUp] = RA6;
  6471  0532  3000               	movlw	0
  6472  0533  0020               	movlb	0	; select bank0
  6473  0534  1B0C               	btfsc	12,6	;volatile
  6474  0535  3001               	movlw	1
  6475  0536  0021               	movlb	1	; select bank1
  6476  0537  00CB               	movwf	(_DigitalControllerByte1^(0+128)+3)
  6477                           
  6478                           ;Controller.c: 17:     DigitalControllerByte1[DLeft] = RB0;
  6479  0538  3000               	movlw	0
  6480  0539  0020               	movlb	0	; select bank0
  6481  053A  180D               	btfsc	13,0	;volatile
  6482  053B  3001               	movlw	1
  6483  053C  0021               	movlb	1	; select bank1
  6484  053D  00C8               	movwf	_DigitalControllerByte1^(0+128)
  6485                           
  6486                           ;Controller.c: 18:     DigitalControllerByte1[DRight] = RB1;
  6487  053E  3000               	movlw	0
  6488  053F  0020               	movlb	0	; select bank0
  6489  0540  188D               	btfsc	13,1	;volatile
  6490  0541  3001               	movlw	1
  6491  0542  0021               	movlb	1	; select bank1
  6492  0543  00CA               	movwf	(_DigitalControllerByte1^(0+128)+2)
  6493                           
  6494                           ;Controller.c: 19:     DigitalControllerByte1[R3] = RD0;
  6495  0544  3000               	movlw	0
  6496  0545  0020               	movlb	0	; select bank0
  6497  0546  180F               	btfsc	15,0	;volatile
  6498  0547  3001               	movlw	1
  6499  0548  0021               	movlb	1	; select bank1
  6500  0549  00CD               	movwf	(_DigitalControllerByte1^(0+128)+5)
  6501                           
  6502                           ;Controller.c: 20:     DigitalControllerByte1[L3] = RC2;
  6503  054A  3000               	movlw	0
  6504  054B  0020               	movlb	0	; select bank0
  6505  054C  190E               	btfsc	14,2	;volatile
  6506  054D  3001               	movlw	1
  6507  054E  0021               	movlb	1	; select bank1
  6508  054F  00CE               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6509                           
  6510                           ;Controller.c: 21:     DigitalControllerByte1[Start] = RB6;
  6511  0550  3000               	movlw	0
  6512  0551  0020               	movlb	0	; select bank0
  6513  0552  1B0D               	btfsc	13,6	;volatile
  6514  0553  3001               	movlw	1
  6515  0554  0021               	movlb	1	; select bank1
  6516  0555  00CC               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6517                           
  6518                           ;Controller.c: 22:     DigitalControllerByte1[Select] = RB7;
  6519  0556  3000               	movlw	0
  6520  0557  0020               	movlb	0	; select bank0
  6521  0558  1B8D               	btfsc	13,7	;volatile
  6522  0559  3001               	movlw	1
  6523  055A  0021               	movlb	1	; select bank1
  6524  055B  00CF               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6525                           
  6526                           ;Controller.c: 24:     DigitalControllerByte2[Square] = RA0;
  6527  055C  3000               	movlw	0
  6528  055D  0020               	movlb	0	; select bank0
  6529  055E  180C               	btfsc	12,0	;volatile
  6530  055F  3001               	movlw	1
  6531  0560  0021               	movlb	1	; select bank1
  6532  0561  00C0               	movwf	_DigitalControllerByte2^(0+128)
  6533                           
  6534                           ;Controller.c: 25:     DigitalControllerByte2[Circle] = RA3;
  6535  0562  3000               	movlw	0
  6536  0563  0020               	movlb	0	; select bank0
  6537  0564  198C               	btfsc	12,3	;volatile
  6538  0565  3001               	movlw	1
  6539  0566  0021               	movlb	1	; select bank1
  6540  0567  00C2               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6541                           
  6542                           ;Controller.c: 26:     DigitalControllerByte2[X] = RA2;
  6543  0568  3000               	movlw	0
  6544  0569  0020               	movlb	0	; select bank0
  6545  056A  190C               	btfsc	12,2	;volatile
  6546  056B  3001               	movlw	1
  6547  056C  0021               	movlb	1	; select bank1
  6548  056D  00C1               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6549                           
  6550                           ;Controller.c: 27:     DigitalControllerByte2[Triangle] = RA1;
  6551  056E  3000               	movlw	0
  6552  056F  0020               	movlb	0	; select bank0
  6553  0570  188C               	btfsc	12,1	;volatile
  6554  0571  3001               	movlw	1
  6555  0572  0021               	movlb	1	; select bank1
  6556  0573  00C3               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6557                           
  6558                           ;Controller.c: 28:     DigitalControllerByte2[R1] = RB4;
  6559  0574  3000               	movlw	0
  6560  0575  0020               	movlb	0	; select bank0
  6561  0576  1A0D               	btfsc	13,4	;volatile
  6562  0577  3001               	movlw	1
  6563  0578  0021               	movlb	1	; select bank1
  6564  0579  00C4               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6565                           
  6566                           ;Controller.c: 29:     DigitalControllerByte2[R2] = RB5;
  6567  057A  3000               	movlw	0
  6568  057B  0020               	movlb	0	; select bank0
  6569  057C  1A8D               	btfsc	13,5	;volatile
  6570  057D  3001               	movlw	1
  6571  057E  0021               	movlb	1	; select bank1
  6572  057F  00C6               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6573                           
  6574                           ;Controller.c: 30:     DigitalControllerByte2[L1] = RB2;
  6575  0580  3000               	movlw	0
  6576  0581  0020               	movlb	0	; select bank0
  6577  0582  190D               	btfsc	13,2	;volatile
  6578  0583  3001               	movlw	1
  6579  0584  0021               	movlb	1	; select bank1
  6580  0585  00C5               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6581                           
  6582                           ;Controller.c: 31:     DigitalControllerByte2[L2] = RB3;
  6583  0586  3000               	movlw	0
  6584  0587  0020               	movlb	0	; select bank0
  6585  0588  198D               	btfsc	13,3	;volatile
  6586  0589  3001               	movlw	1
  6587  058A  0021               	movlb	1	; select bank1
  6588  058B  00C7               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6589  058C                     l2670:	
  6590                           
  6591                           ;Controller.c: 36:     if (index > Select) {
  6592  058C  3008               	movlw	8
  6593  058D  0277               	subwf	_index,w
  6594  058E  1C03               	skipc
  6595  058F  2D91               	goto	u1671
  6596  0590  2D92               	goto	u1670
  6597  0591                     u1671:	
  6598  0591  2D93               	goto	l2674
  6599  0592                     u1670:	
  6600  0592                     l2672:	
  6601                           
  6602                           ;Controller.c: 37:         index = 0;
  6603  0592  01F7               	clrf	_index
  6604  0593                     l2674:	
  6605                           
  6606                           ;Controller.c: 41:     if (!DigitalControllerByte1[index]) {
  6607  0593  0877               	movf	_index,w
  6608  0594  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6609  0595  0086               	movwf	6
  6610  0596  0187               	clrf	7
  6611  0597  0801               	movf	1,w
  6612  0598  1D03               	btfss	3,2
  6613  0599  2D9B               	goto	u1681
  6614  059A  2D9C               	goto	u1680
  6615  059B                     u1681:	
  6616  059B  2DA5               	goto	l268
  6617  059C                     u1680:	
  6618  059C                     l2676:	
  6619                           
  6620                           ;Controller.c: 42:         IndexDigitalByte1[index]++;
  6621  059C  3001               	movlw	1
  6622  059D  0020               	movlb	0	; select bank0
  6623  059E  00A0               	movwf	??_readController
  6624  059F  0877               	movf	_index,w
  6625  05A0  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6626  05A1  0086               	movwf	6
  6627  05A2  0187               	clrf	7
  6628  05A3  0820               	movf	??_readController,w
  6629  05A4  0781               	addwf	1,f
  6630  05A5                     l268:	
  6631                           ;Controller.c: 43:     }
  6632                           
  6633                           
  6634                           ;Controller.c: 44:     if (!DigitalControllerByte2[index]) {
  6635  05A5  0877               	movf	_index,w
  6636  05A6  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6637  05A7  0086               	movwf	6
  6638  05A8  0187               	clrf	7
  6639  05A9  0801               	movf	1,w
  6640  05AA  1D03               	btfss	3,2
  6641  05AB  2DAD               	goto	u1691
  6642  05AC  2DAE               	goto	u1690
  6643  05AD                     u1691:	
  6644  05AD  2DB7               	goto	l2680
  6645  05AE                     u1690:	
  6646  05AE                     l2678:	
  6647                           
  6648                           ;Controller.c: 45:         IndexDigitalByte2[index]++;
  6649  05AE  3001               	movlw	1
  6650  05AF  0020               	movlb	0	; select bank0
  6651  05B0  00A0               	movwf	??_readController
  6652  05B1  0877               	movf	_index,w
  6653  05B2  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6654  05B3  0086               	movwf	6
  6655  05B4  0187               	clrf	7
  6656  05B5  0820               	movf	??_readController,w
  6657  05B6  0781               	addwf	1,f
  6658  05B7                     l2680:	
  6659                           
  6660                           ;Controller.c: 49:     if (DigitalControllerByte1[index] ^ PreviousDigitalByte1[index]) 
      +                          {
  6661  05B7  0877               	movf	_index,w
  6662  05B8  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6663  05B9  0086               	movwf	6
  6664  05BA  0187               	clrf	7
  6665  05BB  0877               	movf	_index,w
  6666  05BC  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6667  05BD  0084               	movwf	4
  6668  05BE  0185               	clrf	5
  6669  05BF  0800               	movf	0,w
  6670  05C0  0601               	xorwf	1,w
  6671  05C1  1903               	btfsc	3,2
  6672  05C2  2DC4               	goto	u1701
  6673  05C3  2DC5               	goto	u1700
  6674  05C4                     u1701:	
  6675  05C4  2DE0               	goto	l2690
  6676  05C5                     u1700:	
  6677  05C5                     l2682:	
  6678                           
  6679                           ;Controller.c: 50:         IndexDigitalByte1[index] = 0;
  6680  05C5  0877               	movf	_index,w
  6681  05C6  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6682  05C7  0086               	movwf	6
  6683  05C8  0187               	clrf	7
  6684  05C9  0181               	clrf	1
  6685  05CA                     l2684:	
  6686                           
  6687                           ;Controller.c: 51:         digitalStateFirst |= 1 << index;
  6688  05CA  3001               	movlw	1
  6689  05CB  0020               	movlb	0	; select bank0
  6690  05CC  00A0               	movwf	??_readController
  6691  05CD  0A77               	incf	_index,w
  6692  05CE  2DD0               	goto	u1714
  6693  05CF                     u1715:	
  6694  05CF  35A0               	lslf	??_readController,f
  6695  05D0                     u1714:	
  6696  05D0  0B89               	decfsz	9,f
  6697  05D1  2DCF               	goto	u1715
  6698  05D2  0820               	movf	??_readController,w
  6699  05D3  00A1               	movwf	??_readController+1
  6700  05D4  0821               	movf	??_readController+1,w
  6701  05D5  04D6               	iorwf	_digitalStateFirst,f
  6702  05D6                     l2686:	
  6703                           
  6704                           ;Controller.c: 53:         if (analogMode) {
  6705  05D6  0822               	movf	readController@analogMode,w
  6706  05D7  1903               	btfsc	3,2
  6707  05D8  2DDA               	goto	u1721
  6708  05D9  2DDB               	goto	u1720
  6709  05DA                     u1721:	
  6710  05DA  2DE0               	goto	l2690
  6711  05DB                     u1720:	
  6712  05DB                     l2688:	
  6713                           
  6714                           ;Controller.c: 54:             analogStateFirst[index] = 0x00;
  6715  05DB  0877               	movf	_index,w
  6716  05DC  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6717  05DD  0086               	movwf	6
  6718  05DE  0187               	clrf	7
  6719  05DF  0181               	clrf	1
  6720  05E0                     l2690:	
  6721                           
  6722                           ;Controller.c: 58:     if (DigitalControllerByte2[index] ^ PreviousDigitalByte2[index]) 
      +                          {
  6723  05E0  0877               	movf	_index,w
  6724  05E1  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6725  05E2  0086               	movwf	6
  6726  05E3  0187               	clrf	7
  6727  05E4  0877               	movf	_index,w
  6728  05E5  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6729  05E6  0084               	movwf	4
  6730  05E7  0185               	clrf	5
  6731  05E8  0800               	movf	0,w
  6732  05E9  0601               	xorwf	1,w
  6733  05EA  1903               	btfsc	3,2
  6734  05EB  2DED               	goto	u1731
  6735  05EC  2DEE               	goto	u1730
  6736  05ED                     u1731:	
  6737  05ED  2E09               	goto	l272
  6738  05EE                     u1730:	
  6739  05EE                     l2692:	
  6740                           
  6741                           ;Controller.c: 59:         IndexDigitalByte2[index] = 0;
  6742  05EE  0877               	movf	_index,w
  6743  05EF  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6744  05F0  0086               	movwf	6
  6745  05F1  0187               	clrf	7
  6746  05F2  0181               	clrf	1
  6747  05F3                     l2694:	
  6748                           
  6749                           ;Controller.c: 60:         digitalStateSecond |= 1 << index;
  6750  05F3  3001               	movlw	1
  6751  05F4  0020               	movlb	0	; select bank0
  6752  05F5  00A0               	movwf	??_readController
  6753  05F6  0A77               	incf	_index,w
  6754  05F7  2DF9               	goto	u1744
  6755  05F8                     u1745:	
  6756  05F8  35A0               	lslf	??_readController,f
  6757  05F9                     u1744:	
  6758  05F9  0B89               	decfsz	9,f
  6759  05FA  2DF8               	goto	u1745
  6760  05FB  0820               	movf	??_readController,w
  6761  05FC  00A1               	movwf	??_readController+1
  6762  05FD  0821               	movf	??_readController+1,w
  6763  05FE  04D5               	iorwf	_digitalStateSecond,f
  6764  05FF                     l2696:	
  6765                           
  6766                           ;Controller.c: 62:         if (analogMode) {
  6767  05FF  0822               	movf	readController@analogMode,w
  6768  0600  1903               	btfsc	3,2
  6769  0601  2E03               	goto	u1751
  6770  0602  2E04               	goto	u1750
  6771  0603                     u1751:	
  6772  0603  2E09               	goto	l272
  6773  0604                     u1750:	
  6774  0604                     l2698:	
  6775                           
  6776                           ;Controller.c: 63:             analogStateSecond[index] = 0x00;
  6777  0604  0877               	movf	_index,w
  6778  0605  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6779  0606  0086               	movwf	6
  6780  0607  0187               	clrf	7
  6781  0608  0181               	clrf	1
  6782  0609                     l272:	
  6783                           ;Controller.c: 66:     }
  6784                           
  6785  0609  0877               	movf	_index,w
  6786  060A  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6787  060B  0086               	movwf	6
  6788  060C  0187               	clrf	7
  6789  060D  3003               	movlw	3
  6790  060E  0201               	subwf	1,w
  6791  060F  1C03               	skipc
  6792  0610  2E12               	goto	u1761
  6793  0611  2E13               	goto	u1760
  6794  0612                     u1761:	
  6795  0612  2E2D               	goto	l274
  6796  0613                     u1760:	
  6797  0613                     l2700:	
  6798                           
  6799                           ;Controller.c: 70:         digitalStateFirst &= ~(1 << index);
  6800  0613  3001               	movlw	1
  6801  0614  0020               	movlb	0	; select bank0
  6802  0615  00A0               	movwf	??_readController
  6803  0616  0A77               	incf	_index,w
  6804  0617  2E19               	goto	u1774
  6805  0618                     u1775:	
  6806  0618  35A0               	lslf	??_readController,f
  6807  0619                     u1774:	
  6808  0619  0B89               	decfsz	9,f
  6809  061A  2E18               	goto	u1775
  6810  061B  0820               	movf	??_readController,w
  6811  061C  3AFF               	xorlw	255
  6812  061D  00A1               	movwf	??_readController+1
  6813  061E  0821               	movf	??_readController+1,w
  6814  061F  05D6               	andwf	_digitalStateFirst,f
  6815                           
  6816                           ;Controller.c: 72:         if (analogMode) {
  6817  0620  0822               	movf	readController@analogMode,w
  6818  0621  1903               	btfsc	3,2
  6819  0622  2E24               	goto	u1781
  6820  0623  2E25               	goto	u1780
  6821  0624                     u1781:	
  6822  0624  2E2D               	goto	l274
  6823  0625                     u1780:	
  6824  0625                     l2702:	
  6825                           
  6826                           ;Controller.c: 73:             analogStateFirst[index] = 0xFF;
  6827  0625  30FF               	movlw	255
  6828  0626  00A0               	movwf	??_readController
  6829  0627  0877               	movf	_index,w
  6830  0628  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6831  0629  0086               	movwf	6
  6832  062A  0187               	clrf	7
  6833  062B  0820               	movf	??_readController,w
  6834  062C  0081               	movwf	1
  6835  062D                     l274:	
  6836                           ;Controller.c: 76:     }
  6837                           
  6838  062D  0877               	movf	_index,w
  6839  062E  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6840  062F  0086               	movwf	6
  6841  0630  0187               	clrf	7
  6842  0631  3003               	movlw	3
  6843  0632  0201               	subwf	1,w
  6844  0633  1C03               	skipc
  6845  0634  2E36               	goto	u1791
  6846  0635  2E37               	goto	u1790
  6847  0636                     u1791:	
  6848  0636  2E51               	goto	l276
  6849  0637                     u1790:	
  6850  0637                     l2704:	
  6851                           
  6852                           ;Controller.c: 78:         digitalStateSecond &= ~(1 << index);
  6853  0637  3001               	movlw	1
  6854  0638  0020               	movlb	0	; select bank0
  6855  0639  00A0               	movwf	??_readController
  6856  063A  0A77               	incf	_index,w
  6857  063B  2E3D               	goto	u1804
  6858  063C                     u1805:	
  6859  063C  35A0               	lslf	??_readController,f
  6860  063D                     u1804:	
  6861  063D  0B89               	decfsz	9,f
  6862  063E  2E3C               	goto	u1805
  6863  063F  0820               	movf	??_readController,w
  6864  0640  3AFF               	xorlw	255
  6865  0641  00A1               	movwf	??_readController+1
  6866  0642  0821               	movf	??_readController+1,w
  6867  0643  05D5               	andwf	_digitalStateSecond,f
  6868                           
  6869                           ;Controller.c: 80:         if (analogMode) {
  6870  0644  0822               	movf	readController@analogMode,w
  6871  0645  1903               	btfsc	3,2
  6872  0646  2E48               	goto	u1811
  6873  0647  2E49               	goto	u1810
  6874  0648                     u1811:	
  6875  0648  2E51               	goto	l276
  6876  0649                     u1810:	
  6877  0649                     l2706:	
  6878                           
  6879                           ;Controller.c: 81:             analogStateSecond[index] = 0xFF;
  6880  0649  30FF               	movlw	255
  6881  064A  00A0               	movwf	??_readController
  6882  064B  0877               	movf	_index,w
  6883  064C  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6884  064D  0086               	movwf	6
  6885  064E  0187               	clrf	7
  6886  064F  0820               	movf	??_readController,w
  6887  0650  0081               	movwf	1
  6888  0651                     l276:	
  6889                           ;Controller.c: 84:     }
  6890                           
  6891                           
  6892                           ;Controller.c: 87:     PreviousDigitalByte1[index] = DigitalControllerByte1[index];
  6893  0651  0877               	movf	_index,w
  6894  0652  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6895  0653  0086               	movwf	6
  6896  0654  0187               	clrf	7
  6897  0655  0801               	movf	1,w
  6898  0656  0020               	movlb	0	; select bank0
  6899  0657  00A0               	movwf	??_readController
  6900  0658  0877               	movf	_index,w
  6901  0659  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6902  065A  0086               	movwf	6
  6903  065B  0187               	clrf	7
  6904  065C  0820               	movf	??_readController,w
  6905  065D  0081               	movwf	1
  6906                           
  6907                           ;Controller.c: 88:     PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6908  065E  0877               	movf	_index,w
  6909  065F  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6910  0660  0086               	movwf	6
  6911  0661  0187               	clrf	7
  6912  0662  0801               	movf	1,w
  6913  0663  00A0               	movwf	??_readController
  6914  0664  0877               	movf	_index,w
  6915  0665  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6916  0666  0086               	movwf	6
  6917  0667  0187               	clrf	7
  6918  0668  0820               	movf	??_readController,w
  6919  0669  0081               	movwf	1
  6920  066A                     l2708:	
  6921                           
  6922                           ;Controller.c: 90:     index++;
  6923  066A  3001               	movlw	1
  6924  066B  00A0               	movwf	??_readController
  6925  066C  0820               	movf	??_readController,w
  6926  066D  07F7               	addwf	_index,f
  6927  066E                     l278:	
  6928  066E  0008               	return
  6929  066F                     __end_of_readController:	
  6930                           
  6931                           	psect	text14
  6932  0F08                     __ptext14:	
  6933 ;; *************** function _readADC *****************
  6934 ;; Defined at:
  6935 ;;		line 156 in file "Controller.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  channel         2    0[BANK0 ] int 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2    0[BANK0 ] unsigned int 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6951 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6952 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6953 ;;Total ram usage:        9 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    3
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_readControllerAnalog
  6960 ;;		_configureController
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _readADC
  6966  0F08                     _readADC:	
  6967  0F08                     l2722:	
  6968                           ;incstack = 0
  6969                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6970                           
  6971                           
  6972                           ;Controller.c: 157:     ADPCH = channel;
  6973  0F08  0020               	movlb	0	; select bank0
  6974  0F09  0820               	movf	readADC@channel,w
  6975  0F0A  0021               	movlb	1	; select bank1
  6976  0F0B  009E               	movwf	30	;volatile
  6977  0F0C                     l2724:	
  6978                           
  6979                           ;Controller.c: 158:     ADPRE = 0x00;
  6980  0F0C  019C               	clrf	28	;volatile
  6981  0F0D                     l2726:	
  6982                           
  6983                           ;Controller.c: 159:     ADACQ = 0x3F;
  6984  0F0D  303F               	movlw	63
  6985  0F0E  009D               	movwf	29	;volatile
  6986  0F0F                     l2728:	
  6987                           
  6988                           ;Controller.c: 161:     ADCON0bits.ADGO = 1;
  6989  0F0F  1413               	bsf	19,0	;volatile
  6990  0F10                     l305:	
  6991                           ;Controller.c: 162:     while (ADCON0bits.ADGO);
  6992                           
  6993  0F10  1813               	btfsc	19,0	;volatile
  6994  0F11  2F13               	goto	u1821
  6995  0F12  2F14               	goto	u1820
  6996  0F13                     u1821:	
  6997  0F13  2F10               	goto	l305
  6998  0F14                     u1820:	
  6999  0F14                     l2730:	
  7000                           
  7001                           ;Controller.c: 164:     return ((ADRESH << 6) | (ADRESL >> 2));
  7002  0F14  080C               	movf	12,w	;volatile
  7003  0F15  0020               	movlb	0	; select bank0
  7004  0F16  00A2               	movwf	??_readADC
  7005  0F17  3002               	movlw	2
  7006  0F18                     u1835:	
  7007  0F18  36A2               	lsrf	??_readADC,f
  7008  0F19  0B89               	decfsz	9,f
  7009  0F1A  2F18               	goto	u1835
  7010  0F1B  0822               	movf	??_readADC,w
  7011  0F1C  00A3               	movwf	??_readADC+1
  7012  0F1D  01A4               	clrf	??_readADC+2
  7013  0F1E  0021               	movlb	1	; select bank1
  7014  0F1F  080D               	movf	13,w	;volatile
  7015  0F20  0020               	movlb	0	; select bank0
  7016  0F21  00A5               	movwf	??_readADC+3
  7017  0F22  01A6               	clrf	??_readADC+4
  7018  0F23  3006               	movlw	6
  7019  0F24                     u1845:	
  7020  0F24  35A5               	lslf	??_readADC+3,f
  7021  0F25  0DA6               	rlf	??_readADC+4,f
  7022  0F26  0B89               	decfsz	9,f
  7023  0F27  2F24               	goto	u1845
  7024  0F28  0823               	movf	??_readADC+1,w
  7025  0F29  0425               	iorwf	??_readADC+3,w
  7026  0F2A  00A7               	movwf	??_readADC+5
  7027  0F2B  0824               	movf	??_readADC+2,w
  7028  0F2C  0426               	iorwf	??_readADC+4,w
  7029  0F2D  00A8               	movwf	??_readADC+6
  7030  0F2E  0827               	movf	??_readADC+5,w
  7031  0F2F  00A0               	movwf	?_readADC
  7032  0F30  0828               	movf	??_readADC+6,w
  7033  0F31  00A1               	movwf	?_readADC+1
  7034  0F32                     l308:	
  7035  0F32  0008               	return
  7036  0F33                     __end_of_readADC:	
  7037                           
  7038                           	psect	text15
  7039  07DA                     __ptext15:	
  7040 ;; *************** function _eepromWrite *****************
  7041 ;; Defined at:
  7042 ;;		line 9 in file "Nvm.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  address         1    wreg     unsigned char 
  7045 ;;  data            1    0[BANK0 ] unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  address         1    1[BANK0 ] unsigned char 
  7048 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      void 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2, status,0, pclath, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7058 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7061 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7062 ;;Total ram usage:        3 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    4
  7065 ;; This function calls:
  7066 ;;		_nvmUnlock
  7067 ;; This function is called by:
  7068 ;;		_configureController
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _eepromWrite
  7074  07DA                     _eepromWrite:	
  7075                           
  7076                           ;incstack = 0
  7077                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7078                           ;eepromWrite@address stored from wreg
  7079  07DA  0020               	movlb	0	; select bank0
  7080  07DB  00A1               	movwf	eepromWrite@address
  7081  07DC                     l2740:	
  7082                           
  7083                           ;Nvm.c: 12:     unsigned char interruptStatus = INTCONbits.GIE;
  7084  07DC  3000               	movlw	0
  7085  07DD  1B8B               	btfsc	11,7	;volatile
  7086  07DE  3001               	movlw	1
  7087  07DF  00A2               	movwf	eepromWrite@interruptStatus
  7088  07E0                     l2742:	
  7089                           
  7090                           ;Nvm.c: 14:     INTCONbits.GIE = 0;
  7091  07E0  138B               	bcf	11,7	;volatile
  7092  07E1                     l2744:	
  7093                           
  7094                           ;Nvm.c: 16:     NVMCON1bits.NVMREGS = 1;
  7095  07E1  0030               	movlb	16	; select bank16
  7096  07E2  171E               	bsf	30,6	;volsfr
  7097  07E3                     l2746:	
  7098                           
  7099                           ;Nvm.c: 17:     NVMCON1bits.WREN = 1;
  7100  07E3  151E               	bsf	30,2	;volsfr
  7101  07E4                     l2748:	
  7102                           
  7103                           ;Nvm.c: 19:     NVMADRH = 0xF0;
  7104  07E4  30F0               	movlw	240
  7105  07E5  009B               	movwf	27	;volatile
  7106  07E6                     l2750:	
  7107                           
  7108                           ;Nvm.c: 20:     NVMADRL = address;
  7109  07E6  0020               	movlb	0	; select bank0
  7110  07E7  0821               	movf	eepromWrite@address,w
  7111  07E8  0030               	movlb	16	; select bank16
  7112  07E9  009A               	movwf	26	;volatile
  7113  07EA                     l2752:	
  7114                           
  7115                           ;Nvm.c: 22:     NVMDATL = data;
  7116  07EA  0020               	movlb	0	; select bank0
  7117  07EB  0820               	movf	eepromWrite@data,w
  7118  07EC  0030               	movlb	16	; select bank16
  7119  07ED  009C               	movwf	28	;volatile
  7120  07EE                     l2754:	
  7121                           
  7122                           ;Nvm.c: 24:     nvmUnlock();
  7123  07EE  318E  2644  3187   	fcall	_nvmUnlock
  7124  07F1                     l442:	
  7125                           ;Nvm.c: 26:     while (NVMCON1bits.WR);
  7126                           
  7127  07F1  0030               	movlb	16	; select bank16
  7128  07F2  189E               	btfsc	30,1	;volsfr
  7129  07F3  2FF5               	goto	u1901
  7130  07F4  2FF6               	goto	u1900
  7131  07F5                     u1901:	
  7132  07F5  2FF1               	goto	l442
  7133  07F6                     u1900:	
  7134  07F6                     l444:	
  7135                           
  7136                           ;Nvm.c: 28:     NVMCON1bits.WREN = 0;
  7137  07F6  111E               	bcf	30,2	;volsfr
  7138  07F7                     l2756:	
  7139                           
  7140                           ;Nvm.c: 30:     if (interruptStatus) INTCONbits.GIE = 1;
  7141  07F7  0020               	movlb	0	; select bank0
  7142  07F8  0822               	movf	eepromWrite@interruptStatus,w
  7143  07F9  1903               	btfsc	3,2
  7144  07FA  2FFC               	goto	u1911
  7145  07FB  2FFD               	goto	u1910
  7146  07FC                     u1911:	
  7147  07FC  2FFE               	goto	l446
  7148  07FD                     u1910:	
  7149  07FD                     l2758:	
  7150  07FD  178B               	bsf	11,7	;volatile
  7151  07FE                     l446:	
  7152  07FE  0008               	return
  7153  07FF                     __end_of_eepromWrite:	
  7154                           
  7155                           	psect	text16
  7156  0E44                     __ptext16:	
  7157 ;; *************** function _nvmUnlock *****************
  7158 ;; Defined at:
  7159 ;;		line 48 in file "Nvm.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7177 ;;Total ram usage:        0 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    3
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_eepromWrite
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           
  7188                           ;psect for function _nvmUnlock
  7189  0E44                     _nvmUnlock:	
  7190  0E44                     l2650:	
  7191                           ;incstack = 0
  7192                           ; Regs used in _nvmUnlock: [wreg]
  7193                           
  7194                           
  7195                           ;Nvm.c: 50:     NVMCON2 = 0x55;
  7196  0E44  3055               	movlw	85
  7197  0E45  0030               	movlb	16	; select bank16
  7198  0E46  009F               	movwf	31	;volsfr
  7199                           
  7200                           ;Nvm.c: 51:     NVMCON2 = 0xAA;
  7201  0E47  30AA               	movlw	170
  7202  0E48  009F               	movwf	31	;volsfr
  7203  0E49                     l2652:	
  7204                           
  7205                           ;Nvm.c: 52:     NVMCON1bits.WR = 1;
  7206  0E49  149E               	bsf	30,1	;volsfr
  7207  0E4A                     l452:	
  7208  0E4A  0008               	return
  7209  0E4B                     __end_of_nvmUnlock:	
  7210                           
  7211                           	psect	text17
  7212  0E63                     __ptext17:	
  7213 ;; *************** function _adcInit *****************
  7214 ;; Defined at:
  7215 ;;		line 21 in file "PicConfig.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7233 ;;Total ram usage:        0 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    3
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _adcInit
  7245  0E63                     _adcInit:	
  7246  0E63                     l2808:	
  7247                           ;incstack = 0
  7248                           ; Regs used in _adcInit: [wreg+status,2]
  7249                           
  7250                           
  7251                           ;PicConfig.c: 22:     ADCON0 = 0x04;
  7252  0E63  3004               	movlw	4
  7253  0E64  0021               	movlb	1	; select bank1
  7254  0E65  0093               	movwf	19	;volatile
  7255  0E66                     l2810:	
  7256                           
  7257                           ;PicConfig.c: 23:     ADCON1 = 0;
  7258  0E66  0194               	clrf	20	;volatile
  7259  0E67                     l2812:	
  7260                           
  7261                           ;PicConfig.c: 24:     ADCON2 = 0;
  7262  0E67  0195               	clrf	21	;volatile
  7263  0E68                     l2814:	
  7264                           
  7265                           ;PicConfig.c: 25:     ADREF = 0;
  7266  0E68  019A               	clrf	26	;volatile
  7267  0E69                     l2816:	
  7268                           
  7269                           ;PicConfig.c: 26:     ADCLK = 0x3F;
  7270  0E69  303F               	movlw	63
  7271  0E6A  0098               	movwf	24	;volatile
  7272  0E6B                     l2818:	
  7273                           
  7274                           ;PicConfig.c: 27:     ADCON0bits.ADON = 1;
  7275  0E6B  1793               	bsf	19,7	;volatile
  7276  0E6C                     l397:	
  7277  0E6C  0008               	return
  7278  0E6D                     __end_of_adcInit:	
  7279                           
  7280                           	psect	text18
  7281  0E5A                     __ptext18:	
  7282 ;; *************** function _PwmInit *****************
  7283 ;; Defined at:
  7284 ;;		line 45 in file "main.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  idle            2    0[BANK0 ] int 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;		None
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7302 ;;Total ram usage:        2 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    3
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_main
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           
  7313                           ;psect for function _PwmInit
  7314  0E5A                     _PwmInit:	
  7315  0E5A                     l2772:	
  7316                           ;incstack = 0
  7317                           ; Regs used in _PwmInit: [wreg]
  7318                           
  7319                           
  7320                           ;main.c: 45: void PwmInit(int idle);main.c: 46: {;main.c: 48:     TRISDbits.TRISD5 = 1;
  7321  0E5A  0020               	movlb	0	; select bank0
  7322  0E5B  1694               	bsf	20,5	;volatile
  7323  0E5C                     l2774:	
  7324                           
  7325                           ;main.c: 50:     PWMOn = idle;
  7326  0E5C  0821               	movf	PwmInit@idle+1,w
  7327  0E5D  00EC               	movwf	_PWMOn+1
  7328  0E5E  0820               	movf	PwmInit@idle,w
  7329  0E5F  00EB               	movwf	_PWMOn
  7330                           
  7331                           ;main.c: 51:     TMR0 = PWMPeriod;
  7332  0E60  086D               	movf	_PWMPeriod,w
  7333  0E61  009C               	movwf	28	;volatile
  7334  0E62                     l95:	
  7335  0E62  0008               	return
  7336  0E63                     __end_of_PwmInit:	
  7337                           
  7338                           	psect	intentry
  7339  0004                     __pintentry:	
  7340 ;; *************** function _PS2Command *****************
  7341 ;; Defined at:
  7342 ;;		line 100 in file "main.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  cmd             1    4[COMMON] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7359 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7360 ;;Total ram usage:        3 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    2
  7363 ;; This function calls:
  7364 ;;		_pollController
  7365 ;;		_spiRead
  7366 ;;		_spiWrite
  7367 ;; This function is called by:
  7368 ;;		Interrupt level 1
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372  0004                     _PS2Command:	
  7373                           
  7374                           ;incstack = 0
  7375  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7376                           
  7377                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7378  0005  3180               	pagesel	$
  7379  0006                     i1l2232:	
  7380                           
  7381                           ;main.c: 102:     if (SSP1IF) {
  7382  0006  002E               	movlb	14	; select bank14
  7383  0007  1C0F               	btfss	15,0	;volatile
  7384  0008  280A               	goto	u145_21
  7385  0009  280B               	goto	u145_20
  7386  000A                     u145_21:	
  7387  000A  298A               	goto	i1l107
  7388  000B                     u145_20:	
  7389  000B                     i1l2234:	
  7390                           
  7391                           ;main.c: 104:         char cmd = spiRead();
  7392  000B  318E  263E  3180   	fcall	_spiRead
  7393  000E  00F2               	movwf	??_PS2Command
  7394  000F  0872               	movf	??_PS2Command,w
  7395  0010  00F4               	movwf	PS2Command@cmd
  7396                           
  7397                           ;main.c: 106:         switch (cmdCounter) {
  7398  0011  2944               	goto	i1l2380
  7399  0012                     i1l2236:	
  7400                           
  7401                           ;main.c: 114:                         if(cmd == 0x80)
  7402  0012  3080               	movlw	128
  7403  0013  0674               	xorwf	PS2Command@cmd,w
  7404  0014  1D03               	btfss	3,2
  7405  0015  2817               	goto	u146_21
  7406  0016  2818               	goto	u146_20
  7407  0017                     u146_21:	
  7408  0017  281B               	goto	i1l112
  7409  0018                     u146_20:	
  7410  0018                     i1l2238:	
  7411                           
  7412                           ;main.c: 115:                             RD4 = 1;
  7413  0018  0020               	movlb	0	; select bank0
  7414  0019  160F               	bsf	15,4	;volatile
  7415  001A  2954               	goto	i1l2382
  7416  001B                     i1l112:	
  7417                           ;main.c: 116:                         else
  7418                           
  7419                           
  7420                           ;main.c: 117:                             RD4 = 0;
  7421  001B  0020               	movlb	0	; select bank0
  7422  001C  120F               	bcf	15,4	;volatile
  7423  001D  2954               	goto	i1l2382
  7424  001E                     i1l2240:	
  7425                           
  7426                           ;main.c: 122:                         if (cmd == 0x80)
  7427  001E  3080               	movlw	128
  7428  001F  0674               	xorwf	PS2Command@cmd,w
  7429  0020  1D03               	btfss	3,2
  7430  0021  2823               	goto	u147_21
  7431  0022  2824               	goto	u147_20
  7432  0023                     u147_21:	
  7433  0023  2828               	goto	i1l2244
  7434  0024                     u147_20:	
  7435  0024                     i1l2242:	
  7436                           
  7437                           ;main.c: 123:                             escapeMode = 1;
  7438  0024  0020               	movlb	0	; select bank0
  7439  0025  01EF               	clrf	_escapeMode
  7440  0026  0AEF               	incf	_escapeMode,f
  7441  0027  2954               	goto	i1l2382
  7442  0028                     i1l2244:	
  7443                           
  7444                           ;main.c: 125:                             escapeMode = 0;
  7445  0028  0020               	movlb	0	; select bank0
  7446  0029  01EF               	clrf	_escapeMode
  7447  002A  2954               	goto	i1l2382
  7448  002B                     i1l2246:	
  7449                           
  7450                           ;main.c: 130:                         if (cmd == 0x80)
  7451  002B  3080               	movlw	128
  7452  002C  0674               	xorwf	PS2Command@cmd,w
  7453  002D  1D03               	btfss	3,2
  7454  002E  2830               	goto	u148_21
  7455  002F  2831               	goto	u148_20
  7456  0030                     u148_21:	
  7457  0030  2834               	goto	i1l2250
  7458  0031                     u148_20:	
  7459  0031                     i1l2248:	
  7460                           
  7461                           ;main.c: 131:                             analogMode = 1;
  7462  0031  01F8               	clrf	_analogMode
  7463  0032  0AF8               	incf	_analogMode,f
  7464  0033  2954               	goto	i1l2382
  7465  0034                     i1l2250:	
  7466                           
  7467                           ;main.c: 133:                             analogMode = 0;
  7468  0034  01F8               	clrf	_analogMode
  7469  0035  2954               	goto	i1l2382
  7470  0036                     i1l2252:	
  7471                           
  7472                           ;main.c: 138:                         if (cmd == 0x80) {
  7473  0036  3080               	movlw	128
  7474  0037  0674               	xorwf	PS2Command@cmd,w
  7475  0038  1D03               	btfss	3,2
  7476  0039  283B               	goto	u149_21
  7477  003A  283C               	goto	u149_20
  7478  003B                     u149_21:	
  7479  003B  2847               	goto	i1l2262
  7480  003C                     u149_20:	
  7481  003C                     i1l2254:	
  7482                           
  7483                           ;main.c: 139:                             response[2] = 0x00;
  7484  003C  0020               	movlb	0	; select bank0
  7485  003D  01D9               	clrf	_response+2
  7486                           
  7487                           ;main.c: 140:                             response[3] = 0x00;
  7488  003E  01DA               	clrf	_response+3
  7489                           
  7490                           ;main.c: 141:                             response[4] = 0x00;
  7491  003F  01DB               	clrf	_response+4
  7492  0040                     i1l2256:	
  7493                           
  7494                           ;main.c: 142:                             response[5] = 0x60;
  7495  0040  3060               	movlw	96
  7496  0041  00F2               	movwf	??_PS2Command
  7497  0042  0872               	movf	??_PS2Command,w
  7498  0043  00DC               	movwf	_response+5
  7499  0044                     i1l2258:	
  7500                           
  7501                           ;main.c: 143:                             response[6] = 0x00;
  7502  0044  01DD               	clrf	_response+6
  7503  0045                     i1l2260:	
  7504                           
  7505                           ;main.c: 144:                             response[7] = 0x00;
  7506  0045  01DE               	clrf	_response+7
  7507                           
  7508                           ;main.c: 145:                         } else {
  7509  0046  2954               	goto	i1l2382
  7510  0047                     i1l2262:	
  7511                           
  7512                           ;main.c: 146:                             response[2] = 0x00;
  7513  0047  0020               	movlb	0	; select bank0
  7514  0048  01D9               	clrf	_response+2
  7515                           
  7516                           ;main.c: 147:                             response[3] = 0x00;
  7517  0049  01DA               	clrf	_response+3
  7518                           
  7519                           ;main.c: 148:                             response[4] = 0x00;
  7520  004A  01DB               	clrf	_response+4
  7521  004B                     i1l2264:	
  7522                           
  7523                           ;main.c: 149:                             response[5] = 0x20;
  7524  004B  3020               	movlw	32
  7525  004C  00F2               	movwf	??_PS2Command
  7526  004D  0872               	movf	??_PS2Command,w
  7527  004E  00DC               	movwf	_response+5
  7528  004F  2844               	goto	i1l2258
  7529  0050                     i1l2272:	
  7530  0050  0875               	movf	_previousCmd,w
  7531  0051  00F2               	movwf	??_PS2Command
  7532  0052  01F3               	clrf	??_PS2Command+1
  7533                           
  7534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7535                           ; Switch size 1, requested type "simple"
  7536                           ; Number of cases is 1, Range of values is 0 to 0
  7537                           ; switch strategies available:
  7538                           ; Name         Instructions Cycles
  7539                           ; simple_byte            4     3 (average)
  7540                           ; direct_byte            8     6 (fixed)
  7541                           ; jumptable            260     6 (fixed)
  7542                           ;	Chosen strategy is simple_byte
  7543  0053  0873               	movf	??_PS2Command+1,w
  7544  0054  3A00               	xorlw	0	; case 0
  7545  0055  1903               	skipnz
  7546  0056  2858               	goto	i1l3130
  7547  0057  2954               	goto	i1l2382
  7548  0058                     i1l3130:	
  7549                           
  7550                           ; Switch size 1, requested type "simple"
  7551                           ; Number of cases is 5, Range of values is 34 to 242
  7552                           ; switch strategies available:
  7553                           ; Name         Instructions Cycles
  7554                           ; simple_byte           16     9 (average)
  7555                           ; jumptable            263     9 (fixed)
  7556                           ;	Chosen strategy is simple_byte
  7557  0058  0872               	movf	??_PS2Command,w
  7558  0059  3A22               	xorlw	34	; case 34
  7559  005A  1903               	skipnz
  7560  005B  282B               	goto	i1l2246
  7561  005C  3A10               	xorlw	16	; case 50
  7562  005D  1903               	skipnz
  7563  005E  2836               	goto	i1l2252
  7564  005F  3A70               	xorlw	112	; case 66
  7565  0060  1903               	skipnz
  7566  0061  2812               	goto	i1l2236
  7567  0062  3A80               	xorlw	128	; case 194
  7568  0063  1903               	skipnz
  7569  0064  281E               	goto	i1l2240
  7570  0065  3A30               	xorlw	48	; case 242
  7571  0066  1903               	skipnz
  7572  0067  2954               	goto	i1l2382
  7573  0068  2954               	goto	i1l2382
  7574  0069                     i1l2274:	
  7575  0069  2954               	goto	i1l2382
  7576  006A                     i1l2280:	
  7577  006A  0875               	movf	_previousCmd,w
  7578  006B  00F2               	movwf	??_PS2Command
  7579  006C  01F3               	clrf	??_PS2Command+1
  7580                           
  7581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7582                           ; Switch size 1, requested type "simple"
  7583                           ; Number of cases is 1, Range of values is 0 to 0
  7584                           ; switch strategies available:
  7585                           ; Name         Instructions Cycles
  7586                           ; simple_byte            4     3 (average)
  7587                           ; direct_byte            8     6 (fixed)
  7588                           ; jumptable            260     6 (fixed)
  7589                           ;	Chosen strategy is simple_byte
  7590  006D  0873               	movf	??_PS2Command+1,w
  7591  006E  3A00               	xorlw	0	; case 0
  7592  006F  1903               	skipnz
  7593  0070  2872               	goto	i1l3132
  7594  0071  2954               	goto	i1l2382
  7595  0072                     i1l3132:	
  7596                           
  7597                           ; Switch size 1, requested type "simple"
  7598                           ; Number of cases is 2, Range of values is 66 to 242
  7599                           ; switch strategies available:
  7600                           ; Name         Instructions Cycles
  7601                           ; simple_byte            7     4 (average)
  7602                           ; jumptable            263     9 (fixed)
  7603                           ;	Chosen strategy is simple_byte
  7604  0072  0872               	movf	??_PS2Command,w
  7605  0073  3A42               	xorlw	66	; case 66
  7606  0074  1903               	skipnz
  7607  0075  2869               	goto	i1l2274
  7608  0076  3AB0               	xorlw	176	; case 242
  7609  0077  1903               	skipnz
  7610  0078  2954               	goto	i1l2382
  7611  0079  2954               	goto	i1l2382
  7612  007A                     i1l2282:	
  7613                           
  7614                           ;main.c: 198:                         if (analogMode) {
  7615  007A  0878               	movf	_analogMode,w
  7616  007B  1903               	btfsc	3,2
  7617  007C  287E               	goto	u150_21
  7618  007D  287F               	goto	u150_20
  7619  007E                     u150_21:	
  7620  007E  2893               	goto	i1l2290
  7621  007F                     u150_20:	
  7622  007F                     i1l2284:	
  7623                           
  7624                           ;main.c: 199:                             response[2] = 0xFF;
  7625  007F  30FF               	movlw	255
  7626  0080  00F2               	movwf	??_PS2Command
  7627  0081  0872               	movf	??_PS2Command,w
  7628  0082  0020               	movlb	0	; select bank0
  7629  0083  00D9               	movwf	_response+2
  7630                           
  7631                           ;main.c: 200:                             response[3] = 0xFF;
  7632  0084  30FF               	movlw	255
  7633  0085  00F2               	movwf	??_PS2Command
  7634  0086  0872               	movf	??_PS2Command,w
  7635  0087  00DA               	movwf	_response+3
  7636                           
  7637                           ;main.c: 201:                             response[4] = 0xC0;
  7638  0088  30C0               	movlw	192
  7639  0089  00F2               	movwf	??_PS2Command
  7640  008A  0872               	movf	??_PS2Command,w
  7641  008B  00DB               	movwf	_response+4
  7642  008C                     i1l2286:	
  7643                           
  7644                           ;main.c: 202:                             response[5] = 0x00;
  7645  008C  01DC               	clrf	_response+5
  7646  008D                     i1l2288:	
  7647                           
  7648                           ;main.c: 203:                             response[6] = 0x00;
  7649  008D  01DD               	clrf	_response+6
  7650                           
  7651                           ;main.c: 204:                             response[7] = 0x5A;
  7652  008E  305A               	movlw	90
  7653  008F  00F2               	movwf	??_PS2Command
  7654  0090  0872               	movf	??_PS2Command,w
  7655  0091  00DE               	movwf	_response+7
  7656                           
  7657                           ;main.c: 205:                         } else {
  7658  0092  2954               	goto	i1l2382
  7659  0093                     i1l2290:	
  7660                           
  7661                           ;main.c: 206:                             response[2] = 0x00;
  7662  0093  0020               	movlb	0	; select bank0
  7663  0094  01D9               	clrf	_response+2
  7664                           
  7665                           ;main.c: 207:                             response[3] = 0x00;
  7666  0095  01DA               	clrf	_response+3
  7667                           
  7668                           ;main.c: 208:                             response[4] = 0x00;
  7669  0096  01DB               	clrf	_response+4
  7670                           
  7671                           ;main.c: 209:                             response[5] = 0x00;
  7672  0097  01DC               	clrf	_response+5
  7673                           
  7674                           ;main.c: 210:                             response[6] = 0x00;
  7675  0098  01DD               	clrf	_response+6
  7676  0099                     i1l2292:	
  7677                           
  7678                           ;main.c: 211:                             response[7] = 0x5A;
  7679  0099  305A               	movlw	90
  7680  009A  00F2               	movwf	??_PS2Command
  7681  009B  0872               	movf	??_PS2Command,w
  7682  009C  00DE               	movwf	_response+7
  7683  009D  2954               	goto	i1l2382
  7684  009E                     i1l2294:	
  7685                           
  7686                           ;main.c: 222:                         if (analogMode) {
  7687  009E  0878               	movf	_analogMode,w
  7688  009F  1903               	btfsc	3,2
  7689  00A0  28A2               	goto	u151_21
  7690  00A1  28A3               	goto	u151_20
  7691  00A2                     u151_21:	
  7692  00A2  2893               	goto	i1l2290
  7693  00A3                     u151_20:	
  7694  00A3  287F               	goto	i1l2284
  7695  00A4                     i1l2306:	
  7696                           
  7697                           ;main.c: 247:                         pollController(response);
  7698  00A4  3057               	movlw	(low (_response| 0))& (0+255)
  7699  00A5  3186  266F  3180   	fcall	_pollController
  7700  00A8                     i1l2308:	
  7701                           
  7702                           ;main.c: 248:                         previousCmd = cmd;
  7703  00A8  0874               	movf	PS2Command@cmd,w
  7704  00A9  00F2               	movwf	??_PS2Command
  7705  00AA  0872               	movf	??_PS2Command,w
  7706  00AB  00F5               	movwf	_previousCmd
  7707                           
  7708                           ;main.c: 251:                         break;
  7709  00AC  2954               	goto	i1l2382
  7710  00AD                     i1l2310:	
  7711                           
  7712                           ;main.c: 259:                         pollController(response);
  7713  00AD  3057               	movlw	(low (_response| 0))& (0+255)
  7714  00AE  3186  266F  3180   	fcall	_pollController
  7715  00B1  28A8               	goto	i1l2308
  7716  00B2                     i1l2314:	
  7717                           
  7718                           ;main.c: 269:                         response[2] = 0x00;
  7719  00B2  0020               	movlb	0	; select bank0
  7720  00B3  01D9               	clrf	_response+2
  7721                           
  7722                           ;main.c: 270:                         response[3] = 0x00;
  7723  00B4  01DA               	clrf	_response+3
  7724                           
  7725                           ;main.c: 271:                         response[4] = 0x00;
  7726  00B5  01DB               	clrf	_response+4
  7727                           
  7728                           ;main.c: 272:                         response[5] = 0x00;
  7729  00B6  01DC               	clrf	_response+5
  7730                           
  7731                           ;main.c: 273:                         response[6] = 0x00;
  7732  00B7  01DD               	clrf	_response+6
  7733                           
  7734                           ;main.c: 274:                         response[7] = 0x00;
  7735  00B8  01DE               	clrf	_response+7
  7736  00B9  28A8               	goto	i1l2308
  7737  00BA                     i1l2318:	
  7738                           
  7739                           ;main.c: 288:                         response[2] = 0xC0;
  7740  00BA  30C0               	movlw	192
  7741  00BB  00F2               	movwf	??_PS2Command
  7742  00BC  0872               	movf	??_PS2Command,w
  7743  00BD  0020               	movlb	0	; select bank0
  7744  00BE  00D9               	movwf	_response+2
  7745                           
  7746                           ;main.c: 289:                         response[3] = 0x40;
  7747  00BF  3040               	movlw	64
  7748  00C0  00F2               	movwf	??_PS2Command
  7749  00C1  0872               	movf	??_PS2Command,w
  7750  00C2  00DA               	movwf	_response+3
  7751  00C3                     i1l2320:	
  7752                           
  7753                           ;main.c: 291:                         if (analogMode)
  7754  00C3  0878               	movf	_analogMode,w
  7755  00C4  1903               	btfsc	3,2
  7756  00C5  28C7               	goto	u152_21
  7757  00C6  28C8               	goto	u152_20
  7758  00C7                     u152_21:	
  7759  00C7  28CD               	goto	i1l2324
  7760  00C8                     u152_20:	
  7761  00C8                     i1l2322:	
  7762                           
  7763                           ;main.c: 292:                             response[4] = 0x80;
  7764  00C8  3080               	movlw	128
  7765  00C9  00F2               	movwf	??_PS2Command
  7766  00CA  0872               	movf	??_PS2Command,w
  7767  00CB  00DB               	movwf	_response+4
  7768  00CC  28CE               	goto	i1l2326
  7769  00CD                     i1l2324:	
  7770                           
  7771                           ;main.c: 294:                             response[4] = 0x00;
  7772  00CD  01DB               	clrf	_response+4
  7773  00CE                     i1l2326:	
  7774                           
  7775                           ;main.c: 296:                         response[5] = 0x40;
  7776  00CE  3040               	movlw	64
  7777  00CF  00F2               	movwf	??_PS2Command
  7778  00D0  0872               	movf	??_PS2Command,w
  7779  00D1  00DC               	movwf	_response+5
  7780  00D2                     i1l2328:	
  7781                           
  7782                           ;main.c: 297:                         response[6] = 0x80;
  7783  00D2  3080               	movlw	128
  7784  00D3  00F2               	movwf	??_PS2Command
  7785  00D4  0872               	movf	??_PS2Command,w
  7786  00D5  00DD               	movwf	_response+6
  7787                           
  7788                           ;main.c: 298:                         response[7] = 0x00;
  7789  00D6  01DE               	clrf	_response+7
  7790                           
  7791                           ;main.c: 301:                         break;
  7792  00D7  2954               	goto	i1l2382
  7793  00D8                     i1l2330:	
  7794                           
  7795                           ;main.c: 309:                         response[2] = 0x00;
  7796  00D8  0020               	movlb	0	; select bank0
  7797  00D9  01D9               	clrf	_response+2
  7798                           
  7799                           ;main.c: 310:                         response[3] = 0x00;
  7800  00DA  01DA               	clrf	_response+3
  7801  00DB                     i1l2332:	
  7802                           
  7803                           ;main.c: 311:                         response[4] = 0x80;
  7804  00DB  3080               	movlw	128
  7805  00DC  00F2               	movwf	??_PS2Command
  7806  00DD  0872               	movf	??_PS2Command,w
  7807  00DE  00DB               	movwf	_response+4
  7808  00DF                     i1l2334:	
  7809                           
  7810                           ;main.c: 312:                         response[5] = 0x80;
  7811  00DF  3080               	movlw	128
  7812  00E0  00F2               	movwf	??_PS2Command
  7813  00E1  0872               	movf	??_PS2Command,w
  7814  00E2  00DC               	movwf	_response+5
  7815  00E3                     i1l2336:	
  7816                           
  7817                           ;main.c: 313:                         response[6] = 0x80;
  7818  00E3  3080               	movlw	128
  7819  00E4  00F2               	movwf	??_PS2Command
  7820  00E5  0872               	movf	??_PS2Command,w
  7821  00E6  00DD               	movwf	_response+6
  7822  00E7                     i1l2338:	
  7823                           
  7824                           ;main.c: 314:                         response[7] = 0x50;
  7825  00E7  3050               	movlw	80
  7826  00E8  00F2               	movwf	??_PS2Command
  7827  00E9  0872               	movf	??_PS2Command,w
  7828  00EA  00DE               	movwf	_response+7
  7829                           
  7830                           ;main.c: 316:                         break;
  7831  00EB  2954               	goto	i1l2382
  7832  00EC                     i1l2340:	
  7833                           
  7834                           ;main.c: 325:                         response[2] = 0x00;
  7835  00EC  0020               	movlb	0	; select bank0
  7836  00ED  01D9               	clrf	_response+2
  7837                           
  7838                           ;main.c: 326:                         response[3] = 0x00;
  7839  00EE  01DA               	clrf	_response+3
  7840  00EF                     i1l2342:	
  7841                           
  7842                           ;main.c: 327:                         response[4] = 0x40;
  7843  00EF  3040               	movlw	64
  7844  00F0  00F2               	movwf	??_PS2Command
  7845  00F1  0872               	movf	??_PS2Command,w
  7846  00F2  00DB               	movwf	_response+4
  7847  00F3                     i1l2344:	
  7848                           
  7849                           ;main.c: 328:                         response[5] = 0x00;
  7850  00F3  01DC               	clrf	_response+5
  7851                           
  7852                           ;main.c: 329:                         response[6] = 0x80;
  7853  00F4  3080               	movlw	128
  7854  00F5  00F2               	movwf	??_PS2Command
  7855  00F6  0872               	movf	??_PS2Command,w
  7856  00F7  00DD               	movwf	_response+6
  7857  00F8  2845               	goto	i1l2260
  7858  00F9                     i1l2348:	
  7859                           
  7860                           ;main.c: 342:                         response[2] = 0x00;
  7861  00F9  0020               	movlb	0	; select bank0
  7862  00FA  01D9               	clrf	_response+2
  7863                           
  7864                           ;main.c: 343:                         response[3] = 0x00;
  7865  00FB  01DA               	clrf	_response+3
  7866                           
  7867                           ;main.c: 344:                         response[4] = 0x00;
  7868  00FC  01DB               	clrf	_response+4
  7869  00FD                     i1l2350:	
  7870                           
  7871                           ;main.c: 345:                         response[5] = 0x20;
  7872  00FD  3020               	movlw	32
  7873  00FE  00F2               	movwf	??_PS2Command
  7874  00FF  0872               	movf	??_PS2Command,w
  7875  0100  00DC               	movwf	_response+5
  7876  0101                     i1l2352:	
  7877                           
  7878                           ;main.c: 346:                         response[6] = 0x00;
  7879  0101  01DD               	clrf	_response+6
  7880  0102                     i1l2354:	
  7881                           
  7882                           ;main.c: 347:                         response[7] = 0x00;
  7883  0102  01DE               	clrf	_response+7
  7884  0103  28A8               	goto	i1l2308
  7885  0104                     i1l2358:	
  7886                           
  7887                           ;main.c: 361:                         response[2] = 0x00;
  7888  0104  0020               	movlb	0	; select bank0
  7889  0105  01D9               	clrf	_response+2
  7890  0106                     i1l2360:	
  7891                           
  7892                           ;main.c: 362:                         response[3] = 0x01;
  7893  0106  01DA               	clrf	_response+3
  7894  0107  0ADA               	incf	_response+3,f
  7895  0108                     i1l2362:	
  7896                           
  7897                           ;main.c: 363:                         response[4] = 0xFF;
  7898  0108  30FF               	movlw	255
  7899  0109  00F2               	movwf	??_PS2Command
  7900  010A  0872               	movf	??_PS2Command,w
  7901  010B  00DB               	movwf	_response+4
  7902  010C                     i1l2364:	
  7903                           
  7904                           ;main.c: 364:                         response[5] = 0xFF;
  7905  010C  30FF               	movlw	255
  7906  010D  00F2               	movwf	??_PS2Command
  7907  010E  0872               	movf	??_PS2Command,w
  7908  010F  00DC               	movwf	_response+5
  7909  0110                     i1l2366:	
  7910                           
  7911                           ;main.c: 365:                         response[6] = 0xFF;
  7912  0110  30FF               	movlw	255
  7913  0111  00F2               	movwf	??_PS2Command
  7914  0112  0872               	movf	??_PS2Command,w
  7915  0113  00DD               	movwf	_response+6
  7916  0114                     i1l2368:	
  7917                           
  7918                           ;main.c: 366:                         response[7] = 0xFF;
  7919  0114  30FF               	movlw	255
  7920  0115  00F2               	movwf	??_PS2Command
  7921  0116  0872               	movf	??_PS2Command,w
  7922  0117  00DE               	movwf	_response+7
  7923                           
  7924                           ;main.c: 368:                         break;
  7925  0118  2954               	goto	i1l2382
  7926  0119                     i1l2376:	
  7927  0119  0874               	movf	PS2Command@cmd,w
  7928  011A  00F2               	movwf	??_PS2Command
  7929  011B  01F3               	clrf	??_PS2Command+1
  7930                           
  7931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7932                           ; Switch size 1, requested type "simple"
  7933                           ; Number of cases is 1, Range of values is 0 to 0
  7934                           ; switch strategies available:
  7935                           ; Name         Instructions Cycles
  7936                           ; simple_byte            4     3 (average)
  7937                           ; direct_byte            8     6 (fixed)
  7938                           ; jumptable            260     6 (fixed)
  7939                           ;	Chosen strategy is simple_byte
  7940  011C  0873               	movf	??_PS2Command+1,w
  7941  011D  3A00               	xorlw	0	; case 0
  7942  011E  1903               	skipnz
  7943  011F  2921               	goto	i1l3134
  7944  0120  2954               	goto	i1l2382
  7945  0121                     i1l3134:	
  7946                           
  7947                           ; Switch size 1, requested type "simple"
  7948                           ; Number of cases is 11, Range of values is 2 to 242
  7949                           ; switch strategies available:
  7950                           ; Name         Instructions Cycles
  7951                           ; simple_byte           34    18 (average)
  7952                           ; jumptable            263     9 (fixed)
  7953                           ;	Chosen strategy is simple_byte
  7954  0121  0872               	movf	??_PS2Command,w
  7955  0122  3A02               	xorlw	2	; case 2
  7956  0123  1903               	skipnz
  7957  0124  287A               	goto	i1l2282
  7958  0125  3A10               	xorlw	16	; case 18
  7959  0126  1903               	skipnz
  7960  0127  289E               	goto	i1l2294
  7961  0128  3A30               	xorlw	48	; case 34
  7962  0129  1903               	skipnz
  7963  012A  28B2               	goto	i1l2314
  7964  012B  3A10               	xorlw	16	; case 50
  7965  012C  1903               	skipnz
  7966  012D  28F9               	goto	i1l2348
  7967  012E  3A70               	xorlw	112	; case 66
  7968  012F  1903               	skipnz
  7969  0130  28A4               	goto	i1l2306
  7970  0131  3A20               	xorlw	32	; case 98
  7971  0132  1903               	skipnz
  7972  0133  28D8               	goto	i1l2330
  7973  0134  3AC0               	xorlw	192	; case 162
  7974  0135  1903               	skipnz
  7975  0136  28BA               	goto	i1l2318
  7976  0137  3A10               	xorlw	16	; case 178
  7977  0138  1903               	skipnz
  7978  0139  2904               	goto	i1l2358
  7979  013A  3A70               	xorlw	112	; case 194
  7980  013B  1903               	skipnz
  7981  013C  28AD               	goto	i1l2310
  7982  013D  3A20               	xorlw	32	; case 226
  7983  013E  1903               	skipnz
  7984  013F  28EC               	goto	i1l2340
  7985  0140  3A10               	xorlw	16	; case 242
  7986  0141  1903               	skipnz
  7987  0142  2893               	goto	i1l2290
  7988  0143  2954               	goto	i1l2382
  7989  0144                     i1l2380:	
  7990  0144  0876               	movf	_cmdCounter,w
  7991  0145  00F2               	movwf	??_PS2Command
  7992  0146  01F3               	clrf	??_PS2Command+1
  7993                           
  7994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7995                           ; Switch size 1, requested type "simple"
  7996                           ; Number of cases is 1, Range of values is 0 to 0
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte            4     3 (average)
  8000                           ; direct_byte            8     6 (fixed)
  8001                           ; jumptable            260     6 (fixed)
  8002                           ;	Chosen strategy is simple_byte
  8003  0147  0873               	movf	??_PS2Command+1,w
  8004  0148  3A00               	xorlw	0	; case 0
  8005  0149  1903               	skipnz
  8006  014A  294C               	goto	i1l3136
  8007  014B  2919               	goto	i1l2376
  8008  014C                     i1l3136:	
  8009                           
  8010                           ; Switch size 1, requested type "simple"
  8011                           ; Number of cases is 2, Range of values is 3 to 4
  8012                           ; switch strategies available:
  8013                           ; Name         Instructions Cycles
  8014                           ; simple_byte            7     4 (average)
  8015                           ; direct_byte           13     9 (fixed)
  8016                           ; jumptable            263     9 (fixed)
  8017                           ;	Chosen strategy is simple_byte
  8018  014C  0872               	movf	??_PS2Command,w
  8019  014D  3A03               	xorlw	3	; case 3
  8020  014E  1903               	skipnz
  8021  014F  2850               	goto	i1l2272
  8022  0150  3A07               	xorlw	7	; case 4
  8023  0151  1903               	skipnz
  8024  0152  286A               	goto	i1l2280
  8025  0153  2919               	goto	i1l2376
  8026  0154                     i1l2382:	
  8027                           
  8028                           ;main.c: 393:         if (escapeMode) {
  8029  0154  0020               	movlb	0	; select bank0
  8030  0155  086F               	movf	_escapeMode,w
  8031  0156  1903               	btfsc	3,2
  8032  0157  2959               	goto	u153_21
  8033  0158  295A               	goto	u153_20
  8034  0159                     u153_21:	
  8035  0159  295F               	goto	i1l2386
  8036  015A                     u153_20:	
  8037  015A                     i1l2384:	
  8038                           
  8039                           ;main.c: 394:             response[0] = 0xCF;
  8040  015A  30CF               	movlw	207
  8041  015B  00F2               	movwf	??_PS2Command
  8042  015C  0872               	movf	??_PS2Command,w
  8043  015D  00D7               	movwf	_response
  8044                           
  8045                           ;main.c: 395:         } else {
  8046  015E  296D               	goto	i1l2392
  8047  015F                     i1l2386:	
  8048                           
  8049                           ;main.c: 397:             if (analogMode)
  8050  015F  0878               	movf	_analogMode,w
  8051  0160  1903               	btfsc	3,2
  8052  0161  2963               	goto	u154_21
  8053  0162  2964               	goto	u154_20
  8054  0163                     u154_21:	
  8055  0163  2969               	goto	i1l2390
  8056  0164                     u154_20:	
  8057  0164                     i1l2388:	
  8058                           
  8059                           ;main.c: 398:                 response[0] = 0x9E;
  8060  0164  309E               	movlw	158
  8061  0165  00F2               	movwf	??_PS2Command
  8062  0166  0872               	movf	??_PS2Command,w
  8063  0167  00D7               	movwf	_response
  8064  0168  296D               	goto	i1l2392
  8065  0169                     i1l2390:	
  8066                           
  8067                           ;main.c: 400:                 response[0] = 0x82;
  8068  0169  3082               	movlw	130
  8069  016A  00F2               	movwf	??_PS2Command
  8070  016B  0872               	movf	??_PS2Command,w
  8071  016C  00D7               	movwf	_response
  8072  016D                     i1l2392:	
  8073                           
  8074                           ;main.c: 406:         spiWrite(response[cmdCounter]);
  8075  016D  0876               	movf	_cmdCounter,w
  8076  016E  3E57               	addlw	(low (_response| 0))& (0+255)
  8077  016F  0086               	movwf	6
  8078  0170  0187               	clrf	7
  8079  0171  0801               	movf	1,w
  8080  0172  318E  2633  3180   	fcall	_spiWrite
  8081  0175                     i1l2394:	
  8082                           
  8083                           ;main.c: 409:         if (cmdCounter < responseLength) {
  8084  0175  0020               	movlb	0	; select bank0
  8085  0176  0850               	movf	_responseLength,w
  8086  0177  0276               	subwf	_cmdCounter,w
  8087  0178  1803               	skipnc
  8088  0179  297B               	goto	u155_21
  8089  017A  297C               	goto	u155_20
  8090  017B                     u155_21:	
  8091  017B  2980               	goto	i1l2398
  8092  017C                     u155_20:	
  8093  017C                     i1l2396:	
  8094                           
  8095                           ;main.c: 410:             cmdCounter++;
  8096  017C  3001               	movlw	1
  8097  017D  00F2               	movwf	??_PS2Command
  8098  017E  0872               	movf	??_PS2Command,w
  8099  017F  07F6               	addwf	_cmdCounter,f
  8100  0180                     i1l2398:	
  8101                           
  8102                           ;main.c: 414:         RA4 = 0;
  8103  0180  120C               	bcf	12,4	;volatile
  8104  0181                     i1l2400:	
  8105                           
  8106                           ;main.c: 415:         _delay((unsigned long)((1)*(32000000/4000000.0)));
  8107  0181  3200               	nop2	;2 cycle nop
  8108  0182  3200               	nop2	;2 cycle nop
  8109  0183  3200               	nop2	;2 cycle nop
  8110  0184  3200               	nop2	;2 cycle nop
  8111  0185                     i1l2402:	
  8112                           
  8113                           ;main.c: 416:         RA4 = 1;
  8114  0185  0020               	movlb	0	; select bank0
  8115  0186  160C               	bsf	12,4	;volatile
  8116  0187                     i1l2404:	
  8117                           
  8118                           ;main.c: 418:         SSP1IF = 0;
  8119  0187  002E               	movlb	14	; select bank14
  8120  0188  100F               	bcf	15,0	;volatile
  8121                           
  8122                           ;main.c: 420:     }
  8123  0189  299D               	goto	i1l162
  8124  018A                     i1l107:	
  8125                           ;main.c: 421:     else if(TMR0IF)
  8126                           
  8127  018A  1E8C               	btfss	12,5	;volatile
  8128  018B  298D               	goto	u156_21
  8129  018C  298E               	goto	u156_20
  8130  018D                     u156_21:	
  8131  018D  299D               	goto	i1l162
  8132  018E                     u156_20:	
  8133  018E                     i1l2406:	
  8134                           
  8135                           ;main.c: 422:     {;main.c: 425:         if( PORTDbits.RD5 == 1)
  8136  018E  0020               	movlb	0	; select bank0
  8137  018F  1E8F               	btfss	15,5	;volatile
  8138  0190  2992               	goto	u157_21
  8139  0191  2993               	goto	u157_20
  8140  0192                     u157_21:	
  8141  0192  2998               	goto	i1l160
  8142  0193                     u157_20:	
  8143  0193                     i1l2408:	
  8144                           
  8145                           ;main.c: 426:         {;main.c: 427:             PORTDbits.RD5 = 0;
  8146  0193  128F               	bcf	15,5	;volatile
  8147  0194                     i1l2410:	
  8148                           
  8149                           ;main.c: 428:             TMR0 = PWMPeriod - PWMOn;
  8150  0194  086B               	movf	_PWMOn,w
  8151  0195  026D               	subwf	_PWMPeriod,w
  8152  0196  009C               	movwf	28	;volatile
  8153                           
  8154                           ;main.c: 429:         }
  8155  0197  299B               	goto	i1l2414
  8156  0198                     i1l160:	
  8157                           ;main.c: 430:         else
  8158                           
  8159                           
  8160                           ;main.c: 431:         {;main.c: 432:             PORTDbits.RD5 = 1;
  8161  0198  168F               	bsf	15,5	;volatile
  8162  0199                     i1l2412:	
  8163                           
  8164                           ;main.c: 433:             TMR0 = PWMOn;
  8165  0199  086B               	movf	_PWMOn,w
  8166  019A  009C               	movwf	28	;volatile
  8167  019B                     i1l2414:	
  8168                           
  8169                           ;main.c: 435:         TMR0IF = 0;
  8170  019B  002E               	movlb	14	; select bank14
  8171  019C  128C               	bcf	12,5	;volatile
  8172  019D                     i1l162:	
  8173  019D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8174  019E  0009               	retfie
  8175  019F                     __end_of_PS2Command:	
  8176                           
  8177                           	psect	text20
  8178  0E33                     __ptext20:	
  8179 ;; *************** function _spiWrite *****************
  8180 ;; Defined at:
  8181 ;;		line 32 in file "Spi.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  dat             1    wreg     unsigned char 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  dat             1    0[COMMON] unsigned char 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		wreg
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8199 ;;Total ram usage:        1 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_PS2Command
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           
  8209                           ;psect for function _spiWrite
  8210  0E33                     _spiWrite:	
  8211                           
  8212                           ;incstack = 0
  8213                           ; Regs used in _spiWrite: [wreg]
  8214                           ;spiWrite@dat stored from wreg
  8215  0E33  00F0               	movwf	spiWrite@dat
  8216  0E34                     i1l2076:	
  8217                           
  8218                           ;Spi.c: 32: void spiWrite(char dat);Spi.c: 33: {;Spi.c: 34:     SSP1BUF = dat;
  8219  0E34  0870               	movf	spiWrite@dat,w
  8220  0E35  0023               	movlb	3	; select bank3
  8221  0E36  008C               	movwf	12	;volatile
  8222  0E37                     i1l422:	
  8223  0E37  0008               	return
  8224  0E38                     __end_of_spiWrite:	
  8225                           
  8226                           	psect	text21
  8227  0E3E                     __ptext21:	
  8228 ;; *************** function _spiRead *****************
  8229 ;; Defined at:
  8230 ;;		line 37 in file "Spi.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;		None
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      unsigned char 
  8237 ;; Registers used:
  8238 ;;		wreg, status,2, status,0, pclath, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    1
  8251 ;; This function calls:
  8252 ;;		_spiReceiveWait
  8253 ;; This function is called by:
  8254 ;;		_PS2Command
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           
  8259                           ;psect for function _spiRead
  8260  0E3E                     _spiRead:	
  8261  0E3E                     i1l2070:	
  8262                           ;incstack = 0
  8263                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8264                           
  8265                           
  8266                           ;Spi.c: 39:     spiReceiveWait();
  8267  0E3E  318E  2638  318E   	fcall	_spiReceiveWait
  8268  0E41                     i1l2072:	
  8269                           
  8270                           ;Spi.c: 40:     return(SSP1BUF);
  8271  0E41  0023               	movlb	3	; select bank3
  8272  0E42  080C               	movf	12,w	;volatile
  8273  0E43                     i1l425:	
  8274  0E43  0008               	return
  8275  0E44                     __end_of_spiRead:	
  8276                           
  8277                           	psect	text22
  8278  0E38                     __ptext22:	
  8279 ;; *************** function _spiReceiveWait *****************
  8280 ;; Defined at:
  8281 ;;		line 27 in file "Spi.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		None
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_spiRead
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           
  8309                           ;psect for function _spiReceiveWait
  8310  0E38                     _spiReceiveWait:	
  8311  0E38                     i1l2022:	
  8312                           ;incstack = 0
  8313                           ; Regs used in _spiReceiveWait: []
  8314                           
  8315  0E38                     i1l416:	
  8316                           ;Spi.c: 29:     while ( !SSP1STATbits.BF );
  8317                           
  8318  0E38  0023               	movlb	3	; select bank3
  8319  0E39  1C0F               	btfss	15,0	;volatile
  8320  0E3A  2E3C               	goto	u122_21
  8321  0E3B  2E3D               	goto	u122_20
  8322  0E3C                     u122_21:	
  8323  0E3C  2E38               	goto	i1l416
  8324  0E3D                     u122_20:	
  8325  0E3D                     i1l419:	
  8326  0E3D  0008               	return
  8327  0E3E                     __end_of_spiReceiveWait:	
  8328                           
  8329                           	psect	text23
  8330  066F                     __ptext23:	
  8331 ;; *************** function _pollController *****************
  8332 ;; Defined at:
  8333 ;;		line 67 in file "main.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  response        1    wreg     PTR unsigned char 
  8336 ;;		 -> response(20), 
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;  response        1    1[COMMON] PTR unsigned char 
  8339 ;;		 -> response(20), 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      void 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8353 ;;Total ram usage:        2 bytes
  8354 ;; Hardware stack levels used:    1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_PS2Command
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           
  8363                           ;psect for function _pollController
  8364  066F                     _pollController:	
  8365                           
  8366                           ;incstack = 0
  8367                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  8368                           ;pollController@response stored from wreg
  8369  066F  00F1               	movwf	pollController@response
  8370  0670                     i1l2028:	
  8371                           
  8372                           ;main.c: 69:     responseLength = 5;
  8373  0670  3005               	movlw	5
  8374  0671  00F0               	movwf	??_pollController
  8375  0672  0870               	movf	??_pollController,w
  8376  0673  0020               	movlb	0	; select bank0
  8377  0674  00D0               	movwf	_responseLength
  8378  0675                     i1l2030:	
  8379                           
  8380                           ;main.c: 71:     response[2] = digitalStateFirst;
  8381  0675  0856               	movf	_digitalStateFirst,w
  8382  0676  00F0               	movwf	??_pollController
  8383  0677  0871               	movf	pollController@response,w
  8384  0678  3E02               	addlw	2
  8385  0679  0086               	movwf	6
  8386  067A  0187               	clrf	7
  8387  067B  0870               	movf	??_pollController,w
  8388  067C  0081               	movwf	1
  8389  067D                     i1l2032:	
  8390                           
  8391                           ;main.c: 72:     response[3] = digitalStateSecond;
  8392  067D  0855               	movf	_digitalStateSecond,w
  8393  067E  00F0               	movwf	??_pollController
  8394  067F  0871               	movf	pollController@response,w
  8395  0680  3E03               	addlw	3
  8396  0681  0086               	movwf	6
  8397  0682  0187               	clrf	7
  8398  0683  0870               	movf	??_pollController,w
  8399  0684  0081               	movwf	1
  8400  0685                     i1l2034:	
  8401                           
  8402                           ;main.c: 74:     response[4] = rxData;
  8403  0685  0879               	movf	_rxData,w
  8404  0686  00F0               	movwf	??_pollController
  8405  0687  0871               	movf	pollController@response,w
  8406  0688  3E04               	addlw	4
  8407  0689  0086               	movwf	6
  8408  068A  0187               	clrf	7
  8409  068B  0870               	movf	??_pollController,w
  8410  068C  0081               	movwf	1
  8411  068D                     i1l2036:	
  8412                           
  8413                           ;main.c: 75:     response[5] = ryData;
  8414  068D  0854               	movf	_ryData,w
  8415  068E  00F0               	movwf	??_pollController
  8416  068F  0871               	movf	pollController@response,w
  8417  0690  3E05               	addlw	5
  8418  0691  0086               	movwf	6
  8419  0692  0187               	clrf	7
  8420  0693  0870               	movf	??_pollController,w
  8421  0694  0081               	movwf	1
  8422  0695                     i1l2038:	
  8423                           
  8424                           ;main.c: 76:     response[6] = lxData;
  8425  0695  0853               	movf	_lxData,w
  8426  0696  00F0               	movwf	??_pollController
  8427  0697  0871               	movf	pollController@response,w
  8428  0698  3E06               	addlw	6
  8429  0699  0086               	movwf	6
  8430  069A  0187               	clrf	7
  8431  069B  0870               	movf	??_pollController,w
  8432  069C  0081               	movwf	1
  8433  069D                     i1l2040:	
  8434                           
  8435                           ;main.c: 77:     response[7] = lyData;
  8436  069D  0852               	movf	_lyData,w
  8437  069E  00F0               	movwf	??_pollController
  8438  069F  0871               	movf	pollController@response,w
  8439  06A0  3E07               	addlw	7
  8440  06A1  0086               	movwf	6
  8441  06A2  0187               	clrf	7
  8442  06A3  0870               	movf	??_pollController,w
  8443  06A4  0081               	movwf	1
  8444  06A5                     i1l2042:	
  8445                           
  8446                           ;main.c: 79:     if (analogMode) {
  8447  06A5  0878               	movf	_analogMode,w
  8448  06A6  1903               	btfsc	3,2
  8449  06A7  2EA9               	goto	u123_21
  8450  06A8  2EAA               	goto	u123_20
  8451  06A9                     u123_21:	
  8452  06A9  2F0F               	goto	i1l102
  8453  06AA                     u123_20:	
  8454  06AA                     i1l2044:	
  8455                           
  8456                           ;main.c: 81:         responseLength = 20;
  8457  06AA  3014               	movlw	20
  8458  06AB  00F0               	movwf	??_pollController
  8459  06AC  0870               	movf	??_pollController,w
  8460  06AD  00D0               	movwf	_responseLength
  8461  06AE                     i1l2046:	
  8462                           
  8463                           ;main.c: 83:         response[8] = analogStateFirst[2];
  8464  06AE  0021               	movlb	1	; select bank1
  8465  06AF  085A               	movf	(_analogStateFirst^(0+128)+2),w
  8466  06B0  00F0               	movwf	??_pollController
  8467  06B1  0871               	movf	pollController@response,w
  8468  06B2  3E08               	addlw	8
  8469  06B3  0086               	movwf	6
  8470  06B4  0187               	clrf	7
  8471  06B5  0870               	movf	??_pollController,w
  8472  06B6  0081               	movwf	1
  8473  06B7                     i1l2048:	
  8474                           
  8475                           ;main.c: 84:         response[9] = analogStateFirst[0];
  8476  06B7  0858               	movf	_analogStateFirst^(0+128),w
  8477  06B8  00F0               	movwf	??_pollController
  8478  06B9  0871               	movf	pollController@response,w
  8479  06BA  3E09               	addlw	9
  8480  06BB  0086               	movwf	6
  8481  06BC  0187               	clrf	7
  8482  06BD  0870               	movf	??_pollController,w
  8483  06BE  0081               	movwf	1
  8484  06BF                     i1l2050:	
  8485                           
  8486                           ;main.c: 85:         response[10] = analogStateFirst[3];
  8487  06BF  085B               	movf	(_analogStateFirst^(0+128)+3),w
  8488  06C0  00F0               	movwf	??_pollController
  8489  06C1  0871               	movf	pollController@response,w
  8490  06C2  3E0A               	addlw	10
  8491  06C3  0086               	movwf	6
  8492  06C4  0187               	clrf	7
  8493  06C5  0870               	movf	??_pollController,w
  8494  06C6  0081               	movwf	1
  8495  06C7                     i1l2052:	
  8496                           
  8497                           ;main.c: 86:         response[11] = analogStateFirst[1];
  8498  06C7  0859               	movf	(_analogStateFirst^(0+128)+1),w
  8499  06C8  00F0               	movwf	??_pollController
  8500  06C9  0871               	movf	pollController@response,w
  8501  06CA  3E0B               	addlw	11
  8502  06CB  0086               	movwf	6
  8503  06CC  0187               	clrf	7
  8504  06CD  0870               	movf	??_pollController,w
  8505  06CE  0081               	movwf	1
  8506  06CF                     i1l2054:	
  8507                           
  8508                           ;main.c: 87:         response[12] = analogStateSecond[3];
  8509  06CF  0853               	movf	(_analogStateSecond^(0+128)+3),w
  8510  06D0  00F0               	movwf	??_pollController
  8511  06D1  0871               	movf	pollController@response,w
  8512  06D2  3E0C               	addlw	12
  8513  06D3  0086               	movwf	6
  8514  06D4  0187               	clrf	7
  8515  06D5  0870               	movf	??_pollController,w
  8516  06D6  0081               	movwf	1
  8517  06D7                     i1l2056:	
  8518                           
  8519                           ;main.c: 88:         response[13] = analogStateSecond[2];
  8520  06D7  0852               	movf	(_analogStateSecond^(0+128)+2),w
  8521  06D8  00F0               	movwf	??_pollController
  8522  06D9  0871               	movf	pollController@response,w
  8523  06DA  3E0D               	addlw	13
  8524  06DB  0086               	movwf	6
  8525  06DC  0187               	clrf	7
  8526  06DD  0870               	movf	??_pollController,w
  8527  06DE  0081               	movwf	1
  8528  06DF                     i1l2058:	
  8529                           
  8530                           ;main.c: 89:         response[14] = analogStateSecond[1];
  8531  06DF  0851               	movf	(_analogStateSecond^(0+128)+1),w
  8532  06E0  00F0               	movwf	??_pollController
  8533  06E1  0871               	movf	pollController@response,w
  8534  06E2  3E0E               	addlw	14
  8535  06E3  0086               	movwf	6
  8536  06E4  0187               	clrf	7
  8537  06E5  0870               	movf	??_pollController,w
  8538  06E6  0081               	movwf	1
  8539  06E7                     i1l2060:	
  8540                           
  8541                           ;main.c: 90:         response[15] = analogStateSecond[0];
  8542  06E7  0850               	movf	_analogStateSecond^(0+128),w
  8543  06E8  00F0               	movwf	??_pollController
  8544  06E9  0871               	movf	pollController@response,w
  8545  06EA  3E0F               	addlw	15
  8546  06EB  0086               	movwf	6
  8547  06EC  0187               	clrf	7
  8548  06ED  0870               	movf	??_pollController,w
  8549  06EE  0081               	movwf	1
  8550  06EF                     i1l2062:	
  8551                           
  8552                           ;main.c: 91:         response[16] = analogStateSecond[5];
  8553  06EF  0855               	movf	(_analogStateSecond^(0+128)+5),w
  8554  06F0  00F0               	movwf	??_pollController
  8555  06F1  0871               	movf	pollController@response,w
  8556  06F2  3E10               	addlw	16
  8557  06F3  0086               	movwf	6
  8558  06F4  0187               	clrf	7
  8559  06F5  0870               	movf	??_pollController,w
  8560  06F6  0081               	movwf	1
  8561  06F7                     i1l2064:	
  8562                           
  8563                           ;main.c: 92:         response[17] = analogStateSecond[4];
  8564  06F7  0854               	movf	(_analogStateSecond^(0+128)+4),w
  8565  06F8  00F0               	movwf	??_pollController
  8566  06F9  0871               	movf	pollController@response,w
  8567  06FA  3E11               	addlw	17
  8568  06FB  0086               	movwf	6
  8569  06FC  0187               	clrf	7
  8570  06FD  0870               	movf	??_pollController,w
  8571  06FE  0081               	movwf	1
  8572  06FF                     i1l2066:	
  8573                           
  8574                           ;main.c: 93:         response[18] = analogStateSecond[7];
  8575  06FF  0857               	movf	(_analogStateSecond^(0+128)+7),w
  8576  0700  00F0               	movwf	??_pollController
  8577  0701  0871               	movf	pollController@response,w
  8578  0702  3E12               	addlw	18
  8579  0703  0086               	movwf	6
  8580  0704  0187               	clrf	7
  8581  0705  0870               	movf	??_pollController,w
  8582  0706  0081               	movwf	1
  8583  0707                     i1l2068:	
  8584                           
  8585                           ;main.c: 94:         response[19] = analogStateSecond[6];
  8586  0707  0856               	movf	(_analogStateSecond^(0+128)+6),w
  8587  0708  00F0               	movwf	??_pollController
  8588  0709  0871               	movf	pollController@response,w
  8589  070A  3E13               	addlw	19
  8590  070B  0086               	movwf	6
  8591  070C  0187               	clrf	7
  8592  070D  0870               	movf	??_pollController,w
  8593  070E  0081               	movwf	1
  8594  070F                     i1l102:	
  8595  070F  0008               	return
  8596  0710                     __end_of_pollController:	
  8597  007E                     btemp	set	126	;btemp
  8598  007E                     int$flags	set	126
  8599  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        29
    BSS         72
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     48      80
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->_pollController

Critical Paths under _main in BANK0

    _main->_lutInit
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _configureController->_readADC

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10240
                                             44 BANK0      4     4      0
                            _PwmInit
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _ppsLock
                          _ppsUnlock
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4182
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2785
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    3487
                                              9 BANK0     13    13      0
                        _eepromWrite
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PwmInit                                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _PS2Command                                           3     3      0     705
                                              2 COMMON     3     3      0
                     _pollController
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PwmInit
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _ppsLock
     _ppsUnlock
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      9A      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      9A      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 20 13:13:45 2020

                  __CFG_CP$OFF 0000                             l95 0E62                   ___awdiv@sign 002C  
          ___wmul@multiplicand 0022                    __CFG_LVP$ON 0000                            l302 03C9  
                          l311 0F69                            l400 0FA4                            l305 0F10  
                          l321 049A                            l330 052A                            l322 04A4  
                          l314 0779                            l323 04AE                            l308 0F32  
                          l324 04B8                            l412 0EA5                            l325 04C2  
                          l413 0EAA                            l326 04CC                            l327 04D6  
                          l272 0609                            l281 0F07                            l169 0FDC  
                          l442 07F1                            l274 062D                            l452 0E4A  
                          l444 07F6                            l276 0651                            l268 05A5  
                          l604 0ED1                            l446 07FE                            l278 066E  
                          l606 0EE5                            l391 0E51                            l449 0E96  
                          l394 0E59                            l397 0E6C                            l757 07D9  
                          _RA0 0060                            _RA1 0061                            _RB0 0068  
                          _RA2 0062                            _RB1 0069                            _RA3 0063  
                          _RA4 0064                            _RB2 006A                            _RA5 0065  
                          _RB3 006B                            _RA6 0066                            _RD0 0078  
                          _RC2 0072                            _RB4 006C                            _RA7 0067  
                          _RB5 006D                            _RB6 006E                            _RB7 006F  
                          _RD4 007C                   __CFG_CPD$OFF 0000                            u900 07AC  
                          u901 07AB                            u920 07BB                            u921 07BA  
                          u915 07AD                            u940 07CB                            u860 0780  
                          u941 07CA                            u925 07B7                            u861 077F  
                          u950 07D0                            u870 078B                            u951 07CF  
                          u935 07C1                            u871 078A                            u880 079C  
                          u881 079B                            u895 07A0                            _Map 0EE6  
                 __CFG_BORV$LO 0000                            wreg 0009                 eepromRead@data 0022  
                 __CFG_ZCD$OFF 0000                           ?_Map 002F                           l2700 0613  
                         l1900 07AC                           l2702 0625                           l1902 07BB  
                         l1910 07CB                           l2710 0EE6                           l2704 0637  
                         l1912 07D0                           l1904 07BF                           l2800 0F9F  
                         l2810 0E66                           l2650 0E44                           l2730 0F14  
                         l2722 0F08                           l2706 0649                           l1914 07D5  
                         l1906 07C0                           l2714 0E87                           l2802 0FA0  
                         l2812 0E67                           l2652 0E49                           l2740 07DC  
                         l2724 0F0C                           l2708 066A                           l2900 0460  
                         l1908 07C5                           l2660 0ED6                           l2716 0E89  
                         l2820 01D9                           l2804 0FA1                           l2814 0E68  
                         l2750 07E6                           l2742 07E0                           l2726 0F0D  
                         l2670 058C                           l2910 04B4                           l2902 0490  
                         l2662 0EDB                           l2654 0EC6                           l2718 0E8F  
                         l2830 0229                           l2822 0219                           l2806 0FA3  
                         l2734 0F35                           l2816 0E69                           l2808 0E63  
                         l2752 07EA                           l2744 07E1                           l2728 0F0F  
                         l2680 05B7                           l2672 0592                           l2912 04BE  
                         l2904 0496                           l2920 04E1                           l1880 0785  
                         l2664 0EE1                           l2656 0EC9                           l2840 0290  
                         l2832 0236                           l2760 0E4B                           l2736 0F68  
                         l2818 0E6B                           l2754 07EE                           l2746 07E3  
                         l2682 05C5                           l2690 05E0                           l2674 0593  
                         l2922 0528                           l2914 04C8                           l2906 04A0  
                         l1890 0796                           l1882 0787                           l1874 077A  
                         l2658 0ECD                           l2850 02F7                           l2842 029D  
                         l2834 0242                           l2762 0E50                           l2770 0EA1  
                         l2930 0FAB                           l2772 0E5A                           l2756 07F7  
                         l2748 07E4                           l2692 05EE                           l2684 05CA  
                         l2676 059C                           l2668 052D                           l2924 0529  
                         l2916 04D2                           l2908 04AA                           l1892 079C  
                         l1884 078B                           l1876 077C                           l2860 035E  
                         l2852 0304                           l2844 02A9                           l2836 0254  
                         l2828 021B                           l2764 0E52                           l2780 0F77  
                         l2940 0FBD                           l2932 0FAE                           l2774 0E5C  
                         l2758 07FD                           l2694 05F3                           l2686 05D6  
                         l2678 05AE                           l2918 04DC                           l1894 079F  
                         l1886 0790                           l1878 0780                           l2870 03BC  
                         l2862 036B                           l2854 0310                           l2846 02BB  
                         l2838 0283                           l2766 0E99                           l2790 0F93  
                         l2782 0F7A                           l2926 0710                           l2950 0FD3  
                         l2942 0FBE                           l2934 0FB6                           l2696 05FF  
                         l2688 05DB                           l2880 0438                           l2872 03CA  
                         l1896 07A4                           l1888 0794                           l2864 0377  
                         l2856 0322                           l2848 02EA                           l2768 0E9D  
                         l2792 0F95                           l2784 0F7B                           l2776 0F6A  
                         l2960 0FED                           l2952 0FD8                           l2944 0FC5  
                         l2936 0FBB                           l2928 0FA5                           l2698 0604  
                         l2890 0449                           l2882 043E                           l2874 03CC  
                         l1898 07A8                           l2866 0389                           l2858 0351  
                         l2794 0F96                           l2786 0F84                           l2778 0F75  
                         l2962 0FEE                           l2954 0FE2                           l2946 0FCB  
                         l2938 0FBC                           l2892 044E                           l2884 043F  
                         l2876 042D                           l2868 03B8                           l2796 0F99  
                         l2788 0F85                           l2964 0FF2                           l2956 0FE3  
                         l2948 0FCE                           l2886 0443                           l2894 0453  
                         l2878 0431                           l2798 0F9C                           l2966 0FF6  
                         l2958 0FE7                           l2896 0459                           l2888 0448  
                         l2968 0FFA                           u2000 0377                           u2001 0376  
                         u2010 03C9                           u2011 03C8                           u2100 04BE  
                         u2020 0438                           u2101 04BD                           u2021 0437  
                         u2005 0373                           u2110 04C8                           u2030 043E  
                         u2111 04C7                           u2031 043D                           u2015 03C5  
                         u2120 04D2                           u2040 0459                           u2121 04D1  
                         u2041 0458                           u2130 04DC                           u2050 045F  
                         u2131 04DB                           u2051 045E                           u2060 0496  
                         u2140 0FC5                           u2061 0495                           u2141 0FC4  
                         u2070 04A0                           u2150 0FCB                           u2071 049F  
                         u2151 0FCA                           u2080 04AA                           u2160 0FD8  
                         u2081 04A9                           u2161 0FD7                           u2090 04B4  
                         u2170 0FE2                           u2091 04B3                           u2171 0FE1  
                         u1700 05C5                           u2180 0FED                           u1701 05C4  
                         u2181 0FEC                           u1630 0ECD                           u1631 0ECC  
                         u1720 05DB                           u1721 05DA                           u1810 0649  
                         u1730 05EE                           u1714 05D0                           u1811 0648  
                         u1731 05ED                           u1715 05CF                           u1900 07F6  
                         u1820 0F14                           u1804 063D                           u1660 0EE1  
                         u1901 07F5                           u1821 0F13                           u1805 063C  
                         u1661 0EE0                           u1645 0ED2                           u1910 07FD  
                         u1750 0604                           u1670 0592                           u1911 07FC  
                         u1751 0603                           u1671 0591                           u1655 0ED7  
                         u1760 0613                           u1744 05F9                           u1680 059C  
                         u1920 0E9D                           u1761 0612                           u1745 05F8  
                         u1681 059B                           u1921 0E9C                           u1690 05AE  
                         u1930 0229                           u1835 0F18                           u1691 05AD  
                         u1931 0228                           u1780 0625                           u1940 0242  
                         u1845 0F24                           u1781 0624                           u1941 0241  
                         u1790 0637                           u1774 0619                           u1950 0290  
                         u1791 0636                           u1775 0618                           u1951 028F  
                         u1935 0225                           u1855 0F39                           u1960 02A9  
                         u1961 02A8                           u1945 023E                           u1865 0F3F  
                         u1970 02F7                           u1971 02F6                           u1955 028C  
                         u1875 0F4C                           u1980 0310                           u1981 030F  
                         u1965 02A5                           u1885 0F52                           u1990 035E  
                         u1991 035D                           u1975 02F3                           u1895 0F5F  
                         u1985 030C                           u1995 035A                           Map@x 002F  
                         _TMR0 001C                           _WPUA 0F39                           _WPUB 0F44  
                         _WPUC 0F4F                           _WPUD 0F5A                           _WPUE 0F65  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                           _main 0FA5  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 019F  
                  ?_PS2Command 0070                  __CFG_CSWEN$ON 0000                lutInit@position 004A  
                        ??_Map 0039       configureController@lxMax 002B       configureController@lxMin 002A  
     configureController@lyMax 002D       configureController@lyMin 002C       configureController@rxMax 002F  
     configureController@rxMin 002E       configureController@ryMax 0031       configureController@ryMin 0030  
              __end_of_PwmInit 0E63                          _ADACQ 009D                          ?_main 0070  
                        _ADCLK 0098                          _ADPCH 009E                __end_of_adcInit 0E6D  
                        _ADREF 009A                __end_of___awdiv 07DA                          _ADPRE 009C  
                __CFG_WDTE$OFF 0000                ___awdiv@divisor 0026       main@slaveSelectStatePrev 004D  
                        i1l102 070F                          i1l112 001B                          i1l107 018A  
                        i1l160 0198                          i1l162 019D                          i1l422 0E37  
                        i1l416 0E38                          i1l425 0E43                          i1l419 0E3D  
              ___awdiv@counter 002B                          _TRISA 0011                          _TRISB 0012  
                        _TRISC 0013                          _TRISD 0014                          _TRISE 0015  
                        _PWMOn 006B    __end_of_configureController 052B                __end_of_readADC 0F33  
              __end_of_picInit 0FA5                          _index 0077  __size_of_readControllerAnalog 006A  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 03CA                __end_of_ppsLock 0E5A  
              __end_of_spiInit 0EAB                __end_of_spiRead 0E44                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0074                 __CFG_MCLRE$OFF 0000  
              __initialization 01A1                   __end_of_main 1000                         ??_main 004C  
          __size_of_PS2Command 019B                         _ADCON0 0093                         _ADCON1 0094  
                       _ADCON2 0095                         _ADRESH 008D                         _ADRESL 008C  
             ___awdiv@dividend 0028                         _ANSELA 0F38                         _ANSELB 0F43  
                       _ANSELC 0F4E                         _ANSELD 0F59                         _ANSELE 0F64  
         _PreviousDigitalByte1 00B8           _PreviousDigitalByte2 00B0                         i1l2030 0675  
                       i1l2022 0E38                         i1l2040 069D                         i1l2032 067D  
                       i1l2050 06BF                         i1l2042 06A5                         i1l2034 0685  
                       _RC5PPS 0F25                         i1l2060 06E7                         i1l2052 06C7  
                       i1l2044 06AA                         i1l2036 068D                         i1l2028 0670  
                       i1l2062 06EF                         i1l2054 06CF                         i1l2046 06AE  
                       i1l2038 0695                         i1l2070 0E3E                         i1l2310 00AD  
                       i1l2064 06F7                         i1l2056 06D7                         i1l2048 06B7  
                       i1l2072 0E41                         i1l2400 0181                         i1l2320 00C3  
                       i1l2240 001E                         i1l2232 0006                         i1l2066 06FF  
                       i1l2058 06DF                         i1l2410 0194                         i1l2402 0185  
                       i1l2330 00D8                         i1l2322 00C8                         i1l2314 00B2  
                       i1l2306 00A4                         i1l3130 0058                         i1l2250 0034  
                       i1l2242 0024                         i1l2234 000B                         i1l2068 0707  
                       i1l2076 0E34                         i1l2412 0199                         i1l2404 0187  
                       i1l2340 00EC                         i1l2332 00DB                         i1l2324 00CD  
                       i1l2308 00A8                         i1l3132 0072                         i1l2260 0045  
                       i1l2252 0036                         i1l2244 0028                         i1l2236 0012  
                       i1l2414 019B                         i1l2406 018E                         i1l3134 0121  
                       i1l2350 00FD                         i1l2342 00EF                         i1l2334 00DF  
                       i1l2326 00CE                         i1l2318 00BA                         i1l2254 003C  
                       i1l2262 0047                         i1l2246 002B                         i1l2238 0018  
                       i1l2408 0193                         i1l3136 014C                         i1l2360 0106  
                       i1l2352 0101                         i1l2344 00F3                         i1l2336 00E3  
                       i1l2328 00D2                         i1l2280 006A                         i1l2272 0050  
                       i1l2264 004B                         i1l2256 0040                         i1l2248 0031  
                       i1l2362 0108                         i1l2354 0102                         i1l2338 00E7  
                       i1l2290 0093                         i1l2282 007A                         i1l2274 0069  
                       i1l2258 0044                         i1l2364 010C                         i1l2348 00F9  
                       i1l2292 0099                         i1l2284 007F                         i1l2380 0144  
                       i1l2390 0169                         i1l2366 0110                         i1l2358 0104  
                       i1l2294 009E                         i1l2286 008C                         i1l2382 0154  
                       u122_20 0E3D                         i1l2392 016D                         i1l2384 015A  
                       i1l2376 0119                         i1l2368 0114                         i1l2288 008D  
                       u122_21 0E3C                         i1l2394 0175                         i1l2386 015F  
                       i1l2396 017C                         i1l2388 0164                         i1l2398 0180  
                       u123_20 06AA                         u123_21 06A9                 __CFG_WDTCCS$SC 0000  
                       u150_20 007F                         u150_21 007E                         u151_20 00A3  
                       u151_21 00A2                         u152_20 00C8                         u152_21 00C7  
                       u153_20 015A                         u145_20 000B                         u153_21 0159  
                       u145_21 000A                         u154_20 0164                         u146_20 0018  
                       u154_21 0163                         u146_21 0017                         u155_20 017C  
                       u147_20 0024                         u155_21 017B                         u147_21 0023  
                       u156_20 018E                         u148_20 0031                         u156_21 018D  
                       u148_21 0030                         u157_20 0193                         u149_20 003C  
                       u157_21 0192                         u149_21 003B                         _TMR0IF 3865  
                       _SSP1IE 38C8                         _SSP1IF 3878                 __CFG_PWRTE$OFF 0000  
         __size_of_eepromWrite 0025                      ??_PwmInit 0022                         ___wmul 0EC6  
                    ??_adcInit 0020                      ??___awdiv 002A                 __CFG_STVREN$ON 0000  
      __size_of_pollController 00A1                         _lxData 0053                         _lyData 0052  
              eepromWrite@data 0020                         _rxData 0079               ___awdiv@quotient 002D  
                       _ryData 0054                   ?_reversebyte 0070                      ??_readADC 0022  
                    ??_picInit 0024                   __pdataCOMMON 0078                      ??_lutInit 0039  
             __end_of_spiWrite 0E38                      ??_ppsLock 0020                      ??_spiInit 0023  
                    ??_spiRead 0070              _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0  
      __end_of__initialization 01D5                 __pcstackCOMMON 0070                   __pidataBANK0 0EAB  
       _DigitalControllerByte1 00C8         _DigitalControllerByte2 00C0              eepromRead@address 0021  
      __size_of_readController 0144                     _cmdCounter 0076                     __pbssBANK0 006B  
                   __pbssBANK1 00A0                     _analogMode 0078                   ??_PS2Command 0072  
                   __pmaintext 0FA5                        ?___wmul 0020                     __pintentry 0004  
      __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000             __size_of_nvmUnlock 0007  
           __size_of_ppsUnlock 0007                     _eepromRead 0E85     eepromWrite@interruptStatus 0022  
                      _NVMADRH 081B                        _NVMADRL 081A                        _NVMDATL 081C  
                      _NVMCON2 081F             __end_of_PS2Command 019F                        _PPSLOCK 0E8F  
                      _SSP1BUF 018C                     _escapeMode 006F       readController@analogMode 0022  
                      _PwmInit 0E5A   __end_of_readControllerAnalog 077A                    PwmInit@idle 0020  
         __CFG_SCANE$available 0000                      ?_spiWrite 0070                        _adcInit 0E63  
                      ___awdiv 077A                 _pollController 066F                __size_of___wmul 0020  
                      __ptext1 0710                        __ptext2 0F33                        __ptext3 0F6A  
                      __ptext4 0E97                        __ptext5 0E4B                        __ptext6 0E52  
                      __ptext7 01D9                        __ptext8 0E85                        __ptext9 0EE6  
                      _readADC 0F08                   __size_of_Map 0022                        _picInit 0F6A  
         __size_of_reversebyte 0037                        _lutInit 01D9                        _ppsLock 0E52  
                      _spiInit 0E97                        _spiRead 0E3E                        clrloop0 0E6E  
         end_of_initialization 01D5                        init_ram 0E79   __size_of_configureController 0161  
                      initloop 0E7A              __end_of_nvmUnlock 0E4B              __end_of_ppsUnlock 0E52  
       __end_of_pollController 0710                     ??_spiWrite 0070                reversebyte@byte 0023  
        __CFG_WDTCPS$WDTCPS_31 0000                      Map@outMax 0037                      Map@outMin 0035  
                    _PORTDbits 000F                    ?_eepromRead 0070                 _readController 052B  
                    _TRISAbits 0011                      _TRISCbits 0013                      _TRISDbits 0014  
                    _PWMPeriod 006D                    spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000  
           _digitalStateSecond 0055                  ??_eepromWrite 0021                ?_pollController 0070  
               _spiReceiveWait 0E38                 __end_of___wmul 0EE6                  __pidataCOMMON 0002  
       __end_of_readController 066F            start_initialization 01A1                    __end_of_Map 0F08  
         _readControllerAnalog 0710                  _debounceLoops 0051            __size_of_eepromRead 0012  
             __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0E3E            __end_of_eepromWrite 07FF  
                     ??___wmul 0024                    __pdataBANK0 0050                ?_readController 0070  
                  __pbssBIGRAM 23F0                    __pbssCOMMON 0075                      ___latbits 0003  
                __pcstackBANK0 0020          configureController@lx 0032          configureController@ly 0033  
        configureController@rx 0034          configureController@ry 0035          ?_readControllerAnalog 0070  
               _responseLength 0050              _analogStateSecond 00D0                       ?_PwmInit 0020  
              ?_spiReceiveWait 0070                       ?_adcInit 0070                       ?___awdiv 0026  
             __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005            _configureController 03CA  
                     ?_readADC 0020                       ?_picInit 0070                       ?_lutInit 0070  
                     ?_ppsLock 0070                       ?_spiInit 0020                       ?_spiRead 0070  
           eepromWrite@address 0021           spiInit@sTransmitEdge 0022           ?_configureController 0070  
               ___wmul@product 0024                    _eepromWrite 07DA                      clear_ram0 0E6D  
           spiInit@sDataSample 0020                      _nvmUnlock 0E44                       Map@inMax 0033  
                     Map@inMin 0031                      _ppsUnlock 0E4B                       _SSP1CON1 0190  
                     _SSP1STAT 018F                  ??_reversebyte 0020                     _ADCON0bits 0093  
            ___wmul@multiplier 0020                   lutInit@lxMax 0043                   lutInit@lxMin 0042  
                 lutInit@lyMax 0045                   lutInit@lyMin 0044              _digitalStateFirst 0056  
                 lutInit@rxMax 0047                   lutInit@rxMin 0046                   lutInit@ryMax 0049  
                 lutInit@ryMin 0048                   ??_eepromRead 0020                      main@count 004E  
       ??_readControllerAnalog 0029          ??_configureController 0029               ??_pollController 0070  
           __end_of_eepromRead 0E97                     ?_nvmUnlock 0070                     ?_ppsUnlock 0070  
             __size_of_PwmInit 0009               __size_of_adcInit 000A               __size_of___awdiv 0060  
               readADC@channel 0020               _analogStateFirst 00D8               __size_of_readADC 002B  
             __size_of_picInit 003B            __end_of_reversebyte 0F6A               __size_of_lutInit 01F1  
                     __ptext10 0EC6                       __ptext11 077A                       __ptext20 0E33  
                     __ptext12 03CA                       __ptext21 0E3E                       __ptext13 052B  
                     __ptext22 0E38                       __ptext14 0F08                       __ptext23 066F  
                     __ptext15 07DA                       __ptext16 0E44                       __ptext17 0E63  
                     __ptext18 0E5A               __size_of_ppsLock 0008               __size_of_spiInit 0014  
             __size_of_spiRead 0006                  __size_of_main 005B           __CFG_WDTCWS$WDTCWS_7 0000  
                     _response 0057               ??_readController 0020                       _spiWrite 0E33  
                     int$flags 007E                   spiInit@sType 0023                main@slaveSelect 004F  
                 _SSP1STATbits 018F              spiInit@sClockIdle 0021                     _INTCONbits 000B  
                  _NVMCON1bits 081E         pollController@response 0071                       intlevel1 0000  
             ??_spiReceiveWait 0070              __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004  
                  ??_nvmUnlock 0020                    ??_ppsUnlock 0020                    _reversebyte 0F33  
                  _previousCmd 0075                   ?_eepromWrite 0020  
